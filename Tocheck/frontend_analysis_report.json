{
  "summary": {
    "total_files": 562,
    "status_counts": {
      "UNKNOWN": 110,
      "ERROR": 33,
      "MINIMAL": 39,
      "PARTIAL": 354,
      "FUNCTIONAL": 26
    },
    "functional_percentage": 4.6263345195729535,
    "feature_completeness": {
      "Core Platform": {
        "Dashboard": {
          "percentage": 66.66666666666666,
          "working": 12,
          "total": 18
        },
        "AgentOS Architecture Blueprint": {
          "percentage": 100.0,
          "working": 3,
          "total": 3
        },
        "Agent Command Centre": {
          "percentage": 71.57894736842105,
          "working": 68,
          "total": 95
        },
        "Document Chat": {
          "percentage": 83.33333333333334,
          "working": 15,
          "total": 18
        },
        "Ollama Agents": {
          "percentage": 60.0,
          "working": 9,
          "total": 15
        },
        "Ollama Terminal": {
          "percentage": 100.0,
          "working": 4,
          "total": 4
        },
        "AI Agents": {
          "percentage": 0,
          "working": 0,
          "total": 0
        },
        "Multi Agent Workspace": {
          "percentage": 94.66666666666667,
          "working": 71,
          "total": 75
        },
        "MCP Gateway": {
          "percentage": 66.66666666666666,
          "working": 2,
          "total": 3
        },
        "AI Marketplace": {
          "percentage": 66.66666666666666,
          "working": 2,
          "total": 3
        }
      },
      "Agent Use Cases": {
        "Risk Analytics": {
          "percentage": 100.0,
          "working": 1,
          "total": 1
        },
        "Architecture Design": {
          "percentage": 100.0,
          "working": 4,
          "total": 4
        },
        "Wealth Management": {
          "percentage": 90.9090909090909,
          "working": 10,
          "total": 11
        },
        "Customer Insights": {
          "percentage": 83.33333333333334,
          "working": 35,
          "total": 42
        },
        "Customer Analytics": {
          "percentage": 100.0,
          "working": 2,
          "total": 2
        }
      },
      "Monitoring & Control": {
        "Agent Control Panel": {
          "percentage": 100.0,
          "working": 1,
          "total": 1
        },
        "System Monitor": {
          "percentage": 0.0,
          "working": 0,
          "total": 2
        }
      }
    }
  },
  "categories": {
    "UNKNOWN": {
      "": [
        "src/App_test_individual_2.tsx",
        "src/App_test_individual_3.tsx",
        "src/App_test_individual_1.tsx",
        "src/App_minimal_core.tsx",
        "src/App_backup.tsx",
        "src/App_with_routing.tsx",
        "src/App.css",
        "src/App_minimal.tsx",
        "src/index.css",
        "src/App_working.tsx",
        "src/App_step1.tsx",
        "src/App_super_minimal.tsx",
        "src/App_without_problematic_components.tsx",
        "src/App_minimal_ui.tsx",
        "src/contexts/IndustryContext.tsx",
        "src/utils/memoryService.ts",
        "src/utils/ragService.ts",
        "src/utils/modelValidator.ts",
        "src/utils/vectorStore.ts",
        "src/utils/langchainService.ts",
        "src/utils/mem0Service.ts",
        "src/utils/modelContextProtocol.ts",
        "src/utils/models/modelTypes.ts",
        "src/utils/models/modelUtils.ts",
        "src/utils/models/modelDefinitions.ts",
        "src/integrations/supabase/types.ts",
        "src/integrations/supabase/client.ts",
        "src/components/InlineAgentChat.tsx",
        "src/components/ThinkingIndicator.tsx",
        "src/components/AgentCard.tsx",
        "src/components/GuardrailsPanel.tsx",
        "src/components/GlobalConnectionStatus.tsx",
        "src/components/GlobeBanner.tsx",
        "src/components/IndustrySwitcher.tsx",
        "src/components/BackendControl.tsx",
        "src/components/BankingBanner.tsx",
        "src/components/TrueBanner.tsx",
        "src/components/ConnectionManager.tsx",
        "src/components/ConnectionStatus.tsx",
        "src/components/IndustryBanner.tsx",
        "src/components/PerformanceMetrics.tsx",
        "src/components/ErrorBoundary.tsx",
        "src/components/DecisionPath/NodeIndicators.tsx",
        "src/components/DecisionPath/NodeOperation.tsx",
        "src/components/DecisionPath/GraphLegend.tsx",
        "src/components/DecisionPath/PathDrawing.tsx",
        "src/components/DecisionPath/DecisionPathGraph.tsx",
        "src/components/DecisionPath/NodeOperationsList.tsx",
        "src/components/DecisionPath/NodeHeader.tsx",
        "src/components/DecisionPath/GraphHeader.tsx",
        "src/components/DecisionPath/ArrowMarkers.tsx",
        "src/components/DecisionPath/types.ts",
        "src/components/DecisionPath/GraphNode.tsx",
        "src/components/DecisionPath/NodeTooltipContent.tsx",
        "src/components/DecisionPath/index.ts",
        "src/components/DecisionPath/utils/nodeUtils.ts",
        "src/components/DecisionPath/utils/pathUtils.ts",
        "src/components/AgentTraceability/OverviewTab.tsx",
        "src/components/AgentTraceability/types.ts",
        "src/components/AgentTraceability/GraphTab.tsx",
        "src/components/AgentTraceability/index.ts",
        "src/components/AgentTraceability/AgentsTab.tsx",
        "src/components/AgentTraceability/AgentTraceability.tsx",
        "src/components/AgentTraceability/components/NodeDetails.tsx",
        "src/components/AgentTraceability/components/index.ts",
        "src/components/AgentTraceability/components/GraphVisualizer.tsx",
        "src/components/AgentTraceability/components/mocks/mockConversationHistory.ts",
        "src/components/AgentTraceability/components/mocks/mockReasoningOutputs.ts",
        "src/components/AgentTraceability/components/mocks/mockOperations.ts",
        "src/components/AgentTraceability/components/mocks/index.ts",
        "src/components/AgentTraceability/components/conversation/OperationsList.tsx",
        "src/components/AgentTraceability/components/conversation/MessageItem.tsx",
        "src/components/AgentTraceability/components/conversation/ConversationHistory.tsx",
        "src/components/AgentTraceability/components/conversation/types.ts",
        "src/components/AgentTraceability/components/conversation/index.ts",
        "src/components/AgentTraceability/components/conversation/MessagesList.tsx",
        "src/components/AgentTraceability/components/conversation/EmptyState.tsx",
        "src/components/DataLineage/DataLineageGraph.tsx",
        "src/components/DataLineage/GraphLegend.tsx",
        "src/components/DataLineage/EdgePath.tsx",
        "src/components/DataLineage/GraphHeader.tsx",
        "src/components/DataLineage/ArrowMarkers.tsx",
        "src/components/DataLineage/types.ts",
        "src/components/DataLineage/GraphNode.tsx",
        "src/components/DataLineage/index.ts",
        "src/components/DataLineage/utils/pathUtils.ts",
        "src/components/NetworkTwin/NetworkAgents.tsx",
        "src/components/NetworkTwin/SimulationPanel.tsx",
        "src/components/NetworkTwin/GeospatialMap.tsx",
        "src/components/NetworkTwin/SimulationResults.tsx",
        "src/components/NetworkTwin/NetworkTwinHeader.tsx",
        "src/components/NetworkTwin/NetworkSelector.tsx",
        "src/components/NetworkTwin/NetworkGraph.tsx",
        "src/components/NetworkTwin/AnalysisPanel.tsx",
        "src/components/NetworkTwin/NetworkTopology.tsx",
        "src/components/NetworkTwin/index.ts",
        "src/components/NetworkTwin/agents/ServiceImpactAgent.tsx",
        "src/components/NetworkTwin/agents/RANIntelligenceAgent.tsx",
        "src/components/NetworkTwin/agents/CoreAgentFramework.tsx",
        "src/components/NetworkTwin/modals/AgentDetailModal.tsx",
        "src/components/NetworkTwin/modals/SiteDetailModal.tsx",
        "src/components/NetworkTwin/components/InteractiveNetworkTopology.tsx",
        "src/components/NetworkTwin/data/networkTwinData.ts",
        "src/components/AgentFrameworks/index.ts",
        "src/components/AgentFrameworks/steps/AgentValidation.tsx",
        "src/components/AgentFrameworks/steps/AgentCapabilities.tsx",
        "src/components/AgentFrameworks/steps/AgentBasicInfo.tsx",
        "src/components/RAG/DocumentUploader.tsx",
        "src/components/RAG/KnowledgeBaseSelector.tsx",
        "src/components/WorkflowTemplates/WorkflowTemplateSelector.tsx",
        "src/components/WorkflowTemplates/index.ts",
        "src/components/AgentWorkspace/RequestAccessDialog.tsx",
        "src/components/AgentWorkspace/PropertiesPanel.tsx",
        "src/components/AgentWorkspace/WorkspaceHeader.tsx",
        "src/components/AgentWorkspace/VoiceAnalyticsHeader.tsx",
        "src/components/AgentWorkspace/WorkspaceCanvas.tsx",
        "src/components/AgentWorkspace/ProjectSelection.tsx",
        "src/components/AgentWorkspace/WorkspaceToolbar.tsx",
        "src/components/AgentWorkspace/AgentPalette.tsx",
        "src/components/AgentWorkspace/types.ts",
        "src/components/AgentWorkspace/LangChainToggle.tsx",
        "src/components/AgentWorkspace/AccessRequired.tsx",
        "src/components/AgentWorkspace/ApiKeyInput.tsx",
        "src/components/AgentWorkspace/index.ts",
        "src/components/AgentWorkspace/langchain/api.ts",
        "src/components/Documents/RAGDebugPanel.tsx",
        "src/components/Documents/DocumentAgentCreator.tsx",
        "src/components/Documents/DocumentProcessingLogs.tsx",
        "src/components/Documents/DocumentUploader.tsx",
        "src/components/Documents/DocumentLibrary.tsx",
        "src/components/Documents/DocumentAgentManager.tsx",
        "src/components/Documents/DocumentChat.tsx",
        "src/components/Documents/AgentDocumentChat.tsx",
        "src/components/Documents/AgentSuggestions.tsx",
        "src/components/Documents/DocumentMetadataPanel.tsx",
        "src/components/CombinedVisualization/ViewSelectorTabs.tsx",
        "src/components/CombinedVisualization/CombinedVisualizationGraph.tsx",
        "src/components/CombinedVisualization/GraphLegend.tsx",
        "src/components/CombinedVisualization/NodesRenderer.tsx",
        "src/components/CombinedVisualization/DecisionPathRenderer.tsx",
        "src/components/CombinedVisualization/GraphHeader.tsx",
        "src/components/CombinedVisualization/IconRenderer.tsx",
        "src/components/CombinedVisualization/DataLineageRenderer.tsx",
        "src/components/CombinedVisualization/index.ts",
        "src/pages/Auth.tsx",
        "src/pages/SimpleDocumentTest.tsx",
        "src/pages/Agents.tsx",
        "src/pages/Test.tsx",
        "src/pages/DebugPage.tsx",
        "src/pages/NetworkTwin.tsx",
        "src/pages/NotFound.tsx"
      ]
    },
    "Core Platform": {
      "Infrastructure": [
        "src/App.tsx",
        "src/main.tsx",
        "src/components/IndustrySidebar.tsx",
        "src/components/Layout.tsx",
        "src/components/MainContent.tsx",
        "src/components/Sidebar.tsx",
        "src/components/SimpleLayout.tsx",
        "src/components/ui/sidebar.tsx",
        "src/components/ui/sidebar/sidebar-context.tsx",
        "src/components/ui/sidebar/sidebar-components.tsx",
        "src/components/ui/sidebar/sidebar-utils.ts",
        "src/components/ui/sidebar/sidebar-provider.tsx",
        "src/components/ui/sidebar/index.ts"
      ],
      "Ollama Agents": [
        "src/config/ollamaModels.ts",
        "src/components/OllamaAgentChat.tsx",
        "src/components/StrandsOllamaAgentChat.tsx",
        "src/components/DebugOllamaAgent.tsx",
        "src/components/Ollama/OllamaStatus.tsx",
        "src/components/Ollama/OllamaModelsDialog.tsx",
        "src/components/Ollama/index.ts",
        "src/components/Ollama/OllamaModelSelector.tsx",
        "src/hooks/useOllamaAgentsForPalette.ts",
        "src/hooks/useStrandsOllamaAgents.ts",
        "src/hooks/useOllamaModels.ts",
        "src/lib/frameworks/StrandsOllamaSDK.ts",
        "src/lib/services/StrandsOllamaAgentService.ts",
        "src/lib/services/OllamaService.ts",
        "src/lib/services/OllamaAgentService.ts"
      ],
      "AI Marketplace": [
        "src/components/AgentMarketplace.tsx",
        "src/components/AgentMarketplace/ModernAgentMarketplace.tsx",
        "src/pages/Marketplace.tsx"
      ],
      "Ollama Terminal": [
        "src/components/SimpleOllamaTerminal.tsx",
        "src/components/Ollama/OllamaTerminalDialog.tsx",
        "src/components/Ollama/OllamaTerminal.tsx",
        "src/pages/OllamaTerminal.tsx"
      ],
      "MCP Gateway": [
        "src/components/Settings/MCPSettings.tsx",
        "src/lib/services/MCPGatewayService.ts",
        "src/pages/MCPGatewayTest.tsx"
      ],
      "Dashboard": [
        "src/components/CustomerValueManagement/CvmDashboard.tsx",
        "src/components/WealthManagement/RMWorkflowDashboard.tsx",
        "src/components/WealthManagement/MarketResearchDashboard.tsx",
        "src/components/AgentDashboard/types.ts",
        "src/components/AgentDashboard/agentsData.ts",
        "src/components/AgentDashboard/AgentDashboard.tsx",
        "src/components/AgentDashboard/AgentsTable.tsx",
        "src/components/AgentDashboard/index.ts",
        "src/components/AgentDashboard/ModelMetadata.tsx",
        "src/components/AgentDashboard/KpiCards.tsx",
        "src/components/AgentDashboard/AgentDetailsPanel.tsx",
        "src/components/ArchitectureDesign/ArchitectureDesignDashboard.tsx",
        "src/pages/Index.tsx",
        "src/pages/SimpleOllamaAgentDashboard.tsx",
        "src/pages/StrandsOllamaAgentDashboard.tsx",
        "src/pages/OllamaAgentDashboard.tsx",
        "src/pages/SimpleMCPDashboard.tsx",
        "src/pages/MCPDashboard.tsx"
      ],
      "Agent Command Centre": [
        "src/components/CommandCentre/GovernanceContent.tsx",
        "src/components/CommandCentre/RealAgentMonitoring.tsx",
        "src/components/CommandCentre/LocalGuardrails.tsx",
        "src/components/CommandCentre/ProjectSelector.tsx",
        "src/components/CommandCentre/TelcoProjectData.tsx",
        "src/components/CommandCentre/ProjectTiles.tsx",
        "src/components/CommandCentre/GlobalGuardrails.tsx",
        "src/components/CommandCentre/QuickActionsMinimal.tsx",
        "src/components/CommandCentre/CreateAgentDialog.tsx",
        "src/components/CommandCentre/GuardrailItem.tsx",
        "src/components/CommandCentre/MainTabs.tsx",
        "src/components/CommandCentre/QuickActionsDebug.tsx",
        "src/components/CommandCentre/DataAccessContent.tsx",
        "src/components/CommandCentre/StepNavigation.tsx",
        "src/components/CommandCentre/TelcoProjects.tsx",
        "src/components/CommandCentre/QuickActions.tsx",
        "src/components/CommandCentre/ToolsContent.tsx",
        "src/components/CommandCentre/ProjectData.tsx",
        "src/components/CommandCentre/index.ts",
        "src/components/CommandCentre/CostContent.tsx",
        "src/components/CommandCentre/UsageReports.tsx",
        "src/components/CommandCentre/GuardrailData.ts",
        "src/components/CommandCentre/CreateLangGraphWorkflow/CreateLangGraphWorkflowDialog.tsx",
        "src/components/CommandCentre/CreateLangGraphWorkflow/DynamicLangGraphWorkflow.tsx",
        "src/components/CommandCentre/CreateAgent/StrandsOllamaAgentDialog.tsx",
        "src/components/CommandCentre/CreateAgent/SimpleMCPToolsSelection.tsx",
        "src/components/CommandCentre/CreateAgent/SimpleAgentNameField.tsx",
        "src/components/CommandCentre/CreateAgent/SimpleModelSelector.tsx",
        "src/components/CommandCentre/CreateAgent/StepContent.tsx",
        "src/components/CommandCentre/CreateAgent/CompletionScreen.tsx",
        "src/components/CommandCentre/CreateAgent/AgentNameField.tsx",
        "src/components/CommandCentre/CreateAgent/ModelSelector.tsx",
        "src/components/CommandCentre/CreateAgent/SimpleMemorySelector.tsx",
        "src/components/CommandCentre/CreateAgent/types.ts",
        "src/components/CommandCentre/CreateAgent/SimpleToolsGuardrails.tsx",
        "src/components/CommandCentre/CreateAgent/StepNavigation.tsx",
        "src/components/CommandCentre/CreateAgent/AgentDialogContent.tsx",
        "src/components/CommandCentre/CreateAgent/OllamaAgentDialog.tsx",
        "src/components/CommandCentre/CreateAgent/WorkingAgentDialog.tsx",
        "src/components/CommandCentre/CreateAgent/MinimalAgentDialog.tsx",
        "src/components/CommandCentre/CreateAgent/DebugWorkingDialog.tsx",
        "src/components/CommandCentre/CreateAgent/RoleSelector.tsx",
        "src/components/CommandCentre/CreateAgent/index.ts",
        "src/components/CommandCentre/CreateAgent/toolsRolesData.tsx",
        "src/components/CommandCentre/CreateAgent/SimpleRoleSelector.tsx",
        "src/components/CommandCentre/CreateAgent/ToolsGuardrails.tsx",
        "src/components/CommandCentre/CreateAgent/ActionDialog.tsx",
        "src/components/CommandCentre/CreateAgent/MemorySelector.tsx",
        "src/components/CommandCentre/CreateAgent/models/meta.ts",
        "src/components/CommandCentre/CreateAgent/models/amazon.ts",
        "src/components/CommandCentre/CreateAgent/models/ollama.ts",
        "src/components/CommandCentre/CreateAgent/models/anthropic.ts",
        "src/components/CommandCentre/CreateAgent/models/deepseek.ts",
        "src/components/CommandCentre/CreateAgent/models/openai.ts",
        "src/components/CommandCentre/CreateAgent/models/index.ts",
        "src/components/CommandCentre/CreateAgent/components/AgentFormWrapper.tsx",
        "src/components/CommandCentre/CreateAgent/components/AgentDialogHeader.tsx",
        "src/components/CommandCentre/CreateAgent/components/index.ts",
        "src/components/CommandCentre/CreateAgent/steps/MCPToolsSelection.tsx",
        "src/components/CommandCentre/CreateAgent/steps/EnhancedGuardrails.tsx",
        "src/components/CommandCentre/CreateAgent/steps/KnowledgeBaseStep.tsx",
        "src/components/CommandCentre/CreateAgent/steps/EnhancedCapabilities.tsx",
        "src/components/CommandCentre/CreateAgent/ModelSelector/ModelItem.tsx",
        "src/components/CommandCentre/CreateAgent/ModelSelector/CapabilityBar.tsx",
        "src/components/CommandCentre/CreateAgent/ModelSelector/ModelSelector.tsx",
        "src/components/CommandCentre/CreateAgent/ModelSelector/ProviderTabs.tsx",
        "src/components/CommandCentre/CreateAgent/ModelSelector/index.ts",
        "src/components/CommandCentre/CreateAgent/hooks/useAgentForm.ts",
        "src/components/CommandCentre/CreateMultiAgentWorkflow/CreateMultiAgentWorkflowDialog.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowDialogContent.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepNavigation.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/CreateStrandsWorkflowDialog.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/types.ts",
        "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepContent.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/index.ts",
        "src/components/CommandCentre/CreateStrandsWorkflow/models.ts",
        "src/components/CommandCentre/CreateStrandsWorkflow/strandsData.ts",
        "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsBasicInfo.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsReasoningPatterns.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsModelConfig.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsToolsGuardrails.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsWorkflowSteps.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsMemoryConfig.tsx",
        "src/components/CommandCentre/CreateStrandsWorkflow/hooks/useStrandsWorkflowForm.ts",
        "src/components/CommandCentre/StrandsIntegration/StrandsAgentCreator.tsx",
        "src/components/CommandCentre/hooks/useAgentForm.ts",
        "src/components/CommandCentre/hooks/agent-form/useFormSubmission.ts",
        "src/components/CommandCentre/hooks/agent-form/useFormNavigation.ts",
        "src/components/CommandCentre/hooks/agent-form/useFormCleanup.ts",
        "src/components/CommandCentre/hooks/agent-form/index.ts",
        "src/components/CommandCentre/hooks/agent-form/useFormOptions.ts",
        "src/pages/CommandCentreTest.tsx",
        "src/pages/CommandCentreSimple.tsx",
        "src/pages/CommandCentre.tsx",
        "src/pages/CommandCentreDebug.tsx"
      ],
      "Multi Agent Workspace": [
        "src/components/MultiAgentWorkspace/TelcoCvmPropertiesPanel.tsx",
        "src/components/MultiAgentWorkspace/ModernBankingAgentPalette.tsx",
        "src/components/MultiAgentWorkspace/ComplianceMonitor.tsx",
        "src/components/MultiAgentWorkspace/PropertiesPanel.tsx",
        "src/components/MultiAgentWorkspace/WorkflowValidationPanel.tsx",
        "src/components/MultiAgentWorkspace/WorkspaceHeader.tsx",
        "src/components/MultiAgentWorkspace/BlankWorkspace.tsx",
        "src/components/MultiAgentWorkspace/NetworkTwinPropertiesPanel.tsx",
        "src/components/MultiAgentWorkspace/StrandsExecutionOverlay.tsx",
        "src/components/MultiAgentWorkspace/AgentPalette.tsx",
        "src/components/MultiAgentWorkspace/StrandsBlankWorkspace.tsx",
        "src/components/MultiAgentWorkspace/RiskAssessmentPanel.tsx",
        "src/components/MultiAgentWorkspace/NetworkTwinWorkflowToolbar.tsx",
        "src/components/MultiAgentWorkspace/TelcoCvmAgentPalette.tsx",
        "src/components/MultiAgentWorkspace/MultiAgentProjectSelector.tsx",
        "src/components/MultiAgentWorkspace/MultiAgentWorkspaceBuilder.tsx",
        "src/components/MultiAgentWorkspace/BankingAgentPalette.tsx",
        "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspace.tsx",
        "src/components/MultiAgentWorkspace/WealthPropertiesPanel.tsx",
        "src/components/MultiAgentWorkspace/TelcoCvmWorkflowToolbar.tsx",
        "src/components/MultiAgentWorkspace/WealthManagementWorkspace.tsx",
        "src/components/MultiAgentWorkspace/ModernWorkspaceHeader.tsx",
        "src/components/MultiAgentWorkspace/BankingWorkflowToolbar.tsx",
        "src/components/MultiAgentWorkspace/index.ts",
        "src/components/MultiAgentWorkspace/WorkflowToolbar.tsx",
        "src/components/MultiAgentWorkspace/StrandsWorkflowCanvas.tsx",
        "src/components/MultiAgentWorkspace/TelcoCvmWorkspace.tsx",
        "src/components/MultiAgentWorkspace/WorkflowExecutionPanel.tsx",
        "src/components/MultiAgentWorkspace/NetworkTwinWorkspace.tsx",
        "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspaceBuilder.tsx",
        "src/components/MultiAgentWorkspace/NetworkTwinAgentPalette.tsx",
        "src/components/MultiAgentWorkspace/WorkflowConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/WealthAgentPalette.tsx",
        "src/components/MultiAgentWorkspace/types/orchestration.ts",
        "src/components/MultiAgentWorkspace/config/GuardrailNodeConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/config/HandoffNodeConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/config/MonitorNodeConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/config/AggregatorNodeConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/config/StrandsToolConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/config/MemoryNodeConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/config/HumanNodeConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/config/DecisionNodeConfigDialog.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernDecisionNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernGuardrailNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernHandoffNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernMonitorNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernMemoryNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/AuditNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsMemoryNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernHumanNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsOutputNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsAggregatorNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsHandoffNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsMonitorNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/GuardrailNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernAgentNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernAggregatorNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/CustomAgentNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsToolNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/RiskNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ModernMCPToolNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/MemoryNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsDecisionNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/ComplianceNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsHumanNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsGuardrailNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/DecisionNode.tsx",
        "src/components/MultiAgentWorkspace/nodes/StrandsAgentNode.tsx",
        "src/components/MultiAgentWorkspace/engines/WorkflowEngine.ts",
        "src/components/MultiAgentWorkspace/edges/ModernTaskHandoffEdge.tsx",
        "src/components/MultiAgentWorkspace/edges/StrandsEdge.tsx",
        "src/components/MultiAgentWorkspace/edges/EnhancedConnectionEdge.tsx",
        "src/components/MultiAgentWorkspace/edges/AnimatedStrandsEdge.tsx",
        "src/components/MultiAgentWorkspace/edges/TaskHandoffEdge.tsx",
        "src/pages/MultiAgentWorkspace.tsx"
      ],
      "Document Chat": [
        "src/components/MultiAgentWorkspace/ChatConfigurationWizard.tsx",
        "src/components/MultiAgentWorkspace/AddChatInterfaceButton.tsx",
        "src/components/MultiAgentWorkspace/FlexibleChatInterface.tsx",
        "src/components/MultiAgentWorkspace/ChatWorkflowInterface.tsx",
        "src/components/MultiAgentWorkspace/nodes/ChatInterfaceNode.tsx",
        "src/components/AgentWorkspace/ChatSuggestion.tsx",
        "src/components/AgentWorkspace/ChatInputForm.tsx",
        "src/components/AgentWorkspace/RagDemo.tsx",
        "src/components/AgentWorkspace/ChatReasoningOutput.tsx",
        "src/components/AgentWorkspace/ChatMessageList.tsx",
        "src/components/AgentWorkspace/EmptyChatState.tsx",
        "src/components/AgentWorkspace/ChatMessage.tsx",
        "src/pages/UnifiedDocumentWorkspace.tsx",
        "src/pages/MinimalDocumentWorkspace.tsx",
        "src/pages/TestRealDocumentWorkspace.tsx",
        "src/pages/SimpleRealDocumentWorkspace.tsx",
        "src/pages/RealDocumentWorkspace.tsx",
        "src/pages/DocumentWorkspace.tsx"
      ],
      "AgentOS Architecture Blueprint": [
        "src/components/SystemFlow/AgentOSLogicalFlow.tsx",
        "src/components/SystemFlow/AgentOSArchitectureDesign.tsx",
        "src/pages/SystemFlow.tsx"
      ]
    },
    "Monitoring & Control": {
      "System Monitor": [
        "src/App_systematic.tsx",
        "src/App_systematic_safe.tsx"
      ],
      "Agent Control Panel": [
        "src/pages/AgentControlPanel.tsx"
      ]
    },
    "Infrastructure": {
      "Types": [
        "src/vite-env.d.ts",
        "src/types/WorkflowUtilityTypes.ts"
      ],
      "Configuration": [
        "src/config/appConfig.ts",
        "src/components/AgentConfigDialog.tsx",
        "src/components/Settings/ApiTestResponse.tsx",
        "src/components/Settings/LogoSettings.tsx",
        "src/components/Settings/VectorStoreSettings.tsx",
        "src/components/Settings/BackendControlPanel.tsx",
        "src/components/Settings/ModelSettings.tsx",
        "src/components/Settings/GeneralSettings.tsx",
        "src/components/Settings/ApiSettings.tsx",
        "src/components/Settings/BackendServices.tsx",
        "src/components/Settings/MemorySettings.tsx",
        "src/components/AgentFrameworks/steps/AgentModelConfig.tsx",
        "src/components/RAG/RAGConfiguration.tsx",
        "src/pages/Settings.tsx"
      ],
      "UI Components": [
        "src/components/ui/aspect-ratio.tsx",
        "src/components/ui/alert-dialog.tsx",
        "src/components/ui/pagination.tsx",
        "src/components/ui/tabs.tsx",
        "src/components/ui/card.tsx",
        "src/components/ui/slider.tsx",
        "src/components/ui/popover.tsx",
        "src/components/ui/progress.tsx",
        "src/components/ui/toaster.tsx",
        "src/components/ui/input-otp.tsx",
        "src/components/ui/chart.tsx",
        "src/components/ui/hover-card.tsx",
        "src/components/ui/sheet.tsx",
        "src/components/ui/scroll-area.tsx",
        "src/components/ui/resizable.tsx",
        "src/components/ui/label.tsx",
        "src/components/ui/sonner.tsx",
        "src/components/ui/navigation-menu.tsx",
        "src/components/ui/accordion.tsx",
        "src/components/ui/drawer.tsx",
        "src/components/ui/tooltip.tsx",
        "src/components/ui/alert.tsx",
        "src/components/ui/use-toast.ts",
        "src/components/ui/switch.tsx",
        "src/components/ui/calendar.tsx",
        "src/components/ui/breadcrumb.tsx",
        "src/components/ui/radio-group.tsx",
        "src/components/ui/command.tsx",
        "src/components/ui/toggle-group.tsx",
        "src/components/ui/avatar.tsx",
        "src/components/ui/menubar.tsx",
        "src/components/ui/dialog.tsx",
        "src/components/ui/badge.tsx",
        "src/components/ui/table.tsx",
        "src/components/ui/separator.tsx",
        "src/components/ui/button.tsx",
        "src/components/ui/toggle.tsx",
        "src/components/ui/toast.tsx",
        "src/components/ui/checkbox.tsx",
        "src/components/ui/collapsible.tsx",
        "src/components/ui/dropdown-menu.tsx",
        "src/components/ui/select.tsx",
        "src/components/ui/textarea.tsx",
        "src/components/ui/input.tsx",
        "src/components/ui/skeleton.tsx",
        "src/components/ui/context-menu.tsx",
        "src/components/ui/form.tsx",
        "src/components/ui/carousel.tsx"
      ],
      "Hooks": [
        "src/components/NetworkTwin/hooks/useNetworkTwinNavigation.ts",
        "src/components/AgentWorkspace/hooks/useMessageReasoning.ts",
        "src/components/AgentWorkspace/hooks/useConversation.ts",
        "src/components/AgentWorkspace/hooks/useSuggestedPrompts.ts",
        "src/components/AgentWorkspace/hooks/useVoiceProjectData.ts",
        "src/components/AgentWorkspace/hooks/useLangChainKey.ts",
        "src/hooks/useRealStrandsAgents.ts",
        "src/hooks/useUtilityConfiguration.ts",
        "src/hooks/use-toast.tsx",
        "src/hooks/use-mobile.tsx",
        "src/hooks/useStrandsUtilitiesStatic.ts",
        "src/hooks/useSupabaseApiKey.ts",
        "src/hooks/useModelProvider.ts",
        "src/hooks/useWorkflowExecution.ts",
        "src/hooks/useRagWorkflow.ts",
        "src/hooks/useStrandsNativeTools.ts",
        "src/hooks/useProcessingLogs.ts",
        "src/hooks/useSupabaseConnection.ts",
        "src/hooks/useStrandsUtilities.ts",
        "src/hooks/toast/toast.ts",
        "src/hooks/toast/utils.ts",
        "src/hooks/toast/use-toast.ts",
        "src/hooks/toast/types.ts",
        "src/hooks/toast/reducer.ts",
        "src/hooks/toast/context.tsx",
        "src/hooks/toast/index.ts"
      ],
      "Services": [
        "src/lib/utils.ts",
        "src/lib/apiClient.ts",
        "src/lib/frameworks/StrandsSDK.ts",
        "src/lib/frameworks/AgentCoreSDK.ts",
        "src/lib/services/RealStrandsService.ts",
        "src/lib/services/RAGService.ts",
        "src/lib/services/DocumentRAGService.ts",
        "src/lib/services/WorkflowExecutionService.ts",
        "src/lib/services/StrandsWorkflowOrchestrator.ts",
        "src/lib/services/ChatExecutionService.ts",
        "src/lib/services/FlexibleChatService.ts"
      ]
    },
    "Agent Use Cases": {
      "Customer Insights": [
        "src/components/CustomerValueManagement/NextBestOfferTab.tsx",
        "src/components/CustomerValueManagement/CvmModeToggle.tsx",
        "src/components/CustomerValueManagement/SegmentationTab.tsx",
        "src/components/CustomerValueManagement/PropensityModelsTab.tsx",
        "src/components/CustomerValueManagement/DataSourcesTab.tsx",
        "src/components/CustomerValueManagement/CvmAgenticDecisioning.tsx",
        "src/components/CustomerValueManagement/index.ts",
        "src/components/CustomerValueManagement/AgentsTab.tsx",
        "src/components/CustomerValueManagement/CvmChatInterface.tsx",
        "src/components/CustomerValueManagement/CampaignAnalysisTab.tsx",
        "src/components/CustomerValueManagement/context/CvmChatContext.tsx",
        "src/components/CustomerValueManagement/context/CvmContext.tsx",
        "src/components/CustomerValueManagement/chat/useCvmChat.ts",
        "src/components/CustomerValueManagement/chat/ChatSuggestions.tsx",
        "src/components/CustomerValueManagement/chat/CvmAgents.tsx",
        "src/components/CustomerValueManagement/chat/index.ts",
        "src/components/CustomerValueManagement/chat/EmptyChatState.tsx",
        "src/components/CustomerValueManagement/chat/ChatMessage.tsx",
        "src/components/CustomerValueManagement/chat/ChatInput.tsx",
        "src/components/CustomerValueManagement/chat/CvmChatInterface.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignDialog.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignHeader.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignStatus.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignABTesting.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignMainView.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignFilters.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignCalendar.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignDetails.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignSectionTabs.tsx",
        "src/components/CustomerValueManagement/campaign/types.ts",
        "src/components/CustomerValueManagement/campaign/CampaignNotifications.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignExport.tsx",
        "src/components/CustomerValueManagement/campaign/index.ts",
        "src/components/CustomerValueManagement/campaign/CampaignTemplates.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignList.tsx",
        "src/components/CustomerValueManagement/campaign/CampaignComparison.tsx",
        "src/components/CustomerValueManagement/campaign/tabs/FinancialsTab.tsx",
        "src/components/CustomerValueManagement/campaign/tabs/TargetTab.tsx",
        "src/components/CustomerValueManagement/campaign/tabs/PerformanceTab.tsx",
        "src/components/CustomerValueManagement/campaign/hooks/useCampaignManagement.ts",
        "src/pages/CustomerValueManagement.tsx",
        "src/pages/CustomerInsights.tsx"
      ],
      "Wealth Management": [
        "src/components/WealthManagement/AgentChatDialog.tsx",
        "src/components/WealthManagement/WealthAgentsPanel.tsx",
        "src/components/WealthManagement/InvestmentRecommendations.tsx",
        "src/components/WealthManagement/PortfolioOverview.tsx",
        "src/components/WealthManagement/AgentTraceabilityPanel.tsx",
        "src/components/WealthManagement/InteractiveChatOverlay.tsx",
        "src/components/WealthManagement/InteractiveNewsAnalysis.tsx",
        "src/components/WealthManagement/PortfolioCharts.tsx",
        "src/components/WealthManagement/index.ts",
        "src/components/WealthManagement/FinancialHealthInsights.tsx",
        "src/pages/WealthManagement.tsx"
      ],
      "Customer Analytics": [
        "src/components/NetworkTwin/agents/CustomerAnalyticsAgent.tsx",
        "src/pages/CustomerAnalytics.tsx"
      ],
      "Architecture Design": [
        "src/components/ArchitectureDesign/InteractiveAgentFlowDiagram.tsx",
        "src/components/ArchitectureDesign/TechnicalBuildingBlocks.tsx",
        "src/components/ArchitectureDesign/ComponentLibrary.tsx",
        "src/pages/ArchitectureDesign.tsx"
      ],
      "Risk Analytics": [
        "src/pages/RiskAnalytics.tsx"
      ]
    }
  },
  "files": {
    "src/App_test_individual_2.tsx": {
      "file_path": "src/App_test_individual_2.tsx",
      "filename": "App_test_individual_2.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 759,
      "lines": 24,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaAgentDashboard"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/ollama-agents"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App.tsx": {
      "file_path": "src/App.tsx",
      "filename": "App.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 12601,
      "lines": 322,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout"
      ],
      "exports": [
        "App"
      ],
      "components": [
        "Index",
        "CommandCentre",
        "Agents",
        "AgentControlPanel",
        "MCPDashboard",
        "SimpleMCPDashboard",
        "AgentMarketplace",
        "WealthManagement",
        "CustomerValueManagement",
        "CustomerAnalytics",
        "SimpleRealDocumentWorkspace",
        "RiskAnalytics",
        "ArchitectureDesign",
        "AgentOSLogicalFlow",
        "AgentOSArchitectureDesign",
        "Settings",
        "MultiAgentWorkspace",
        "OllamaAgentDashboard",
        "OllamaTerminalPage",
        "LoadingSpinner"
      ],
      "hooks": [],
      "routes": [
        "/",
        "/agent-command",
        "/agents",
        "/agent-control",
        "/multi-agent-workspace",
        "/ollama-agents",
        "/ollama-terminal",
        "/mcp-dashboard",
        "/mcp-gateway",
        "/agent-exchange",
        "/wealth-management",
        "/customer-insights",
        "/customer-analytics",
        "/risk-analytics",
        "/architecture-design",
        "/system-flow",
        "/architecture-flow",
        "/settings",
        "/documents"
      ],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/App_test_individual_3.tsx": {
      "file_path": "src/App_test_individual_3.tsx",
      "filename": "App_test_individual_3.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 751,
      "lines": 24,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/ollama-terminal"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_test_individual_1.tsx": {
      "file_path": "src/App_test_individual_1.tsx",
      "filename": "App_test_individual_1.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 760,
      "lines": 24,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/MultiAgentWorkspace"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/multi-agent-workspace"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_minimal_core.tsx": {
      "file_path": "src/App_minimal_core.tsx",
      "filename": "App_minimal_core.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 219,
      "lines": 12,
      "imports": [
        "react"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 12 lines"
    },
    "src/main.tsx": {
      "file_path": "src/main.tsx",
      "filename": "main.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 637,
      "lines": 23,
      "imports": [
        "react",
        "react-dom/client",
        "@tanstack/react-query",
        "./App.tsx",
        "./hooks/toast",
        "./contexts/IndustryContext",
        "./index.css"
      ],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_backup.tsx": {
      "file_path": "src/App_backup.tsx",
      "filename": "App_backup.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 4030,
      "lines": 74,
      "imports": [
        "@/components/ui/toaster",
        "@/components/ui/sonner",
        "@/components/ui/tooltip",
        "react-router-dom",
        "./components/Layout",
        "./pages/Index",
        "./pages/Agents",
        "./pages/MultiAgentWorkspace",
        "./pages/CommandCentre",
        "./pages/WealthManagement",
        "./pages/CustomerValueManagement",
        "./pages/CustomerAnalytics",
        "./components/AgentMarketplace",
        "./pages/NetworkTwin",
        "./pages/RiskAnalytics",
        "./pages/Auth",
        "./components/Settings/GeneralSettings",
        "./pages/AgentControlPanel",
        "./pages/MCPDashboard",
        "./pages/MCPGatewayTest",
        "./pages/SystemFlow",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/OllamaAgentDashboard",
        "./pages/StrandsOllamaAgentDashboard",
        "./pages/DebugPage",
        "./pages/CommandCentreTest",
        "./pages/CommandCentreSimple",
        "./pages/CommandCentreDebug",
        "./components/ErrorBoundary"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/agents",
        "/multi-agent-workspace",
        "/agent-command",
        "/agent-command-debug",
        "/agent-command-simple",
        "/agent-exchange",
        "/risk-analytics",
        "/network-twin",
        "/wealth-management",
        "/customer-insights",
        "/customer-analytics",
        "/auth",
        "/settings",
        "/agent-control",
        "/documents",
        "/ollama-agents",
        "/strands-ollama-agents",
        "/ollama-terminal",
        "/mcp-dashboard",
        "/mcp-test",
        "/system-flow",
        "/debug"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_with_routing.tsx": {
      "file_path": "src/App_with_routing.tsx",
      "filename": "App_with_routing.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 1634,
      "lines": 42,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/agents",
        "/documents",
        "/ollama-terminal",
        "/agent-command",
        "*"
      ],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App.css": {
      "file_path": "src/App.css",
      "filename": "App.css",
      "directory": "src",
      "extension": ".css",
      "size": 606,
      "lines": 43,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_minimal.tsx": {
      "file_path": "src/App_minimal.tsx",
      "filename": "App_minimal.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 753,
      "lines": 27,
      "imports": [
        "react"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "http://localhost:5052</p>",
        "http://localhost:8080</p>"
      ],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/index.css": {
      "file_path": "src/index.css",
      "filename": "index.css",
      "directory": "src",
      "extension": ".css",
      "size": 2934,
      "lines": 177,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_systematic.tsx": {
      "file_path": "src/App_systematic.tsx",
      "filename": "App_systematic.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 3480,
      "lines": 75,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/Agents",
        "./pages/CommandCentre",
        "./pages/AgentControlPanel",
        "./pages/MultiAgentWorkspace",
        "./pages/OllamaAgentDashboard",
        "./pages/Settings"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/agents",
        "/agent-control",
        "/multi-agent-workspace",
        "/agent-command",
        "/ollama-terminal",
        "/ollama-agents",
        "/documents",
        "/settings",
        "/wealth-management",
        "/customer-insights",
        "/risk-analytics",
        "/mcp-dashboard",
        "/network-twin",
        "/system-flow",
        "/debug",
        "*"
      ],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "Monitoring & Control",
      "subcategory": "System Monitor",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/vite-env.d.ts": {
      "file_path": "src/vite-env.d.ts",
      "filename": "vite-env.d.ts",
      "directory": "src",
      "extension": ".ts",
      "size": 38,
      "lines": 2,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Types",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 2 lines"
    },
    "src/App_systematic_safe.tsx": {
      "file_path": "src/App_systematic_safe.tsx",
      "filename": "App_systematic_safe.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 3291,
      "lines": 64,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/Agents",
        "./pages/CommandCentre",
        "./pages/AgentControlPanel",
        "./pages/MultiAgentWorkspace",
        "./pages/OllamaAgentDashboard"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/ollama-terminal",
        "/documents",
        "/agents",
        "/agent-command",
        "/agent-control",
        "/multi-agent-workspace",
        "/ollama-agents",
        "/wealth-management",
        "/customer-insights",
        "/risk-analytics",
        "/mcp-dashboard",
        "/network-twin",
        "/system-flow",
        "/settings",
        "/debug",
        "*"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "Monitoring & Control",
      "subcategory": "System Monitor",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_working.tsx": {
      "file_path": "src/App_working.tsx",
      "filename": "App_working.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 5583,
      "lines": 163,
      "imports": [
        "react",
        "./lib/apiClient"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5052",
        "http://localhost:8080</p>"
      ],
      "ui_elements": [
        "button",
        "button",
        "input",
        "button",
        "input",
        "button",
        "input",
        "button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/App_step1.tsx": {
      "file_path": "src/App_step1.tsx",
      "filename": "App_step1.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 1676,
      "lines": 43,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/ollama-terminal",
        "/agents",
        "/documents",
        "/agent-command",
        "*"
      ],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_super_minimal.tsx": {
      "file_path": "src/App_super_minimal.tsx",
      "filename": "App_super_minimal.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 1259,
      "lines": 38,
      "imports": [
        "react",
        "react-router-dom"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/test"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_without_problematic_components.tsx": {
      "file_path": "src/App_without_problematic_components.tsx",
      "filename": "App_without_problematic_components.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 5315,
      "lines": 112,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/CommandCentre",
        "./pages/Agents",
        "./pages/AgentControlPanel",
        "./pages/MultiAgentWorkspace",
        "./pages/OllamaAgentDashboard",
        "./pages/MCPDashboard",
        "./pages/SimpleMCPDashboard",
        "./components/AgentMarketplace",
        "./pages/WealthManagement",
        "./pages/CustomerValueManagement",
        "./pages/CustomerAnalytics"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "/agent-command",
        "/agents",
        "/agent-control",
        "/multi-agent-workspace",
        "/ollama-agents",
        "/ollama-terminal",
        "/mcp-dashboard",
        "/mcp-gateway",
        "/agent-exchange",
        "/wealth-management",
        "/customer-insights",
        "/customer-analytics",
        "/documents",
        "/multi-agent-workspace",
        "/ollama-agents",
        "/ollama-terminal"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_minimal_ui.tsx": {
      "file_path": "src/App_minimal_ui.tsx",
      "filename": "App_minimal_ui.tsx",
      "directory": "src",
      "extension": ".tsx",
      "size": 938,
      "lines": 29,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index"
      ],
      "exports": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "routes": [
        "/",
        "*"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/types/WorkflowUtilityTypes.ts": {
      "file_path": "src/types/WorkflowUtilityTypes.ts",
      "filename": "WorkflowUtilityTypes.ts",
      "directory": "src/types",
      "extension": ".ts",
      "size": 5429,
      "lines": 181,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "type",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Types",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/contexts/IndustryContext.tsx": {
      "file_path": "src/contexts/IndustryContext.tsx",
      "filename": "IndustryContext.tsx",
      "directory": "src/contexts",
      "extension": ".tsx",
      "size": 8409,
      "lines": 209,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useIndustry",
        "IndustryProvider",
        "useIndustryContext"
      ],
      "components": [
        "IndustryProvider",
        "IndustryProvider"
      ],
      "hooks": [
        "useContext",
        "useState",
        "useIndustry",
        "useIndustryContext"
      ],
      "routes": [],
      "api_calls": [
        "https://aws.amazon.com/favicon.ico",
        "https://aws.amazon.com/favicon.ico",
        "https://aws.amazon.com/favicon.ico"
      ],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/config/appConfig.ts": {
      "file_path": "src/config/appConfig.ts",
      "filename": "appConfig.ts",
      "directory": "src/config",
      "extension": ".ts",
      "size": 888,
      "lines": 36,
      "imports": [],
      "exports": [
        "appConfig",
        "appConfig"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "http://localhost:5052",
        "http://localhost:11434",
        "http://localhost:5052/api/documents",
        "http://localhost:5052/api/rag",
        "http://localhost:5052/api/agents",
        "http://localhost:5052/api/workflows",
        "http://localhost:5052/api/mcp",
        "http://localhost:5052/api/strands",
        "/api/documents",
        "/api/rag",
        "/api/agents",
        "/api/workflows",
        "/api/mcp",
        "/api/strands"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/config/ollamaModels.ts": {
      "file_path": "src/config/ollamaModels.ts",
      "filename": "ollamaModels.ts",
      "directory": "src/config",
      "extension": ".ts",
      "size": 4349,
      "lines": 107,
      "imports": [],
      "exports": [
        "OLLAMA_MODELS",
        "type",
        "type",
        "type",
        "OLLAMA_MODELS"
      ],
      "components": [
        "OLLAMA_MODELS"
      ],
      "hooks": [
        "useCase"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/utils/memoryService.ts": {
      "file_path": "src/utils/memoryService.ts",
      "filename": "memoryService.ts",
      "directory": "src/utils",
      "extension": ".ts",
      "size": 5120,
      "lines": 164,
      "imports": [
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "interface",
        "interface",
        "MemoryService",
        "useMemoryService"
      ],
      "components": [],
      "hooks": [
        "useMemoryService"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 0 components"
    },
    "src/utils/ragService.ts": {
      "file_path": "src/utils/ragService.ts",
      "filename": "ragService.ts",
      "directory": "src/utils",
      "extension": ".ts",
      "size": 9869,
      "lines": 319,
      "imports": [
        "@/integrations/supabase/client",
        "sonner",
        "@langchain/openai",
        "@langchain/core/prompts",
        "@langchain/core/output_parsers",
        "@langchain/core/runnables",
        "@/utils/models/modelTypes"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "RAGService",
        "useRAGService"
      ],
      "components": [],
      "hooks": [
        "useRAGService"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/utils/modelValidator.ts": {
      "file_path": "src/utils/modelValidator.ts",
      "filename": "modelValidator.ts",
      "directory": "src/utils",
      "extension": ".ts",
      "size": 1936,
      "lines": 69,
      "imports": [
        "@/config/ollamaModels"
      ],
      "exports": [
        "ModelValidator",
        "validateModel",
        "getModelForUseCase",
        "formatModelForDisplay"
      ],
      "components": [],
      "hooks": [
        "useCase"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 0 components"
    },
    "src/utils/vectorStore.ts": {
      "file_path": "src/utils/vectorStore.ts",
      "filename": "vectorStore.ts",
      "directory": "src/utils",
      "extension": ".ts",
      "size": 8381,
      "lines": 261,
      "imports": [
        "@/integrations/supabase/client",
        "sonner",
        "@langchain/openai",
        "@langchain/pinecone",
        "@pinecone-database/pinecone"
      ],
      "exports": [
        "interface",
        "type",
        "VectorStoreService",
        "useVectorStore"
      ],
      "components": [],
      "hooks": [
        "useVectorStore"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/utils/langchainService.ts": {
      "file_path": "src/utils/langchainService.ts",
      "filename": "langchainService.ts",
      "directory": "src/utils",
      "extension": ".ts",
      "size": 7592,
      "lines": 225,
      "imports": [
        "react",
        "@/utils/models/modelTypes",
        "@/integrations/supabase/client",
        "sonner",
        "@langchain/openai",
        "@langchain/core/prompts",
        "@langchain/core/output_parsers",
        "@langchain/core/runnables",
        "@langchain/core/messages"
      ],
      "exports": [
        "interface",
        "LangChainService",
        "useLangChain"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useLangChain",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/utils/mem0Service.ts": {
      "file_path": "src/utils/mem0Service.ts",
      "filename": "mem0Service.ts",
      "directory": "src/utils",
      "extension": ".ts",
      "size": 11556,
      "lines": 365,
      "imports": [
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "interface",
        "Mem0Service",
        "useMem0Service"
      ],
      "components": [],
      "hooks": [
        "useDatabase",
        "useMem0Service"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 0 components"
    },
    "src/utils/modelContextProtocol.ts": {
      "file_path": "src/utils/modelContextProtocol.ts",
      "filename": "modelContextProtocol.ts",
      "directory": "src/utils",
      "extension": ".ts",
      "size": 4461,
      "lines": 160,
      "imports": [
        "react",
        "@/utils/models/modelTypes",
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "MCPService",
        "useMCP"
      ],
      "components": [],
      "hooks": [
        "useMCP",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "8 functionality indicators, 0 components"
    },
    "src/utils/models/modelTypes.ts": {
      "file_path": "src/utils/models/modelTypes.ts",
      "filename": "modelTypes.ts",
      "directory": "src/utils/models",
      "extension": ".ts",
      "size": 467,
      "lines": 18,
      "imports": [],
      "exports": [
        "type",
        "interface",
        "model",
        "models "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 18 lines"
    },
    "src/utils/models/modelUtils.ts": {
      "file_path": "src/utils/models/modelUtils.ts",
      "filename": "modelUtils.ts",
      "directory": "src/utils/models",
      "extension": ".ts",
      "size": 2032,
      "lines": 71,
      "imports": [
        "./modelDefinitions",
        "./modelTypes",
        "sonner"
      ],
      "exports": [
        "getModelConfig",
        "validateLocalEndpoint",
        "loadInitialModelSelection",
        "saveModelSelection",
        "saveLocalEndpoint"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "/api/tags"
      ],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 0 components"
    },
    "src/utils/models/modelDefinitions.ts": {
      "file_path": "src/utils/models/modelDefinitions.ts",
      "filename": "modelDefinitions.ts",
      "directory": "src/utils/models",
      "extension": ".ts",
      "size": 2452,
      "lines": 110,
      "imports": [
        "./modelTypes"
      ],
      "exports": [
        "models"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/integrations/supabase/types.ts": {
      "file_path": "src/integrations/supabase/types.ts",
      "filename": "types.ts",
      "directory": "src/integrations/supabase",
      "extension": ".ts",
      "size": 14095,
      "lines": 457,
      "imports": [],
      "exports": [
        "type",
        "type",
        "type",
        "type",
        "type",
        "type",
        "type",
        "Constants"
      ],
      "components": [
        "Constants"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/integrations/supabase/client.ts": {
      "file_path": "src/integrations/supabase/client.ts",
      "filename": "client.ts",
      "directory": "src/integrations/supabase",
      "extension": ".ts",
      "size": 1688,
      "lines": 41,
      "imports": [
        "@supabase/supabase-js",
        "./types",
        "@/integrations/supabase/client"
      ],
      "exports": [
        "type",
        "supabase"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "https://dkjtdubmpcatqtlzlthf.supabase.co"
      ],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/InlineAgentChat.tsx": {
      "file_path": "src/components/InlineAgentChat.tsx",
      "filename": "InlineAgentChat.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 9134,
      "lines": 280,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/scroll-area",
        "@/components/ui/badge",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "InlineAgentChat"
      ],
      "components": [
        "InlineAgentChat",
        "InlineAgentChat"
      ],
      "hooks": [
        "useRef",
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Input",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "9 functionality indicators, 2 components"
    },
    "src/components/IndustrySidebar.tsx": {
      "file_path": "src/components/IndustrySidebar.tsx",
      "filename": "IndustrySidebar.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 8085,
      "lines": 215,
      "imports": [
        "react",
        "react-router-dom",
        "./IndustryBanner",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "IndustrySidebar"
      ],
      "components": [
        "IndustrySidebar"
      ],
      "hooks": [
        "useState",
        "useIndustry",
        "useLocation",
        "useEffect"
      ],
      "routes": [
        "/"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 1 components"
    },
    "src/components/OllamaAgentChat.tsx": {
      "file_path": "src/components/OllamaAgentChat.tsx",
      "filename": "OllamaAgentChat.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 13265,
      "lines": 364,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/alert",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaAgentChat"
      ],
      "components": [
        "OllamaAgentChat",
        "OllamaAgentChat"
      ],
      "hooks": [
        "useRef",
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Input",
        "Button",
        "Button",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/ThinkingIndicator.tsx": {
      "file_path": "src/components/ThinkingIndicator.tsx",
      "filename": "ThinkingIndicator.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 1458,
      "lines": 45,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "ThinkingIndicator"
      ],
      "components": [
        "ThinkingIndicator",
        "ThinkingIndicator"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentCard.tsx": {
      "file_path": "src/components/AgentCard.tsx",
      "filename": "AgentCard.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 1871,
      "lines": 68,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "AgentCard",
        "InfoPanel"
      ],
      "components": [
        "AgentCard",
        "InfoPanel",
        "AgentCard",
        "InfoPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "className=\"beam-card agent-card-gradient rounded-xl p-4 overflow-hidden max-w-xs\""
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 4 components"
    },
    "src/components/GuardrailsPanel.tsx": {
      "file_path": "src/components/GuardrailsPanel.tsx",
      "filename": "GuardrailsPanel.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 2243,
      "lines": 78,
      "imports": [
        "react",
        "lucide-react",
        "./AgentCard"
      ],
      "exports": [
        "type",
        "GuardrailsPanel"
      ],
      "components": [
        "GuardrailsPanel",
        "GuardrailsPanel"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/GlobalConnectionStatus.tsx": {
      "file_path": "src/components/GlobalConnectionStatus.tsx",
      "filename": "GlobalConnectionStatus.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 1171,
      "lines": 37,
      "imports": [
        "react",
        "./ConnectionStatus",
        "./ConnectionManager",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "lucide-react"
      ],
      "exports": [
        "GlobalConnectionStatus"
      ],
      "components": [
        "GlobalConnectionStatus",
        "GlobalConnectionStatus"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Button",
        "Dialog"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentConfigDialog.tsx": {
      "file_path": "src/components/AgentConfigDialog.tsx",
      "filename": "AgentConfigDialog.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 28373,
      "lines": 672,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/lib/services/OllamaAgentService"
      ],
      "exports": [
        "AgentConfigDialog"
      ],
      "components": [
        "AgentConfigDialog",
        "AgentConfigDialog"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/AgentMarketplace.tsx": {
      "file_path": "src/components/AgentMarketplace.tsx",
      "filename": "AgentMarketplace.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 189,
      "lines": 8,
      "imports": [
        "react",
        "./AgentMarketplace/ModernAgentMarketplace"
      ],
      "exports": [
        "AgentMarketplace"
      ],
      "components": [
        "AgentMarketplace"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "AI Marketplace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/GlobeBanner.tsx": {
      "file_path": "src/components/GlobeBanner.tsx",
      "filename": "GlobeBanner.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 793,
      "lines": 21,
      "imports": [
        "react"
      ],
      "exports": [
        "GlobeBanner"
      ],
      "components": [
        "GlobeBanner",
        "GlobeBanner"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/IndustrySwitcher.tsx": {
      "file_path": "src/components/IndustrySwitcher.tsx",
      "filename": "IndustrySwitcher.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 2876,
      "lines": 81,
      "imports": [
        "react",
        "./ui/button",
        "lucide-react",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "IndustrySwitcher"
      ],
      "components": [
        "IndustrySwitcher",
        "IndustrySwitcher"
      ],
      "hooks": [
        "useIndustry"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/BackendControl.tsx": {
      "file_path": "src/components/BackendControl.tsx",
      "filename": "BackendControl.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 31453,
      "lines": 877,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/separator"
      ],
      "exports": [
        "BackendControl"
      ],
      "components": [
        "BackendControl",
        "BackendControl"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:11434",
        "http://localhost:${config.backend_port}/config`,",
        "http://localhost:${config.backend_port}/config`,",
        "http://localhost:${port}/health`,",
        "http://127.0.0.1:${port}/health`",
        "http://localhost:${port}/health`,",
        "http://127.0.0.1:${port}/health`",
        "http://localhost:${config.backend_port}/health`,",
        "http://localhost:${config.backend_port}/start`,",
        "http://localhost:${config.backend_port}/stop`,",
        "http://localhost:${config.backend_port}/start`,",
        "http://localhost:${config.backend_port}/api/rag/restart`,",
        "http://localhost:${config.backend_port}/stop`,",
        "http://localhost:{backendStatus.port}",
        "http://localhost:{config.backend_port}</code></p>",
        "http://localhost:11434",
        "/api/rag/restart"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "11 functionality indicators, 2 components"
    },
    "src/components/StrandsOllamaAgentChat.tsx": {
      "file_path": "src/components/StrandsOllamaAgentChat.tsx",
      "filename": "StrandsOllamaAgentChat.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 22098,
      "lines": 540,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/hooks/useStrandsOllamaAgents",
        "@/hooks/use-toast"
      ],
      "exports": [
        "StrandsOllamaAgentChat"
      ],
      "components": [
        "StrandsOllamaAgentChat",
        "StrandsOllamaAgentChat"
      ],
      "hooks": [
        "useStrandsOllamaAgents",
        "useState",
        "useEffect",
        "useRef",
        "useToast"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Button",
        "Button",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/SimpleOllamaTerminal.tsx": {
      "file_path": "src/components/SimpleOllamaTerminal.tsx",
      "filename": "SimpleOllamaTerminal.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 11408,
      "lines": 351,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/lib/apiClient"
      ],
      "exports": [
        "SimpleOllamaTerminal"
      ],
      "components": [
        "SimpleOllamaTerminal",
        "SimpleOllamaTerminal"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/health",
        "http://localhost:5002/api/ollama/status",
        "http://localhost:5002/health",
        "http://localhost:5002/api/ollama/status",
        "/api/ollama/status"
      ],
      "ui_elements": [
        "Button",
        "Button",
        "input",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Terminal",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/DebugOllamaAgent.tsx": {
      "file_path": "src/components/DebugOllamaAgent.tsx",
      "filename": "DebugOllamaAgent.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 4407,
      "lines": 133,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "DebugOllamaAgent"
      ],
      "components": [
        "DebugOllamaAgent",
        "DebugOllamaAgent"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/Layout.tsx": {
      "file_path": "src/components/Layout.tsx",
      "filename": "Layout.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 1907,
      "lines": 58,
      "imports": [
        "react",
        "./IndustrySidebar",
        "./IndustrySwitcher",
        "./ui/button",
        "lucide-react",
        "react-router-dom",
        "./ErrorBoundary",
        "./ui/sidebar"
      ],
      "exports": [
        "Layout"
      ],
      "components": [
        "Layout",
        "Layout"
      ],
      "hooks": [
        "useState",
        "useNavigate"
      ],
      "routes": [
        "/auth"
      ],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MainContent.tsx": {
      "file_path": "src/components/MainContent.tsx",
      "filename": "MainContent.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 5368,
      "lines": 97,
      "imports": [
        "react",
        "react-router-dom",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "MainContent"
      ],
      "components": [
        "MainContent",
        "MainContent"
      ],
      "hooks": [],
      "routes": [
        "/agent-command",
        "/agents",
        "/agent-workspace",
        "/multi-agent-workspace",
        "/agent-exchange",
        "/risk-analytics",
        "/customer-insights"
      ],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button",
        "Card",
        "Button",
        "Card",
        "Button",
        "Card",
        "Button",
        "Card",
        "Button",
        "Card",
        "Button",
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/BankingBanner.tsx": {
      "file_path": "src/components/BankingBanner.tsx",
      "filename": "BankingBanner.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 617,
      "lines": 21,
      "imports": [
        "react"
      ],
      "exports": [
        "BankingBanner"
      ],
      "components": [
        "BankingBanner",
        "BankingBanner"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "https://aws.amazon.com/favicon.ico"
      ],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/TrueBanner.tsx": {
      "file_path": "src/components/TrueBanner.tsx",
      "filename": "TrueBanner.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 761,
      "lines": 21,
      "imports": [
        "react"
      ],
      "exports": [
        "TrueBanner"
      ],
      "components": [
        "TrueBanner",
        "TrueBanner"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "https://aws.amazon.com/favicon.ico"
      ],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/Sidebar.tsx": {
      "file_path": "src/components/Sidebar.tsx",
      "filename": "Sidebar.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 7158,
      "lines": 196,
      "imports": [
        "react",
        "react-router-dom",
        "lucide-react",
        "./BankingBanner",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "Sidebar"
      ],
      "components": [
        "Sidebar"
      ],
      "hooks": [
        "useState",
        "useIndustry",
        "useLocation"
      ],
      "routes": [
        "/"
      ],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/components/ConnectionManager.tsx": {
      "file_path": "src/components/ConnectionManager.tsx",
      "filename": "ConnectionManager.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 10661,
      "lines": 318,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/config/appConfig"
      ],
      "exports": [
        "ConnectionManager"
      ],
      "components": [
        "ConnectionManager",
        "ConnectionManager"
      ],
      "hooks": [
        "useState",
        "useAppConfig",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Input",
        "Input",
        "Input",
        "Input",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/ConnectionStatus.tsx": {
      "file_path": "src/components/ConnectionStatus.tsx",
      "filename": "ConnectionStatus.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 4391,
      "lines": 165,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/config/appConfig",
        "@/lib/apiClient"
      ],
      "exports": [
        "ConnectionStatus"
      ],
      "components": [
        "ConnectionStatus",
        "ConnectionStatus"
      ],
      "hooks": [
        "useState",
        "useAppConfig",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/IndustryBanner.tsx": {
      "file_path": "src/components/IndustryBanner.tsx",
      "filename": "IndustryBanner.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 824,
      "lines": 24,
      "imports": [
        "react",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "IndustryBanner"
      ],
      "components": [
        "IndustryBanner",
        "IndustryBanner"
      ],
      "hooks": [
        "useIndustry"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/PerformanceMetrics.tsx": {
      "file_path": "src/components/PerformanceMetrics.tsx",
      "filename": "PerformanceMetrics.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 15149,
      "lines": 407,
      "imports": [
        "react",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "lucide-react"
      ],
      "exports": [
        "PerformanceMetrics"
      ],
      "components": [
        "MetricCard",
        "PerformanceMetrics"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button",
        "button",
        "button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/SimpleLayout.tsx": {
      "file_path": "src/components/SimpleLayout.tsx",
      "filename": "SimpleLayout.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 1934,
      "lines": 57,
      "imports": [
        "react",
        "react-router-dom"
      ],
      "exports": [
        "SimpleLayout"
      ],
      "components": [
        "SimpleLayout",
        "SimpleLayout"
      ],
      "hooks": [
        "useLocation"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/ErrorBoundary.tsx": {
      "file_path": "src/components/ErrorBoundary.tsx",
      "filename": "ErrorBoundary.tsx",
      "directory": "src/components",
      "extension": ".tsx",
      "size": 2449,
      "lines": 74,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "ErrorBoundary"
      ],
      "components": [
        "ErrorBoundary"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/DecisionPath/NodeIndicators.tsx": {
      "file_path": "src/components/DecisionPath/NodeIndicators.tsx",
      "filename": "NodeIndicators.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 1580,
      "lines": 52,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "NodeIndicators"
      ],
      "components": [
        "NodeIndicators",
        "NodeIndicators"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/NodeOperation.tsx": {
      "file_path": "src/components/DecisionPath/NodeOperation.tsx",
      "filename": "NodeOperation.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 803,
      "lines": 32,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "NodeOperation"
      ],
      "components": [
        "NodeOperation",
        "NodeOperation"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/GraphLegend.tsx": {
      "file_path": "src/components/DecisionPath/GraphLegend.tsx",
      "filename": "GraphLegend.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 735,
      "lines": 20,
      "imports": [
        "react",
        "./types"
      ],
      "exports": [
        "GraphLegend"
      ],
      "components": [
        "GraphLegend",
        "GraphLegend"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/PathDrawing.tsx": {
      "file_path": "src/components/DecisionPath/PathDrawing.tsx",
      "filename": "PathDrawing.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 1873,
      "lines": 54,
      "imports": [
        "react",
        "./utils/pathUtils",
        "./types"
      ],
      "exports": [
        "PathDrawing"
      ],
      "components": [
        "PathDrawing",
        "PathDrawing"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/DecisionPathGraph.tsx": {
      "file_path": "src/components/DecisionPath/DecisionPathGraph.tsx",
      "filename": "DecisionPathGraph.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 4142,
      "lines": 131,
      "imports": [
        "react",
        "lucide-react",
        "./ArrowMarkers",
        "./GraphHeader",
        "./GraphLegend",
        "./GraphNode",
        "./PathDrawing",
        "./types",
        "./utils/pathUtils"
      ],
      "exports": [
        "DecisionPathGraph"
      ],
      "components": [
        "DecisionPathGraph",
        "DecisionPathGraph"
      ],
      "hooks": [
        "useEnter",
        "useLeave",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph",
        "Graph",
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/NodeOperationsList.tsx": {
      "file_path": "src/components/DecisionPath/NodeOperationsList.tsx",
      "filename": "NodeOperationsList.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 794,
      "lines": 33,
      "imports": [
        "react",
        "./NodeOperation"
      ],
      "exports": [
        "NodeOperationsList"
      ],
      "components": [
        "NodeOperationsList",
        "NodeOperationsList"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/NodeHeader.tsx": {
      "file_path": "src/components/DecisionPath/NodeHeader.tsx",
      "filename": "NodeHeader.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 1633,
      "lines": 62,
      "imports": [
        "react",
        "lucide-react",
        "./utils/nodeUtils"
      ],
      "exports": [
        "NodeHeader"
      ],
      "components": [
        "NodeHeader",
        "NodeHeader"
      ],
      "hooks": [
        "useEvent"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/GraphHeader.tsx": {
      "file_path": "src/components/DecisionPath/GraphHeader.tsx",
      "filename": "GraphHeader.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 900,
      "lines": 20,
      "imports": [
        "react",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "GraphHeader"
      ],
      "components": [
        "GraphHeader",
        "GraphHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/ArrowMarkers.tsx": {
      "file_path": "src/components/DecisionPath/ArrowMarkers.tsx",
      "filename": "ArrowMarkers.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 824,
      "lines": 40,
      "imports": [
        "react"
      ],
      "exports": [
        "ArrowMarkers"
      ],
      "components": [
        "ArrowMarkers",
        "ArrowMarkers"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/types.ts": {
      "file_path": "src/components/DecisionPath/types.ts",
      "filename": "types.ts",
      "directory": "src/components/DecisionPath",
      "extension": ".ts",
      "size": 1755,
      "lines": 90,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [
        "useLeave",
        "useEnter"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/GraphNode.tsx": {
      "file_path": "src/components/DecisionPath/GraphNode.tsx",
      "filename": "GraphNode.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 4903,
      "lines": 139,
      "imports": [
        "react",
        "@/components/ui/tooltip",
        "./types",
        "./utils/nodeUtils",
        "./NodeHeader",
        "./NodeOperationsList",
        "./NodeIndicators",
        "./NodeTooltipContent"
      ],
      "exports": [
        "GraphNode"
      ],
      "components": [
        "GraphNode",
        "GraphNode"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEvent",
        "useEnter"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/NodeTooltipContent.tsx": {
      "file_path": "src/components/DecisionPath/NodeTooltipContent.tsx",
      "filename": "NodeTooltipContent.tsx",
      "directory": "src/components/DecisionPath",
      "extension": ".tsx",
      "size": 1412,
      "lines": 46,
      "imports": [
        "react",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "NodeTooltipContent"
      ],
      "components": [
        "NodeTooltipContent",
        "NodeTooltipContent"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DecisionPath/index.ts": {
      "file_path": "src/components/DecisionPath/index.ts",
      "filename": "index.ts",
      "directory": "src/components/DecisionPath",
      "extension": ".ts",
      "size": 58,
      "lines": 3,
      "imports": [],
      "exports": [
        "DecisionPathGraph "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 3 lines"
    },
    "src/components/DecisionPath/utils/nodeUtils.ts": {
      "file_path": "src/components/DecisionPath/utils/nodeUtils.ts",
      "filename": "nodeUtils.ts",
      "directory": "src/components/DecisionPath/utils",
      "extension": ".ts",
      "size": 6237,
      "lines": 81,
      "imports": [],
      "exports": [
        "getRandomPercentage",
        "getPercentageColor",
        "getRandomTimeAgo",
        "getCurrentTimestamp",
        "generateAgentResponse"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/utils/pathUtils.ts": {
      "file_path": "src/components/DecisionPath/utils/pathUtils.ts",
      "filename": "pathUtils.ts",
      "directory": "src/components/DecisionPath/utils",
      "extension": ".ts",
      "size": 6304,
      "lines": 206,
      "imports": [
        "../types"
      ],
      "exports": [
        "drawPath",
        "getPathProperties",
        "getPulseEffect",
        "combineGraphNodes"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/aspect-ratio.tsx": {
      "file_path": "src/components/ui/aspect-ratio.tsx",
      "filename": "aspect-ratio.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 140,
      "lines": 6,
      "imports": [
        "@radix-ui/react-aspect-ratio"
      ],
      "exports": [
        "AspectRatio "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/ui/alert-dialog.tsx": {
      "file_path": "src/components/ui/alert-dialog.tsx",
      "filename": "alert-dialog.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 4420,
      "lines": 140,
      "imports": [
        "react",
        "@radix-ui/react-alert-dialog",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [
        "AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/pagination.tsx": {
      "file_path": "src/components/ui/pagination.tsx",
      "filename": "pagination.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 2751,
      "lines": 118,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [
        "Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/tabs.tsx": {
      "file_path": "src/components/ui/tabs.tsx",
      "filename": "tabs.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1883,
      "lines": 54,
      "imports": [
        "react",
        "@radix-ui/react-tabs",
        "@/lib/utils"
      ],
      "exports": [
        "Tabs, TabsList, TabsTrigger, TabsContent "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/card.tsx": {
      "file_path": "src/components/ui/card.tsx",
      "filename": "card.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1878,
      "lines": 81,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/slider.tsx": {
      "file_path": "src/components/ui/slider.tsx",
      "filename": "slider.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1076,
      "lines": 26,
      "imports": [
        "react",
        "@radix-ui/react-slider",
        "@/lib/utils"
      ],
      "exports": [
        "Slider "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/popover.tsx": {
      "file_path": "src/components/ui/popover.tsx",
      "filename": "popover.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1230,
      "lines": 30,
      "imports": [
        "react",
        "@radix-ui/react-popover",
        "@/lib/utils"
      ],
      "exports": [
        "Popover, PopoverTrigger, PopoverContent "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/progress.tsx": {
      "file_path": "src/components/ui/progress.tsx",
      "filename": "progress.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 807,
      "lines": 25,
      "imports": [
        "react",
        "@radix-ui/react-progress",
        "@/lib/utils"
      ],
      "exports": [
        "Progress "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toaster.tsx": {
      "file_path": "src/components/ui/toaster.tsx",
      "filename": "toaster.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 801,
      "lines": 35,
      "imports": [
        "@/hooks/toast"
      ],
      "exports": [
        "Toaster"
      ],
      "components": [
        "Toaster"
      ],
      "hooks": [
        "useToast"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/ui/input-otp.tsx": {
      "file_path": "src/components/ui/input-otp.tsx",
      "filename": "input-otp.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 2154,
      "lines": 70,
      "imports": [
        "react",
        "input-otp",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator "
      ],
      "components": [],
      "hooks": [
        "useContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/chart.tsx": {
      "file_path": "src/components/ui/chart.tsx",
      "filename": "chart.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 10466,
      "lines": 364,
      "imports": [
        "react",
        "recharts",
        "@/lib/utils"
      ],
      "exports": [
        "type",
        "ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n"
      ],
      "components": [],
      "hooks": [
        "useContext",
        "useChart",
        "useId",
        "useMemo"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Chart",
        "Chart",
        "Chart",
        "Chart"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/hover-card.tsx": {
      "file_path": "src/components/ui/hover-card.tsx",
      "filename": "hover-card.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1184,
      "lines": 28,
      "imports": [
        "react",
        "@radix-ui/react-hover-card",
        "@/lib/utils"
      ],
      "exports": [
        "HoverCard, HoverCardTrigger, HoverCardContent "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sheet.tsx": {
      "file_path": "src/components/ui/sheet.tsx",
      "filename": "sheet.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 4250,
      "lines": 132,
      "imports": [
        "@radix-ui/react-dialog",
        "class-variance-authority",
        "lucide-react",
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "Sheet, SheetClose,\n  SheetContent, SheetDescription, SheetFooter, SheetHeader, SheetOverlay, SheetPortal, SheetTitle, SheetTrigger\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/scroll-area.tsx": {
      "file_path": "src/components/ui/scroll-area.tsx",
      "filename": "scroll-area.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1642,
      "lines": 47,
      "imports": [
        "react",
        "@radix-ui/react-scroll-area",
        "@/lib/utils"
      ],
      "exports": [
        "ScrollArea, ScrollBar "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/resizable.tsx": {
      "file_path": "src/components/ui/resizable.tsx",
      "filename": "resizable.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1709,
      "lines": 44,
      "imports": [
        "lucide-react",
        "react-resizable-panels",
        "@/lib/utils"
      ],
      "exports": [
        "ResizablePanelGroup, ResizablePanel, ResizableHandle "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/label.tsx": {
      "file_path": "src/components/ui/label.tsx",
      "filename": "label.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 710,
      "lines": 25,
      "imports": [
        "react",
        "@radix-ui/react-label",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "Label "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sonner.tsx": {
      "file_path": "src/components/ui/sonner.tsx",
      "filename": "sonner.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 275,
      "lines": 16,
      "imports": [
        "sonner"
      ],
      "exports": [
        "Toaster "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 16 lines"
    },
    "src/components/ui/navigation-menu.tsx": {
      "file_path": "src/components/ui/navigation-menu.tsx",
      "filename": "navigation-menu.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 5046,
      "lines": 129,
      "imports": [
        "react",
        "@radix-ui/react-navigation-menu",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/accordion.tsx": {
      "file_path": "src/components/ui/accordion.tsx",
      "filename": "accordion.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1977,
      "lines": 57,
      "imports": [
        "react",
        "@radix-ui/react-accordion",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Accordion, AccordionItem, AccordionTrigger, AccordionContent "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "className=\"h-4 w-4 shrink-0 transition-transform duration-200\""
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/drawer.tsx": {
      "file_path": "src/components/ui/drawer.tsx",
      "filename": "drawer.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 3007,
      "lines": 117,
      "imports": [
        "react",
        "vaul",
        "@/lib/utils"
      ],
      "exports": [
        "Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/tooltip.tsx": {
      "file_path": "src/components/ui/tooltip.tsx",
      "filename": "tooltip.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1145,
      "lines": 29,
      "imports": [
        "react",
        "@radix-ui/react-tooltip",
        "@/lib/utils"
      ],
      "exports": [
        "Tooltip, TooltipTrigger, TooltipContent, TooltipProvider "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/alert.tsx": {
      "file_path": "src/components/ui/alert.tsx",
      "filename": "alert.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1584,
      "lines": 60,
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "Alert, AlertTitle, AlertDescription "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/use-toast.ts": {
      "file_path": "src/components/ui/use-toast.ts",
      "filename": "use-toast.ts",
      "directory": "src/components/ui",
      "extension": ".ts",
      "size": 201,
      "lines": 6,
      "imports": [
        "@/hooks/use-toast"
      ],
      "exports": [
        "toast",
        "useToast, toast, dismissToast, ToastProvider "
      ],
      "components": [],
      "hooks": [
        "useToast"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/ui/switch.tsx": {
      "file_path": "src/components/ui/switch.tsx",
      "filename": "switch.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1138,
      "lines": 27,
      "imports": [
        "react",
        "@radix-ui/react-switch",
        "@/lib/utils"
      ],
      "exports": [
        "Switch "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/calendar.tsx": {
      "file_path": "src/components/ui/calendar.tsx",
      "filename": "calendar.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 2620,
      "lines": 65,
      "imports": [
        "react",
        "lucide-react",
        "react-day-picker",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [
        "type",
        "Calendar "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/breadcrumb.tsx": {
      "file_path": "src/components/ui/breadcrumb.tsx",
      "filename": "breadcrumb.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 2701,
      "lines": 116,
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/radio-group.tsx": {
      "file_path": "src/components/ui/radio-group.tsx",
      "filename": "radio-group.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1467,
      "lines": 43,
      "imports": [
        "react",
        "@radix-ui/react-radio-group",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "RadioGroup, RadioGroupItem "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/command.tsx": {
      "file_path": "src/components/ui/command.tsx",
      "filename": "command.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 4879,
      "lines": 154,
      "imports": [
        "react",
        "@radix-ui/react-dialog",
        "cmdk",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/dialog"
      ],
      "exports": [
        "Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\""
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toggle-group.tsx": {
      "file_path": "src/components/ui/toggle-group.tsx",
      "filename": "toggle-group.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1739,
      "lines": 60,
      "imports": [
        "react",
        "@radix-ui/react-toggle-group",
        "class-variance-authority",
        "@/lib/utils",
        "@/components/ui/toggle"
      ],
      "exports": [
        "ToggleGroup, ToggleGroupItem "
      ],
      "components": [],
      "hooks": [
        "useContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/avatar.tsx": {
      "file_path": "src/components/ui/avatar.tsx",
      "filename": "avatar.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1405,
      "lines": 49,
      "imports": [
        "react",
        "@radix-ui/react-avatar",
        "@/lib/utils"
      ],
      "exports": [
        "Avatar, AvatarImage, AvatarFallback "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/menubar.tsx": {
      "file_path": "src/components/ui/menubar.tsx",
      "filename": "menubar.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 7974,
      "lines": 235,
      "imports": [
        "react",
        "@radix-ui/react-menubar",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/dialog.tsx": {
      "file_path": "src/components/ui/dialog.tsx",
      "filename": "dialog.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 3835,
      "lines": 121,
      "imports": [
        "react",
        "@radix-ui/react-dialog",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/badge.tsx": {
      "file_path": "src/components/ui/badge.tsx",
      "filename": "badge.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1127,
      "lines": 36,
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "interface",
        "Badge, badgeVariants "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sidebar.tsx": {
      "file_path": "src/components/ui/sidebar.tsx",
      "filename": "sidebar.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 317,
      "lines": 9,
      "imports": [],
      "exports": [
        "file",
        "commonly",
        "SidebarProvider, useSidebar "
      ],
      "components": [],
      "hooks": [
        "useSidebar"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 9 lines"
    },
    "src/components/ui/table.tsx": {
      "file_path": "src/components/ui/table.tsx",
      "filename": "table.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 2765,
      "lines": 118,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "table"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/separator.tsx": {
      "file_path": "src/components/ui/separator.tsx",
      "filename": "separator.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 757,
      "lines": 31,
      "imports": [
        "react",
        "@radix-ui/react-separator",
        "@/lib/utils"
      ],
      "exports": [
        "Separator "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/button.tsx": {
      "file_path": "src/components/ui/button.tsx",
      "filename": "button.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1901,
      "lines": 57,
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "interface",
        "Button, buttonVariants "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toggle.tsx": {
      "file_path": "src/components/ui/toggle.tsx",
      "filename": "toggle.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1435,
      "lines": 44,
      "imports": [
        "react",
        "@radix-ui/react-toggle",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "Toggle, toggleVariants "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toast.tsx": {
      "file_path": "src/components/ui/toast.tsx",
      "filename": "toast.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 4846,
      "lines": 129,
      "imports": [
        "react",
        "@radix-ui/react-toast",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/checkbox.tsx": {
      "file_path": "src/components/ui/checkbox.tsx",
      "filename": "checkbox.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 1056,
      "lines": 29,
      "imports": [
        "react",
        "@radix-ui/react-checkbox",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Checkbox "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/collapsible.tsx": {
      "file_path": "src/components/ui/collapsible.tsx",
      "filename": "collapsible.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 315,
      "lines": 10,
      "imports": [
        "@radix-ui/react-collapsible"
      ],
      "exports": [
        "Collapsible, CollapsibleTrigger, CollapsibleContent "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 10 lines"
    },
    "src/components/ui/dropdown-menu.tsx": {
      "file_path": "src/components/ui/dropdown-menu.tsx",
      "filename": "dropdown-menu.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 7295,
      "lines": 199,
      "imports": [
        "react",
        "@radix-ui/react-dropdown-menu",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/select.tsx": {
      "file_path": "src/components/ui/select.tsx",
      "filename": "select.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 5615,
      "lines": 159,
      "imports": [
        "react",
        "@radix-ui/react-select",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/textarea.tsx": {
      "file_path": "src/components/ui/textarea.tsx",
      "filename": "textarea.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 770,
      "lines": 23,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "interface",
        "Textarea "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/input.tsx": {
      "file_path": "src/components/ui/input.tsx",
      "filename": "input.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 791,
      "lines": 23,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "Input "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "input"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/skeleton.tsx": {
      "file_path": "src/components/ui/skeleton.tsx",
      "filename": "skeleton.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 261,
      "lines": 16,
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "Skeleton "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 16 lines"
    },
    "src/components/ui/context-menu.tsx": {
      "file_path": "src/components/ui/context-menu.tsx",
      "filename": "context-menu.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 7246,
      "lines": 199,
      "imports": [
        "react",
        "@radix-ui/react-context-menu",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/form.tsx": {
      "file_path": "src/components/ui/form.tsx",
      "filename": "form.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 4085,
      "lines": 177,
      "imports": [
        "react",
        "@radix-ui/react-label",
        "@radix-ui/react-slot",
        "@/lib/utils",
        "@/components/ui/label"
      ],
      "exports": [
        "useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n"
      ],
      "components": [],
      "hooks": [
        "useFormField",
        "useContext",
        "useId",
        "useFormContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "Form",
        "Form",
        "Form",
        "Form"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/carousel.tsx": {
      "file_path": "src/components/ui/carousel.tsx",
      "filename": "carousel.tsx",
      "directory": "src/components/ui",
      "extension": ".tsx",
      "size": 6210,
      "lines": 261,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [
        "type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n"
      ],
      "components": [],
      "hooks": [
        "useEmblaCarousel",
        "useContext",
        "useCallback",
        "useState",
        "useEffect",
        "useCarousel"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "UI Components",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 0 components"
    },
    "src/components/ui/sidebar/sidebar-context.tsx": {
      "file_path": "src/components/ui/sidebar/sidebar-context.tsx",
      "filename": "sidebar-context.tsx",
      "directory": "src/components/ui/sidebar",
      "extension": ".tsx",
      "size": 540,
      "lines": 24,
      "imports": [
        "react"
      ],
      "exports": [
        "type",
        "SidebarContext",
        "useSidebar"
      ],
      "components": [
        "SidebarContext"
      ],
      "hooks": [
        "useContext",
        "useSidebar"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/ui/sidebar/sidebar-components.tsx": {
      "file_path": "src/components/ui/sidebar/sidebar-components.tsx",
      "filename": "sidebar-components.tsx",
      "directory": "src/components/ui/sidebar",
      "extension": ".tsx",
      "size": 18913,
      "lines": 631,
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/separator",
        "@/components/ui/sheet",
        "@/components/ui/skeleton",
        "./sidebar-context",
        "./sidebar-provider",
        "./sidebar-utils"
      ],
      "exports": [
        "the",
        "SidebarProvider, useSidebar ",
        "Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger\n"
      ],
      "components": [],
      "hooks": [
        "useSidebar",
        "useMemo"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "button",
        "Input",
        "className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\""
      ],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sidebar/sidebar-utils.ts": {
      "file_path": "src/components/ui/sidebar/sidebar-utils.ts",
      "filename": "sidebar-utils.ts",
      "directory": "src/components/ui/sidebar",
      "extension": ".ts",
      "size": 1485,
      "lines": 25,
      "imports": [
        "class-variance-authority"
      ],
      "exports": [
        "sidebarMenuButtonVariants"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sidebar/sidebar-provider.tsx": {
      "file_path": "src/components/ui/sidebar/sidebar-provider.tsx",
      "filename": "sidebar-provider.tsx",
      "directory": "src/components/ui/sidebar",
      "extension": ".tsx",
      "size": 3459,
      "lines": 121,
      "imports": [
        "react",
        "@radix-ui/react-tooltip",
        "@/lib/utils",
        "@/hooks/use-mobile",
        "./sidebar-context"
      ],
      "exports": [
        "SIDEBAR_COOKIE_NAME",
        "SIDEBAR_COOKIE_MAX_AGE",
        "SIDEBAR_WIDTH",
        "SIDEBAR_WIDTH_MOBILE",
        "SIDEBAR_WIDTH_ICON",
        "SIDEBAR_KEYBOARD_SHORTCUT",
        "SidebarProvider"
      ],
      "components": [
        "SIDEBAR_COOKIE_NAME",
        "SIDEBAR_COOKIE_MAX_AGE",
        "SIDEBAR_WIDTH",
        "SIDEBAR_WIDTH_MOBILE",
        "SIDEBAR_WIDTH_ICON",
        "SIDEBAR_KEYBOARD_SHORTCUT",
        "SidebarProvider"
      ],
      "hooks": [
        "useState",
        "useIsMobile",
        "useEffect",
        "useCallback",
        "useMemo"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 7 components"
    },
    "src/components/ui/sidebar/index.ts": {
      "file_path": "src/components/ui/sidebar/index.ts",
      "filename": "index.ts",
      "directory": "src/components/ui/sidebar",
      "extension": ".ts",
      "size": 676,
      "lines": 32,
      "imports": [],
      "exports": [
        "Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar\n",
        "SidebarContext, type SidebarContext as SidebarContextType "
      ],
      "components": [],
      "hooks": [
        "useSidebar"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Infrastructure",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/OverviewTab.tsx": {
      "file_path": "src/components/AgentTraceability/OverviewTab.tsx",
      "filename": "OverviewTab.tsx",
      "directory": "src/components/AgentTraceability",
      "extension": ".tsx",
      "size": 16624,
      "lines": 334,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "OverviewTab"
      ],
      "components": [
        "OverviewTab",
        "OverviewTab"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/types.ts": {
      "file_path": "src/components/AgentTraceability/types.ts",
      "filename": "types.ts",
      "directory": "src/components/AgentTraceability",
      "extension": ".ts",
      "size": 1014,
      "lines": 44,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/GraphTab.tsx": {
      "file_path": "src/components/AgentTraceability/GraphTab.tsx",
      "filename": "GraphTab.tsx",
      "directory": "src/components/AgentTraceability",
      "extension": ".tsx",
      "size": 5996,
      "lines": 168,
      "imports": [
        "react",
        "./components/NodeDetails",
        "./components/conversation/ConversationHistory",
        "./components/GraphVisualizer",
        "./components/mocks"
      ],
      "exports": [
        "GraphTab"
      ],
      "components": [
        "GraphTab",
        "GraphTab"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph",
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/index.ts": {
      "file_path": "src/components/AgentTraceability/index.ts",
      "filename": "index.ts",
      "directory": "src/components/AgentTraceability",
      "extension": ".ts",
      "size": 285,
      "lines": 6,
      "imports": [],
      "exports": [
        "type",
        "type",
        "AgentTraceability ",
        "ConversationHistory "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/AgentTraceability/AgentsTab.tsx": {
      "file_path": "src/components/AgentTraceability/AgentsTab.tsx",
      "filename": "AgentsTab.tsx",
      "directory": "src/components/AgentTraceability",
      "extension": ".tsx",
      "size": 7192,
      "lines": 154,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "AgentsTab"
      ],
      "components": [
        "AgentsTab",
        "AgentsTab"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/AgentTraceability.tsx": {
      "file_path": "src/components/AgentTraceability/AgentTraceability.tsx",
      "filename": "AgentTraceability.tsx",
      "directory": "src/components/AgentTraceability",
      "extension": ".tsx",
      "size": 4513,
      "lines": 104,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "lucide-react",
        "./OverviewTab",
        "./GraphTab",
        "./types"
      ],
      "exports": [
        "AgentTraceability"
      ],
      "components": [
        "AgentTraceability",
        "AgentTraceability"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/components/NodeDetails.tsx": {
      "file_path": "src/components/AgentTraceability/components/NodeDetails.tsx",
      "filename": "NodeDetails.tsx",
      "directory": "src/components/AgentTraceability/components",
      "extension": ".tsx",
      "size": 12863,
      "lines": 292,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "./conversation/types",
        "@/components/AgentWorkspace/types"
      ],
      "exports": [
        "NodeDetails"
      ],
      "components": [
        "NodeDetails",
        "NodeDetails"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/components/index.ts": {
      "file_path": "src/components/AgentTraceability/components/index.ts",
      "filename": "index.ts",
      "directory": "src/components/AgentTraceability/components",
      "extension": ".ts",
      "size": 166,
      "lines": 5,
      "imports": [],
      "exports": [
        "GraphVisualizer ",
        "NodeDetails ",
        "mockConversationHistory, mockOperations "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 5 lines"
    },
    "src/components/AgentTraceability/components/GraphVisualizer.tsx": {
      "file_path": "src/components/AgentTraceability/components/GraphVisualizer.tsx",
      "filename": "GraphVisualizer.tsx",
      "directory": "src/components/AgentTraceability/components",
      "extension": ".tsx",
      "size": 2104,
      "lines": 67,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react",
        "@/components/DecisionPath",
        "./mocks"
      ],
      "exports": [
        "GraphVisualizer"
      ],
      "components": [
        "GraphVisualizer",
        "GraphVisualizer"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/components/mocks/mockConversationHistory.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/mockConversationHistory.ts",
      "filename": "mockConversationHistory.ts",
      "directory": "src/components/AgentTraceability/components/mocks",
      "extension": ".ts",
      "size": 9669,
      "lines": 285,
      "imports": [
        "../conversation/types"
      ],
      "exports": [
        "mockConversationHistory"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/mocks/mockReasoningOutputs.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/mockReasoningOutputs.ts",
      "filename": "mockReasoningOutputs.ts",
      "directory": "src/components/AgentTraceability/components/mocks",
      "extension": ".ts",
      "size": 17347,
      "lines": 359,
      "imports": [
        "@/components/AgentWorkspace/types"
      ],
      "exports": [
        "mockReasoningOutputs"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/mocks/mockOperations.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/mockOperations.ts",
      "filename": "mockOperations.ts",
      "directory": "src/components/AgentTraceability/components/mocks",
      "extension": ".ts",
      "size": 2720,
      "lines": 101,
      "imports": [],
      "exports": [
        "mockOperations"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/mocks/index.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/index.ts",
      "filename": "index.ts",
      "directory": "src/components/AgentTraceability/components/mocks",
      "extension": ".ts",
      "size": 184,
      "lines": 5,
      "imports": [],
      "exports": [
        "mockConversationHistory ",
        "mockOperations ",
        "mockReasoningOutputs "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 5 lines"
    },
    "src/components/AgentTraceability/components/conversation/OperationsList.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/OperationsList.tsx",
      "filename": "OperationsList.tsx",
      "directory": "src/components/AgentTraceability/components/conversation",
      "extension": ".tsx",
      "size": 1904,
      "lines": 57,
      "imports": [
        "react",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "OperationsList"
      ],
      "components": [
        "OperationsList",
        "OperationsList"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/components/conversation/MessageItem.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/MessageItem.tsx",
      "filename": "MessageItem.tsx",
      "directory": "src/components/AgentTraceability/components/conversation",
      "extension": ".tsx",
      "size": 3195,
      "lines": 91,
      "imports": [
        "react",
        "@/components/ui/badge",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "MessageItem"
      ],
      "components": [
        "MessageItem",
        "MessageItem"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/components/conversation/ConversationHistory.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/ConversationHistory.tsx",
      "filename": "ConversationHistory.tsx",
      "directory": "src/components/AgentTraceability/components/conversation",
      "extension": ".tsx",
      "size": 2275,
      "lines": 64,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/ui/scroll-area",
        "./EmptyState",
        "./OperationsList",
        "./MessagesList",
        "./types"
      ],
      "exports": [
        "ConversationHistory"
      ],
      "components": [
        "ConversationHistory",
        "ConversationHistory"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/components/conversation/types.ts": {
      "file_path": "src/components/AgentTraceability/components/conversation/types.ts",
      "filename": "types.ts",
      "directory": "src/components/AgentTraceability/components/conversation",
      "extension": ".ts",
      "size": 479,
      "lines": 21,
      "imports": [],
      "exports": [
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/conversation/index.ts": {
      "file_path": "src/components/AgentTraceability/components/conversation/index.ts",
      "filename": "index.ts",
      "directory": "src/components/AgentTraceability/components/conversation",
      "extension": ".ts",
      "size": 114,
      "lines": 4,
      "imports": [],
      "exports": [
        "type",
        "ConversationHistory "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/components/AgentTraceability/components/conversation/MessagesList.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/MessagesList.tsx",
      "filename": "MessagesList.tsx",
      "directory": "src/components/AgentTraceability/components/conversation",
      "extension": ".tsx",
      "size": 764,
      "lines": 29,
      "imports": [
        "react",
        "lucide-react",
        "./MessageItem",
        "./types"
      ],
      "exports": [
        "MessagesList"
      ],
      "components": [
        "MessagesList",
        "MessagesList"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentTraceability/components/conversation/EmptyState.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/EmptyState.tsx",
      "filename": "EmptyState.tsx",
      "directory": "src/components/AgentTraceability/components/conversation",
      "extension": ".tsx",
      "size": 348,
      "lines": 13,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "EmptyState"
      ],
      "components": [
        "EmptyState",
        "EmptyState"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/Settings/ApiTestResponse.tsx": {
      "file_path": "src/components/Settings/ApiTestResponse.tsx",
      "filename": "ApiTestResponse.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 9218,
      "lines": 258,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "sonner",
        "lucide-react",
        "@/components/ui/alert"
      ],
      "exports": [
        "ApiTestResponse"
      ],
      "components": [
        "ApiTestResponse",
        "ApiTestResponse"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [
        "https://api.openai.com/v1/chat/completions",
        "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent",
        "https://api.anthropic.com/v1/messages",
        "https://api.openai.com/v1/chat/completions",
        "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent",
        "https://api.anthropic.com/v1/messages",
        "https://platform.openai.com/account/billing",
        "https://console.cloud.google.com/apis/credentials",
        "https://console.anthropic.com/settings/keys"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/Settings/LogoSettings.tsx": {
      "file_path": "src/components/Settings/LogoSettings.tsx",
      "filename": "LogoSettings.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 8579,
      "lines": 244,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/contexts/IndustryContext",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "LogoSettings"
      ],
      "components": [
        "LogoSettings",
        "LogoSettings"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useIndustry"
      ],
      "routes": [],
      "api_calls": [
        "https://aws.amazon.com/favicon.ico",
        "https://aws.amazon.com/favicon.ico",
        "https://example.com/logo.png"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "input",
        "Button",
        "Input",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/Settings/VectorStoreSettings.tsx": {
      "file_path": "src/components/Settings/VectorStoreSettings.tsx",
      "filename": "VectorStoreSettings.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 8864,
      "lines": 212,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/AgentWorkspace/ApiKeyInput",
        "@/hooks/useSupabaseApiKey",
        "sonner",
        "@/utils/vectorStore"
      ],
      "exports": [
        "VectorStoreSettings"
      ],
      "components": [
        "VectorStoreSettings",
        "VectorStoreSettings"
      ],
      "hooks": [
        "useVectorStore",
        "useState",
        "useSupabaseApiKey",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://www.w3.org/2000/svg"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "9 functionality indicators, 2 components"
    },
    "src/components/Settings/MCPSettings.tsx": {
      "file_path": "src/components/Settings/MCPSettings.tsx",
      "filename": "MCPSettings.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 14109,
      "lines": 352,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/dialog",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "MCPSettings"
      ],
      "components": [
        "MCPSettings"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:8000/mcp"
      ],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Button",
        "Button",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "MCP Gateway",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "10 functionality indicators, 1 components"
    },
    "src/components/Settings/BackendControlPanel.tsx": {
      "file_path": "src/components/Settings/BackendControlPanel.tsx",
      "filename": "BackendControlPanel.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 26716,
      "lines": 572,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "@/components/AgentWorkspace/hooks/useLangChainKey",
        "@/components/AgentWorkspace/ApiKeyInput"
      ],
      "exports": [
        "BackendControlPanel"
      ],
      "components": [
        "BackendControlPanel",
        "BackendControlPanel"
      ],
      "hooks": [
        "useLangChainKey",
        "useState",
        "useEnabled"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:11434",
        "http://localhost:11434",
        "https://cloud.langfuse.com"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Input",
        "Input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/Settings/ModelSettings.tsx": {
      "file_path": "src/components/Settings/ModelSettings.tsx",
      "filename": "ModelSettings.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 18057,
      "lines": 404,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/AgentWorkspace/ApiKeyInput",
        "@/hooks/useSupabaseApiKey",
        "@/utils/models/modelTypes",
        "sonner"
      ],
      "exports": [
        "ModelSettings"
      ],
      "components": [
        "ModelSettings",
        "ModelSettings"
      ],
      "hooks": [
        "useState",
        "useSupabaseApiKey",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "https://api.openai.com/v1/models",
        "http://localhost:11434",
        "http://www.w3.org/2000/svg",
        "http://www.w3.org/2000/svg",
        "http://www.w3.org/2000/svg",
        "http://www.w3.org/2000/svg",
        "https://api.openai.com/v1/models",
        "/api/tags"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "10 functionality indicators, 2 components"
    },
    "src/components/Settings/GeneralSettings.tsx": {
      "file_path": "src/components/Settings/GeneralSettings.tsx",
      "filename": "GeneralSettings.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 11961,
      "lines": 330,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/separator",
        "@/components/ui/select",
        "@/components/ui/button",
        "@/components/ui/input",
        "lucide-react",
        "@/contexts/IndustryContext",
        "sonner"
      ],
      "exports": [
        "GeneralSettings"
      ],
      "components": [
        "LogoCustomization",
        "GeneralSettings",
        "GeneralSettings"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useIndustry"
      ],
      "routes": [],
      "api_calls": [
        "https://aws.amazon.com/favicon.ico",
        "https://aws.amazon.com/favicon.ico",
        "https://example.com/logo.png"
      ],
      "ui_elements": [
        "Button",
        "input",
        "Button",
        "Input",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 3 components"
    },
    "src/components/Settings/ApiSettings.tsx": {
      "file_path": "src/components/Settings/ApiSettings.tsx",
      "filename": "ApiSettings.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 3444,
      "lines": 85,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/AgentWorkspace/hooks/useLangChainKey",
        "@/components/AgentWorkspace/ApiKeyInput",
        "lucide-react",
        "@/hooks/useSupabaseApiKey",
        "@/components/ui/button",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "ApiSettings"
      ],
      "components": [
        "ApiSettings",
        "ApiSettings"
      ],
      "hooks": [
        "useLangChainKey",
        "useSecretKey",
        "useSupabaseApiKey",
        "usePublicKey"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/Settings/BackendServices.tsx": {
      "file_path": "src/components/Settings/BackendServices.tsx",
      "filename": "BackendServices.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 5854,
      "lines": 153,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "./ModelSettings",
        "./VectorStoreSettings",
        "./MemorySettings",
        "./ApiTestResponse",
        "@/hooks/useSupabaseApiKey",
        "@/integrations/supabase/client",
        "sonner",
        "lucide-react"
      ],
      "exports": [
        "BackendServices"
      ],
      "components": [
        "BackendServices",
        "BackendServices"
      ],
      "hooks": [
        "useState",
        "useSupabaseApiKey"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "button",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 2 components"
    },
    "src/components/Settings/MemorySettings.tsx": {
      "file_path": "src/components/Settings/MemorySettings.tsx",
      "filename": "MemorySettings.tsx",
      "directory": "src/components/Settings",
      "extension": ".tsx",
      "size": 15036,
      "lines": 360,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select",
        "sonner",
        "@/utils/mem0Service",
        "@/hooks/useSupabaseConnection",
        "@/integrations/supabase/client",
        "lucide-react"
      ],
      "exports": [
        "MemorySettings"
      ],
      "components": [
        "MemorySettings",
        "MemorySettings"
      ],
      "hooks": [
        "useSupabaseConnection",
        "useState",
        "useMem0Service",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://www.w3.org/2000/svg"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "table",
        "Button",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "9 functionality indicators, 2 components"
    },
    "src/components/AgentMarketplace/ModernAgentMarketplace.tsx": {
      "file_path": "src/components/AgentMarketplace/ModernAgentMarketplace.tsx",
      "filename": "ModernAgentMarketplace.tsx",
      "directory": "src/components/AgentMarketplace",
      "extension": ".tsx",
      "size": 33750,
      "lines": 811,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/hooks/use-toast",
        "@/integrations/supabase/client"
      ],
      "exports": [
        "ModernAgentMarketplace",
        "ModernAgentMarketplace"
      ],
      "components": [
        "ModernAgentMarketplace",
        "AgentCard",
        "RequestDialog",
        "SubscriptionsTab",
        "RequestsTab",
        "AnalyticsTab",
        "ModernAgentMarketplace"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-purple-300\""
      ],
      "category": "Core Platform",
      "subcategory": "AI Marketplace",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/CustomerValueManagement/NextBestOfferTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/NextBestOfferTab.tsx",
      "filename": "NextBestOfferTab.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 43619,
      "lines": 825,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "recharts",
        "@/components/ui/table",
        "@/components/ui/select",
        "lucide-react",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "NextBestOfferTab"
      ],
      "components": [
        "NextBestOfferTab",
        "NextBestOfferTab"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button",
        "Button",
        "Button",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/CvmModeToggle.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmModeToggle.tsx",
      "filename": "CvmModeToggle.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 1143,
      "lines": 43,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "./context/CvmChatContext",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "CvmModeToggle"
      ],
      "components": [
        "CvmModeToggle",
        "CvmModeToggle"
      ],
      "hooks": [
        "useCvmChatContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/SegmentationTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/SegmentationTab.tsx",
      "filename": "SegmentationTab.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 18707,
      "lines": 376,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/input",
        "@/components/ui/slider",
        "@/components/ui/table",
        "recharts",
        "@/components/ui/badge",
        "@/components/ui/use-toast",
        "lucide-react"
      ],
      "exports": [
        "SegmentationTab"
      ],
      "components": [
        "SegmentationTab",
        "SegmentationTab"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button",
        "Button",
        "Button",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/CvmDashboard.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmDashboard.tsx",
      "filename": "CvmDashboard.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 4707,
      "lines": 125,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "./AgentsTab",
        "./SegmentationTab",
        "./CampaignAnalysisTab",
        "./PropensityModelsTab",
        "./NextBestOfferTab",
        "./DataSourcesTab",
        "./CvmAgenticDecisioning",
        "@/hooks/use-toast"
      ],
      "exports": [
        "CvmDashboard"
      ],
      "components": [
        "CvmDashboard",
        "CvmDashboard"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/PropensityModelsTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/PropensityModelsTab.tsx",
      "filename": "PropensityModelsTab.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 35151,
      "lines": 689,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "recharts",
        "@/components/ui/table",
        "lucide-react",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "PropensityModelsTab"
      ],
      "components": [
        "PropensityModelsTab",
        "PropensityModelsTab"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "select",
        "Card",
        "Card",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button",
        "className=\"absolute bottom-full left-[28%] transform -translate-x-1/2 mb-1\"",
        "className=\"absolute bottom-full left-[58%] transform -translate-x-1/2 mb-1\"",
        "className=\"absolute bottom-full left-[45%] transform -translate-x-1/2 mb-1\""
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/DataSourcesTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/DataSourcesTab.tsx",
      "filename": "DataSourcesTab.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 45853,
      "lines": 1039,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/table",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/progress",
        "@/components/ui/dialog",
        "@/components/ui/collapsible",
        "@/components/DataLineage",
        "@/components/DecisionPath",
        "@/components/ui/use-toast",
        "react-hook-form",
        "lucide-react"
      ],
      "exports": [
        "DataSourcesTab"
      ],
      "components": [
        "DataSourcesTab",
        "DataSourcesTab"
      ],
      "hooks": [
        "useState",
        "useForm"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Form",
        "form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Dialog",
        "Button",
        "Button",
        "Card",
        "Input",
        "Button",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button",
        "Button",
        "Button",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/CvmAgenticDecisioning.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmAgenticDecisioning.tsx",
      "filename": "CvmAgenticDecisioning.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 21950,
      "lines": 528,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/hooks/use-toast"
      ],
      "exports": [
        "CvmAgenticDecisioning"
      ],
      "components": [
        "CvmAgenticDecisioning",
        "CvmAgenticDecisioning"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/index.ts": {
      "file_path": "src/components/CustomerValueManagement/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".ts",
      "size": 324,
      "lines": 11,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 11 lines"
    },
    "src/components/CustomerValueManagement/AgentsTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/AgentsTab.tsx",
      "filename": "AgentsTab.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 6005,
      "lines": 127,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/ui/button",
        "./context/CvmChatContext"
      ],
      "exports": [
        "AgentsTab"
      ],
      "components": [
        "AgentCard",
        "AgentsTab",
        "AgentsTab"
      ],
      "hooks": [
        "useCvmChatContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 3 components"
    },
    "src/components/CustomerValueManagement/CvmChatInterface.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmChatInterface.tsx",
      "filename": "CvmChatInterface.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 61,
      "lines": 3,
      "imports": [],
      "exports": [
        "CvmChatInterface "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 3 lines"
    },
    "src/components/CustomerValueManagement/CampaignAnalysisTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/CampaignAnalysisTab.tsx",
      "filename": "CampaignAnalysisTab.tsx",
      "directory": "src/components/CustomerValueManagement",
      "extension": ".tsx",
      "size": 4746,
      "lines": 132,
      "imports": [
        "react",
        "@/components/ui/card",
        "./campaign/CampaignDialog",
        "./campaign/CampaignCalendar",
        "./campaign/CampaignComparison",
        "./campaign/CampaignTemplates",
        "./campaign/CampaignABTesting",
        "./campaign/CampaignNotifications",
        "./campaign/CampaignMainView",
        "./campaign/CampaignHeader",
        "./campaign/CampaignSectionTabs",
        "./campaign/hooks/useCampaignManagement",
        "./context/CvmContext"
      ],
      "exports": [
        "CampaignAnalysisTab"
      ],
      "components": [
        "CampaignAnalysisTab",
        "CampaignAnalysisTab"
      ],
      "hooks": [
        "useCampaignManagement",
        "useState",
        "useCvmContext",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/context/CvmChatContext.tsx": {
      "file_path": "src/components/CustomerValueManagement/context/CvmChatContext.tsx",
      "filename": "CvmChatContext.tsx",
      "directory": "src/components/CustomerValueManagement/context",
      "extension": ".tsx",
      "size": 2154,
      "lines": 73,
      "imports": [
        "react"
      ],
      "exports": [
        "CvmChatProvider",
        "useCvmChatContext"
      ],
      "components": [
        "CvmChatProvider",
        "CvmChatProvider"
      ],
      "hooks": [
        "useContext",
        "useState",
        "useCvmChatContext",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/context/CvmContext.tsx": {
      "file_path": "src/components/CustomerValueManagement/context/CvmContext.tsx",
      "filename": "CvmContext.tsx",
      "directory": "src/components/CustomerValueManagement/context",
      "extension": ".tsx",
      "size": 2211,
      "lines": 74,
      "imports": [
        "react",
        "../campaign/types",
        "./CvmChatContext"
      ],
      "exports": [
        "CvmProvider",
        "useCvmContext"
      ],
      "components": [
        "CvmProvider",
        "CvmProvider"
      ],
      "hooks": [
        "useContext",
        "useState",
        "useCvmContext",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/chat/useCvmChat.ts": {
      "file_path": "src/components/CustomerValueManagement/chat/useCvmChat.ts",
      "filename": "useCvmChat.ts",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".ts",
      "size": 3560,
      "lines": 88,
      "imports": [
        "react",
        "../context/CvmContext",
        "../context/CvmChatContext",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "useCvmChat"
      ],
      "components": [],
      "hooks": [
        "useCvmChat",
        "useCvmContext",
        "useState",
        "useToast",
        "useCvmChatContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 0 components"
    },
    "src/components/CustomerValueManagement/chat/ChatSuggestions.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/ChatSuggestions.tsx",
      "filename": "ChatSuggestions.tsx",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".tsx",
      "size": 1525,
      "lines": 46,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "ChatSuggestions"
      ],
      "components": [
        "ChatSuggestions",
        "ChatSuggestions"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/chat/CvmAgents.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/CvmAgents.tsx",
      "filename": "CvmAgents.tsx",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".tsx",
      "size": 4724,
      "lines": 102,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/AgentCard",
        "@/components/ui/button",
        "../context/CvmChatContext"
      ],
      "exports": [
        "CvmAgents"
      ],
      "components": [
        "CvmAgents",
        "CvmAgents"
      ],
      "hooks": [
        "useCvmChatContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/chat/index.ts": {
      "file_path": "src/components/CustomerValueManagement/chat/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".ts",
      "size": 287,
      "lines": 8,
      "imports": [],
      "exports": [
        "CvmChatInterface ",
        "ChatInput ",
        "ChatMessage ",
        "ChatSuggestions ",
        "EmptyChatState ",
        "CvmAgents "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 8 lines"
    },
    "src/components/CustomerValueManagement/chat/EmptyChatState.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/EmptyChatState.tsx",
      "filename": "EmptyChatState.tsx",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".tsx",
      "size": 398,
      "lines": 13,
      "imports": [
        "react",
        "./ChatSuggestions"
      ],
      "exports": [
        "EmptyChatState"
      ],
      "components": [
        "EmptyChatState",
        "EmptyChatState"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/chat/ChatMessage.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/ChatMessage.tsx",
      "filename": "ChatMessage.tsx",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".tsx",
      "size": 1043,
      "lines": 37,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ChatMessage"
      ],
      "components": [
        "ChatMessage",
        "ChatMessage"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/chat/ChatInput.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/ChatInput.tsx",
      "filename": "ChatInput.tsx",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".tsx",
      "size": 1708,
      "lines": 55,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/textarea",
        "@/components/ui/button"
      ],
      "exports": [
        "ChatInput"
      ],
      "components": [
        "ChatInput",
        "ChatInput"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "form",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/chat/CvmChatInterface.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/CvmChatInterface.tsx",
      "filename": "CvmChatInterface.tsx",
      "directory": "src/components/CustomerValueManagement/chat",
      "extension": ".tsx",
      "size": 3083,
      "lines": 94,
      "imports": [
        "react",
        "@/components/ui/scroll-area",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "./ChatInput",
        "./ChatMessage",
        "./ChatSuggestions",
        "./EmptyChatState",
        "./useCvmChat",
        "./CvmAgents",
        "../context/CvmChatContext"
      ],
      "exports": [
        "CvmChatInterface"
      ],
      "components": [
        "CvmChatInterface",
        "CvmChatInterface"
      ],
      "hooks": [
        "useRef",
        "useCvmChatContext",
        "useCvmChat",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignDialog.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignDialog.tsx",
      "filename": "CampaignDialog.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 12582,
      "lines": 294,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/form",
        "zod",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "./types",
        "@/components/ui/use-toast",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/calendar",
        "date-fns",
        "@/lib/utils"
      ],
      "exports": [
        "CampaignDialog"
      ],
      "components": [
        "CampaignDialog"
      ],
      "hooks": [
        "useState",
        "useForm"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Form",
        "form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Button",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Button",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Dialog",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignHeader.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignHeader.tsx",
      "filename": "CampaignHeader.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 2020,
      "lines": 64,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "CampaignHeader"
      ],
      "components": [
        "CampaignHeader",
        "CampaignHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignStatus.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignStatus.tsx",
      "filename": "CampaignStatus.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 3576,
      "lines": 110,
      "imports": [
        "react",
        "@/components/ui/button",
        "./types",
        "@/components/ui/use-toast",
        "lucide-react"
      ],
      "exports": [
        "CampaignStatus"
      ],
      "components": [
        "CampaignStatus"
      ],
      "hooks": [
        "useCircle"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignABTesting.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignABTesting.tsx",
      "filename": "CampaignABTesting.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 12610,
      "lines": 333,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react",
        "./types",
        "recharts"
      ],
      "exports": [
        "CampaignABTesting"
      ],
      "components": [
        "CampaignABTesting"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignMainView.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignMainView.tsx",
      "filename": "CampaignMainView.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 4811,
      "lines": 142,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/tabs",
        "./CampaignFilters",
        "./CampaignList",
        "./CampaignDetails",
        "./CampaignExport",
        "./CampaignStatus",
        "./types",
        "../context/CvmContext",
        "./hooks/useCampaignManagement"
      ],
      "exports": [
        "CampaignMainView"
      ],
      "components": [
        "CampaignMainView",
        "CampaignMainView"
      ],
      "hooks": [
        "useCampaignManagement",
        "useCvmContext",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignFilters.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignFilters.tsx",
      "filename": "CampaignFilters.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 3180,
      "lines": 74,
      "imports": [
        "react",
        "@/components/ui/select"
      ],
      "exports": [
        "CampaignFilters"
      ],
      "components": [
        "CampaignFilters",
        "CampaignFilters"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignCalendar.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignCalendar.tsx",
      "filename": "CampaignCalendar.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 10039,
      "lines": 242,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/calendar",
        "./types",
        "date-fns",
        "lucide-react"
      ],
      "exports": [
        "CampaignCalendar"
      ],
      "components": [
        "CampaignCalendar"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Button",
        "Button",
        "className=\"absolute bottom-1 left-1/2 transform -translate-x-1/2 flex gap-1\""
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignDetails.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignDetails.tsx",
      "filename": "CampaignDetails.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 2333,
      "lines": 72,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "lucide-react",
        "./types",
        "./tabs/PerformanceTab",
        "./tabs/TargetTab",
        "./tabs/FinancialsTab"
      ],
      "exports": [
        "CampaignDetails"
      ],
      "components": [
        "CampaignDetails"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignSectionTabs.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignSectionTabs.tsx",
      "filename": "CampaignSectionTabs.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 770,
      "lines": 26,
      "imports": [
        "react",
        "@/components/ui/tabs"
      ],
      "exports": [
        "CampaignSectionTabs"
      ],
      "components": [
        "CampaignSectionTabs",
        "CampaignSectionTabs"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CustomerValueManagement/campaign/types.ts": {
      "file_path": "src/components/CustomerValueManagement/campaign/types.ts",
      "filename": "types.ts",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".ts",
      "size": 1257,
      "lines": 71,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignNotifications.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignNotifications.tsx",
      "filename": "CampaignNotifications.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 8376,
      "lines": 220,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react",
        "./types",
        "date-fns"
      ],
      "exports": [
        "CampaignNotifications"
      ],
      "components": [
        "CampaignNotifications"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignExport.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignExport.tsx",
      "filename": "CampaignExport.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 2972,
      "lines": 95,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "CampaignExport",
        "process"
      ],
      "components": [
        "CampaignExport"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/index.ts": {
      "file_path": "src/components/CustomerValueManagement/campaign/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".ts",
      "size": 284,
      "lines": 10,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [
        "useCampaignManagement"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 10 lines"
    },
    "src/components/CustomerValueManagement/campaign/CampaignTemplates.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignTemplates.tsx",
      "filename": "CampaignTemplates.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 3158,
      "lines": 90,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react"
      ],
      "exports": [
        "CampaignTemplates"
      ],
      "components": [
        "CampaignTemplates"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignList.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignList.tsx",
      "filename": "CampaignList.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 5101,
      "lines": 116,
      "imports": [
        "react",
        "@/components/ui/table",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "lucide-react",
        "./types",
        "../context/CvmContext"
      ],
      "exports": [
        "CampaignList"
      ],
      "components": [
        "CampaignList"
      ],
      "hooks": [
        "useCvmContext",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/CampaignComparison.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignComparison.tsx",
      "filename": "CampaignComparison.tsx",
      "directory": "src/components/CustomerValueManagement/campaign",
      "extension": ".tsx",
      "size": 5195,
      "lines": 131,
      "imports": [
        "react",
        "@/components/ui/card",
        "./types",
        "recharts",
        "@/components/ui/select"
      ],
      "exports": [
        "CampaignComparison"
      ],
      "components": [
        "CampaignComparison"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/tabs/FinancialsTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/tabs/FinancialsTab.tsx",
      "filename": "FinancialsTab.tsx",
      "directory": "src/components/CustomerValueManagement/campaign/tabs",
      "extension": ".tsx",
      "size": 4280,
      "lines": 98,
      "imports": [
        "react",
        "recharts",
        "../types"
      ],
      "exports": [
        "FinancialsTab"
      ],
      "components": [
        "FinancialsTab"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/tabs/TargetTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/tabs/TargetTab.tsx",
      "filename": "TargetTab.tsx",
      "directory": "src/components/CustomerValueManagement/campaign/tabs",
      "extension": ".tsx",
      "size": 2747,
      "lines": 71,
      "imports": [
        "react",
        "recharts"
      ],
      "exports": [
        "TargetTab"
      ],
      "components": [
        "TargetTab"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/tabs/PerformanceTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/tabs/PerformanceTab.tsx",
      "filename": "PerformanceTab.tsx",
      "directory": "src/components/CustomerValueManagement/campaign/tabs",
      "extension": ".tsx",
      "size": 3678,
      "lines": 92,
      "imports": [
        "react",
        "recharts",
        "../types"
      ],
      "exports": [
        "PerformanceTab"
      ],
      "components": [
        "PerformanceTab"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/CustomerValueManagement/campaign/hooks/useCampaignManagement.ts": {
      "file_path": "src/components/CustomerValueManagement/campaign/hooks/useCampaignManagement.ts",
      "filename": "useCampaignManagement.ts",
      "directory": "src/components/CustomerValueManagement/campaign/hooks",
      "extension": ".ts",
      "size": 5325,
      "lines": 194,
      "imports": [
        "react",
        "../types",
        "@/components/ui/use-toast",
        "../../context/CvmContext"
      ],
      "exports": [
        "useCampaignManagement",
        "getPerformanceData",
        "getTargetBreakdown",
        "getChartColors"
      ],
      "components": [],
      "hooks": [
        "useCampaignManagement",
        "useState",
        "useCvmContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/DataLineageGraph.tsx": {
      "file_path": "src/components/DataLineage/DataLineageGraph.tsx",
      "filename": "DataLineageGraph.tsx",
      "directory": "src/components/DataLineage",
      "extension": ".tsx",
      "size": 2033,
      "lines": 70,
      "imports": [
        "react",
        "./GraphNode",
        "./EdgePath",
        "./ArrowMarkers",
        "./GraphLegend",
        "./GraphHeader",
        "./types"
      ],
      "exports": [
        "DataLineageGraph"
      ],
      "components": [
        "DataLineageGraph",
        "DataLineageGraph"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEnter"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph",
        "Graph",
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/DataLineage/GraphLegend.tsx": {
      "file_path": "src/components/DataLineage/GraphLegend.tsx",
      "filename": "GraphLegend.tsx",
      "directory": "src/components/DataLineage",
      "extension": ".tsx",
      "size": 948,
      "lines": 26,
      "imports": [
        "react"
      ],
      "exports": [
        "GraphLegend"
      ],
      "components": [
        "GraphLegend",
        "GraphLegend"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DataLineage/EdgePath.tsx": {
      "file_path": "src/components/DataLineage/EdgePath.tsx",
      "filename": "EdgePath.tsx",
      "directory": "src/components/DataLineage",
      "extension": ".tsx",
      "size": 1349,
      "lines": 47,
      "imports": [
        "react",
        "./types",
        "../DecisionPath/utils/pathUtils"
      ],
      "exports": [
        "EdgePath"
      ],
      "components": [
        "EdgePath",
        "EdgePath"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DataLineage/GraphHeader.tsx": {
      "file_path": "src/components/DataLineage/GraphHeader.tsx",
      "filename": "GraphHeader.tsx",
      "directory": "src/components/DataLineage",
      "extension": ".tsx",
      "size": 1095,
      "lines": 26,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "GraphHeader"
      ],
      "components": [
        "GraphHeader",
        "GraphHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DataLineage/ArrowMarkers.tsx": {
      "file_path": "src/components/DataLineage/ArrowMarkers.tsx",
      "filename": "ArrowMarkers.tsx",
      "directory": "src/components/DataLineage",
      "extension": ".tsx",
      "size": 1406,
      "lines": 65,
      "imports": [
        "react"
      ],
      "exports": [
        "ArrowMarkers"
      ],
      "components": [
        "ArrowMarkers",
        "ArrowMarkers"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/DataLineage/types.ts": {
      "file_path": "src/components/DataLineage/types.ts",
      "filename": "types.ts",
      "directory": "src/components/DataLineage",
      "extension": ".ts",
      "size": 753,
      "lines": 46,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/GraphNode.tsx": {
      "file_path": "src/components/DataLineage/GraphNode.tsx",
      "filename": "GraphNode.tsx",
      "directory": "src/components/DataLineage",
      "extension": ".tsx",
      "size": 6074,
      "lines": 154,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/tooltip",
        "./types"
      ],
      "exports": [
        "GraphNode"
      ],
      "components": [
        "GraphNode",
        "GraphNode"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEvent",
        "useEnter"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph",
        "button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/DataLineage/index.ts": {
      "file_path": "src/components/DataLineage/index.ts",
      "filename": "index.ts",
      "directory": "src/components/DataLineage",
      "extension": ".ts",
      "size": 56,
      "lines": 3,
      "imports": [],
      "exports": [
        "DataLineageGraph "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 3 lines"
    },
    "src/components/DataLineage/utils/pathUtils.ts": {
      "file_path": "src/components/DataLineage/utils/pathUtils.ts",
      "filename": "pathUtils.ts",
      "directory": "src/components/DataLineage/utils",
      "extension": ".ts",
      "size": 1196,
      "lines": 36,
      "imports": [
        "../types"
      ],
      "exports": [
        "getPathProperties"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/AgentChatDialog.tsx": {
      "file_path": "src/components/WealthManagement/AgentChatDialog.tsx",
      "filename": "AgentChatDialog.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 7637,
      "lines": 176,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "lucide-react",
        "@/components/AgentWorkspace/ChatReasoningOutput"
      ],
      "exports": [
        "AgentChatDialog"
      ],
      "components": [
        "AgentChatDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Input",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 1 components"
    },
    "src/components/WealthManagement/RMWorkflowDashboard.tsx": {
      "file_path": "src/components/WealthManagement/RMWorkflowDashboard.tsx",
      "filename": "RMWorkflowDashboard.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 15334,
      "lines": 386,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "lucide-react"
      ],
      "exports": [
        "RMWorkflowDashboard"
      ],
      "components": [
        "RMWorkflowDashboard",
        "RMWorkflowDashboard"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/MarketResearchDashboard.tsx": {
      "file_path": "src/components/WealthManagement/MarketResearchDashboard.tsx",
      "filename": "MarketResearchDashboard.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 11557,
      "lines": 287,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        "MarketResearchDashboard"
      ],
      "components": [
        "MarketResearchDashboard",
        "MarketResearchDashboard"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/WealthAgentsPanel.tsx": {
      "file_path": "src/components/WealthManagement/WealthAgentsPanel.tsx",
      "filename": "WealthAgentsPanel.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 9709,
      "lines": 215,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "lucide-react",
        "./AgentChatDialog"
      ],
      "exports": [
        "WealthAgentsPanel"
      ],
      "components": [
        "WealthAgentsPanel",
        "WealthAgentsPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/InvestmentRecommendations.tsx": {
      "file_path": "src/components/WealthManagement/InvestmentRecommendations.tsx",
      "filename": "InvestmentRecommendations.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 14417,
      "lines": 331,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/slider",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        "InvestmentRecommendations"
      ],
      "components": [
        "InvestmentRecommendations",
        "InvestmentRecommendations"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/PortfolioOverview.tsx": {
      "file_path": "src/components/WealthManagement/PortfolioOverview.tsx",
      "filename": "PortfolioOverview.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 6683,
      "lines": 172,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "PortfolioOverview"
      ],
      "components": [
        "PortfolioOverview",
        "PortfolioOverview"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/AgentTraceabilityPanel.tsx": {
      "file_path": "src/components/WealthManagement/AgentTraceabilityPanel.tsx",
      "filename": "AgentTraceabilityPanel.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 17095,
      "lines": 331,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "lucide-react"
      ],
      "exports": [
        "AgentTraceabilityPanel"
      ],
      "components": [
        "AgentTraceabilityPanel",
        "AgentTraceabilityPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/InteractiveChatOverlay.tsx": {
      "file_path": "src/components/WealthManagement/InteractiveChatOverlay.tsx",
      "filename": "InteractiveChatOverlay.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 12531,
      "lines": 338,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "lucide-react"
      ],
      "exports": [
        "InteractiveChatOverlay"
      ],
      "components": [
        "InteractiveChatOverlay",
        "InteractiveChatOverlay"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEvent",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Card",
        "Button",
        "Button",
        "Input",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/InteractiveNewsAnalysis.tsx": {
      "file_path": "src/components/WealthManagement/InteractiveNewsAnalysis.tsx",
      "filename": "InteractiveNewsAnalysis.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 15816,
      "lines": 362,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/chart",
        "recharts",
        "lucide-react"
      ],
      "exports": [
        "InteractiveNewsAnalysis"
      ],
      "components": [
        "InteractiveNewsAnalysis",
        "InteractiveNewsAnalysis"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Chart",
        "Chart",
        "Chart",
        "Card",
        "Card",
        "Card",
        "select",
        "select",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/PortfolioCharts.tsx": {
      "file_path": "src/components/WealthManagement/PortfolioCharts.tsx",
      "filename": "PortfolioCharts.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 13195,
      "lines": 291,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/chart",
        "recharts",
        "lucide-react"
      ],
      "exports": [
        "PortfolioCharts"
      ],
      "components": [
        "PortfolioCharts",
        "PortfolioCharts"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Chart",
        "Chart",
        "Chart",
        "Card",
        "Card",
        "Card",
        "Card",
        "Chart",
        "Chart",
        "Chart",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Chart",
        "Chart",
        "Chart"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/WealthManagement/index.ts": {
      "file_path": "src/components/WealthManagement/index.ts",
      "filename": "index.ts",
      "directory": "src/components/WealthManagement",
      "extension": ".ts",
      "size": 696,
      "lines": 13,
      "imports": [],
      "exports": [
        "WealthAgentsPanel ",
        "PortfolioOverview ",
        "InvestmentRecommendations ",
        "FinancialHealthInsights ",
        "AgentChatDialog ",
        "MarketResearchDashboard ",
        "PortfolioCharts ",
        "RMWorkflowDashboard ",
        "InteractiveNewsAnalysis ",
        "AgentTraceabilityPanel ",
        "InteractiveChatOverlay "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 13 lines"
    },
    "src/components/WealthManagement/FinancialHealthInsights.tsx": {
      "file_path": "src/components/WealthManagement/FinancialHealthInsights.tsx",
      "filename": "FinancialHealthInsights.tsx",
      "directory": "src/components/WealthManagement",
      "extension": ".tsx",
      "size": 9742,
      "lines": 230,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "lucide-react"
      ],
      "exports": [
        "FinancialHealthInsights"
      ],
      "components": [
        "FinancialHealthInsights",
        "FinancialHealthInsights"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentDashboard/types.ts": {
      "file_path": "src/components/AgentDashboard/types.ts",
      "filename": "types.ts",
      "directory": "src/components/AgentDashboard",
      "extension": ".ts",
      "size": 422,
      "lines": 21,
      "imports": [],
      "exports": [
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/agentsData.ts": {
      "file_path": "src/components/AgentDashboard/agentsData.ts",
      "filename": "agentsData.ts",
      "directory": "src/components/AgentDashboard",
      "extension": ".ts",
      "size": 2157,
      "lines": 62,
      "imports": [],
      "exports": [
        "agents"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/AgentDashboard.tsx": {
      "file_path": "src/components/AgentDashboard/AgentDashboard.tsx",
      "filename": "AgentDashboard.tsx",
      "directory": "src/components/AgentDashboard",
      "extension": ".tsx",
      "size": 3475,
      "lines": 84,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/table",
        "../AgentCard",
        "../GuardrailsPanel",
        "../PerformanceMetrics",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "./agentsData",
        "./AgentsTable",
        "./AgentDetailsPanel",
        "./ModelMetadata",
        "./types"
      ],
      "exports": [
        "AgentDashboard"
      ],
      "components": [
        "AgentDashboard"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/AgentDashboard/AgentsTable.tsx": {
      "file_path": "src/components/AgentDashboard/AgentsTable.tsx",
      "filename": "AgentsTable.tsx",
      "directory": "src/components/AgentDashboard",
      "extension": ".tsx",
      "size": 2964,
      "lines": 73,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/table",
        "@/components/ui/card",
        "./types"
      ],
      "exports": [
        "AgentsTable"
      ],
      "components": [
        "AgentsTable",
        "AgentsTable"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentDashboard/index.ts": {
      "file_path": "src/components/AgentDashboard/index.ts",
      "filename": "index.ts",
      "directory": "src/components/AgentDashboard",
      "extension": ".ts",
      "size": 189,
      "lines": 8,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 8 lines"
    },
    "src/components/AgentDashboard/ModelMetadata.tsx": {
      "file_path": "src/components/AgentDashboard/ModelMetadata.tsx",
      "filename": "ModelMetadata.tsx",
      "directory": "src/components/AgentDashboard",
      "extension": ".tsx",
      "size": 3617,
      "lines": 84,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/table",
        "@/components/ui/badge",
        "./types"
      ],
      "exports": [
        "ModelMetadata"
      ],
      "components": [
        "ModelMetadata",
        "ModelMetadata"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentDashboard/KpiCards.tsx": {
      "file_path": "src/components/AgentDashboard/KpiCards.tsx",
      "filename": "KpiCards.tsx",
      "directory": "src/components/AgentDashboard",
      "extension": ".tsx",
      "size": 1906,
      "lines": 44,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "KpiCards"
      ],
      "components": [
        "KpiCards",
        "KpiCards"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentDashboard/AgentDetailsPanel.tsx": {
      "file_path": "src/components/AgentDashboard/AgentDetailsPanel.tsx",
      "filename": "AgentDetailsPanel.tsx",
      "directory": "src/components/AgentDashboard",
      "extension": ".tsx",
      "size": 3721,
      "lines": 90,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "../AgentCard",
        "../PerformanceMetrics",
        "../GuardrailsPanel",
        "./types"
      ],
      "exports": [
        "AgentDetailsPanel"
      ],
      "components": [
        "AgentDetailsPanel",
        "AgentDetailsPanel"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/NetworkAgents.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkAgents.tsx",
      "filename": "NetworkAgents.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 11697,
      "lines": 277,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "lucide-react",
        "./agents/CoreAgentFramework",
        "./agents/RANIntelligenceAgent",
        "./agents/CustomerAnalyticsAgent",
        "./agents/ServiceImpactAgent"
      ],
      "exports": [
        "NetworkAgents"
      ],
      "components": [
        "NetworkAgents",
        "NetworkAgents"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Chart",
        "Chart",
        "Card",
        "Button",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/SimulationPanel.tsx": {
      "file_path": "src/components/NetworkTwin/SimulationPanel.tsx",
      "filename": "SimulationPanel.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 11080,
      "lines": 221,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/slider",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "lucide-react",
        "./SimulationResults"
      ],
      "exports": [
        "SimulationPanel"
      ],
      "components": [
        "SimulationPanel",
        "SimulationPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Chart",
        "Card",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "input",
        "input"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/GeospatialMap.tsx": {
      "file_path": "src/components/NetworkTwin/GeospatialMap.tsx",
      "filename": "GeospatialMap.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 14637,
      "lines": 403,
      "imports": [
        "react",
        "mapbox-gl",
        "lucide-react",
        "@/components/ui/button",
        "mapbox-gl/dist/mapbox-gl.css"
      ],
      "exports": [
        "GeospatialMap"
      ],
      "components": [
        "GeospatialMap",
        "GeospatialMap"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "https://mapbox.com"
      ],
      "ui_elements": [
        "input",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/SimulationResults.tsx": {
      "file_path": "src/components/NetworkTwin/SimulationResults.tsx",
      "filename": "SimulationResults.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 17184,
      "lines": 328,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "lucide-react"
      ],
      "exports": [
        "SimulationResults"
      ],
      "components": [
        "SimulationResults",
        "SimulationResults"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/NetworkTwinHeader.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkTwinHeader.tsx",
      "filename": "NetworkTwinHeader.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 2218,
      "lines": 47,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "NetworkTwinHeader"
      ],
      "components": [
        "NetworkTwinHeader",
        "NetworkTwinHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/NetworkSelector.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkSelector.tsx",
      "filename": "NetworkSelector.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 5046,
      "lines": 120,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./data/networkTwinData"
      ],
      "exports": [
        "NetworkSelector"
      ],
      "components": [
        "NetworkSelector"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/components/NetworkTwin/NetworkGraph.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkGraph.tsx",
      "filename": "NetworkGraph.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 4652,
      "lines": 111,
      "imports": [
        "react"
      ],
      "exports": [
        "NetworkGraph"
      ],
      "components": [
        "NetworkGraph",
        "NetworkGraph"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "http://www.w3.org/2000/svg"
      ],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/AnalysisPanel.tsx": {
      "file_path": "src/components/NetworkTwin/AnalysisPanel.tsx",
      "filename": "AnalysisPanel.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 14782,
      "lines": 282,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "lucide-react"
      ],
      "exports": [
        "AnalysisPanel"
      ],
      "components": [
        "AnalysisPanel",
        "AnalysisPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/NetworkTopology.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkTopology.tsx",
      "filename": "NetworkTopology.tsx",
      "directory": "src/components/NetworkTwin",
      "extension": ".tsx",
      "size": 7747,
      "lines": 150,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/label",
        "@/components/ui/select",
        "lucide-react",
        "./NetworkGraph",
        "./GeospatialMap"
      ],
      "exports": [
        "NetworkTopology"
      ],
      "components": [
        "NetworkTopology",
        "NetworkTopology"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Chart",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/index.ts": {
      "file_path": "src/components/NetworkTwin/index.ts",
      "filename": "index.ts",
      "directory": "src/components/NetworkTwin",
      "extension": ".ts",
      "size": 276,
      "lines": 10,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 10 lines"
    },
    "src/components/NetworkTwin/agents/ServiceImpactAgent.tsx": {
      "file_path": "src/components/NetworkTwin/agents/ServiceImpactAgent.tsx",
      "filename": "ServiceImpactAgent.tsx",
      "directory": "src/components/NetworkTwin/agents",
      "extension": ".tsx",
      "size": 21182,
      "lines": 530,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "ServiceImpactAgent"
      ],
      "components": [
        "ServiceImpactAgent",
        "ServiceImpactAgent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/agents/RANIntelligenceAgent.tsx": {
      "file_path": "src/components/NetworkTwin/agents/RANIntelligenceAgent.tsx",
      "filename": "RANIntelligenceAgent.tsx",
      "directory": "src/components/NetworkTwin/agents",
      "extension": ".tsx",
      "size": 16862,
      "lines": 449,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "RANIntelligenceAgent"
      ],
      "components": [
        "RANIntelligenceAgent",
        "RANIntelligenceAgent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/agents/CoreAgentFramework.tsx": {
      "file_path": "src/components/NetworkTwin/agents/CoreAgentFramework.tsx",
      "filename": "CoreAgentFramework.tsx",
      "directory": "src/components/NetworkTwin/agents",
      "extension": ".tsx",
      "size": 10943,
      "lines": 308,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        "CoreAgentFramework"
      ],
      "components": [
        "CoreAgentFramework",
        "CoreAgentFramework"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/agents/CustomerAnalyticsAgent.tsx": {
      "file_path": "src/components/NetworkTwin/agents/CustomerAnalyticsAgent.tsx",
      "filename": "CustomerAnalyticsAgent.tsx",
      "directory": "src/components/NetworkTwin/agents",
      "extension": ".tsx",
      "size": 18586,
      "lines": 461,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "CustomerAnalyticsAgent"
      ],
      "components": [
        "CustomerAnalyticsAgent",
        "CustomerAnalyticsAgent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Analytics",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/modals/AgentDetailModal.tsx": {
      "file_path": "src/components/NetworkTwin/modals/AgentDetailModal.tsx",
      "filename": "AgentDetailModal.tsx",
      "directory": "src/components/NetworkTwin/modals",
      "extension": ".tsx",
      "size": 11203,
      "lines": 252,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/card",
        "../data/networkTwinData"
      ],
      "exports": [
        "AgentDetailModal"
      ],
      "components": [
        "AgentDetailModal",
        "AgentDetailModal"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/modals/SiteDetailModal.tsx": {
      "file_path": "src/components/NetworkTwin/modals/SiteDetailModal.tsx",
      "filename": "SiteDetailModal.tsx",
      "directory": "src/components/NetworkTwin/modals",
      "extension": ".tsx",
      "size": 13844,
      "lines": 312,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/card",
        "../data/networkTwinData"
      ],
      "exports": [
        "SiteDetailModal"
      ],
      "components": [
        "SiteDetailModal",
        "SiteDetailModal"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/components/InteractiveNetworkTopology.tsx": {
      "file_path": "src/components/NetworkTwin/components/InteractiveNetworkTopology.tsx",
      "filename": "InteractiveNetworkTopology.tsx",
      "directory": "src/components/NetworkTwin/components",
      "extension": ".tsx",
      "size": 13923,
      "lines": 342,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/badge",
        "../NetworkGraph",
        "../GeospatialMap",
        "../data/networkTwinData"
      ],
      "exports": [
        "InteractiveNetworkTopology"
      ],
      "components": [
        "InteractiveNetworkTopology",
        "InteractiveNetworkTopology"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/NetworkTwin/hooks/useNetworkTwinNavigation.ts": {
      "file_path": "src/components/NetworkTwin/hooks/useNetworkTwinNavigation.ts",
      "filename": "useNetworkTwinNavigation.ts",
      "directory": "src/components/NetworkTwin/hooks",
      "extension": ".ts",
      "size": 2563,
      "lines": 99,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useNetworkTwinNavigation"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useNetworkTwinNavigation",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/data/networkTwinData.ts": {
      "file_path": "src/components/NetworkTwin/data/networkTwinData.ts",
      "filename": "networkTwinData.ts",
      "directory": "src/components/NetworkTwin/data",
      "extension": ".ts",
      "size": 12974,
      "lines": 469,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "networkDatasets",
        "for",
        "cellSites",
        "networkAgents",
        "simulationScenarios",
        "getAgentsByType",
        "getSitesByRegion",
        "getSitesByDistrict",
        "getSimulationsByType"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentFrameworks/index.ts": {
      "file_path": "src/components/AgentFrameworks/index.ts",
      "filename": "index.ts",
      "directory": "src/components/AgentFrameworks",
      "extension": ".ts",
      "size": 594,
      "lines": 13,
      "imports": [],
      "exports": [
        "type",
        "type",
        "FrameworkSelector, defaultFrameworks ",
        "AgentCreationWizard ",
        "AgentMonitoringDashboard ",
        "AgentBasicInfo ",
        "AgentModelConfig ",
        "AgentCapabilities ",
        "AgentValidation "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 13 lines"
    },
    "src/components/AgentFrameworks/steps/AgentModelConfig.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentModelConfig.tsx",
      "filename": "AgentModelConfig.tsx",
      "directory": "src/components/AgentFrameworks/steps",
      "extension": ".tsx",
      "size": 10264,
      "lines": 257,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "lucide-react"
      ],
      "exports": [
        "AgentModelConfig"
      ],
      "components": [
        "AgentModelConfig",
        "AgentModelConfig"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/AgentFrameworks/steps/AgentValidation.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentValidation.tsx",
      "filename": "AgentValidation.tsx",
      "directory": "src/components/AgentFrameworks/steps",
      "extension": ".tsx",
      "size": 11399,
      "lines": 309,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "../AgentCreationWizard"
      ],
      "exports": [
        "AgentValidation"
      ],
      "components": [
        "AgentValidation",
        "AgentValidation"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/AgentFrameworks/steps/AgentCapabilities.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentCapabilities.tsx",
      "filename": "AgentCapabilities.tsx",
      "directory": "src/components/AgentFrameworks/steps",
      "extension": ".tsx",
      "size": 11912,
      "lines": 310,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/label"
      ],
      "exports": [
        "AgentCapabilities"
      ],
      "components": [
        "AgentCapabilities",
        "AgentCapabilities"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentFrameworks/steps/AgentBasicInfo.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentBasicInfo.tsx",
      "filename": "AgentBasicInfo.tsx",
      "directory": "src/components/AgentFrameworks/steps",
      "extension": ".tsx",
      "size": 6171,
      "lines": 155,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "AgentBasicInfo"
      ],
      "components": [
        "AgentBasicInfo",
        "AgentBasicInfo"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/GovernanceContent.tsx": {
      "file_path": "src/components/CommandCentre/GovernanceContent.tsx",
      "filename": "GovernanceContent.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 51600,
      "lines": 1153,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/tabs",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/form",
        "@/components/ui/scroll-area",
        "react-hook-form",
        "zod",
        "@hookform/resolvers/zod",
        "sonner",
        "@/components/AgentTraceability/types",
        "./StepNavigation"
      ],
      "exports": [
        "GovernanceContent"
      ],
      "components": [
        "GovernanceContent",
        "GovernanceContent"
      ],
      "hooks": [
        "useState",
        "useForm",
        "useEvent"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Input",
        "Button",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Card",
        "Card",
        "Card",
        "Card",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Button",
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Form",
        "form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Dialog",
        "Button",
        "Form",
        "form",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/RealAgentMonitoring.tsx": {
      "file_path": "src/components/CommandCentre/RealAgentMonitoring.tsx",
      "filename": "RealAgentMonitoring.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 10525,
      "lines": 264,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "RealAgentMonitoring"
      ],
      "components": [
        "RealAgentMonitoring",
        "RealAgentMonitoring"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/agents",
        "http://localhost:5002/api/agents",
        "/api/agents"
      ],
      "ui_elements": [
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/LocalGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/LocalGuardrails.tsx",
      "filename": "LocalGuardrails.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 3774,
      "lines": 97,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/scroll-area",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "./CreateAgent/ActionDialog",
        "./GuardrailItem",
        "./GuardrailData",
        "sonner"
      ],
      "exports": [
        "LocalGuardrails"
      ],
      "components": [
        "LocalGuardrails",
        "LocalGuardrails"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/ProjectSelector.tsx": {
      "file_path": "src/components/CommandCentre/ProjectSelector.tsx",
      "filename": "ProjectSelector.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 3102,
      "lines": 77,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ProjectSelector"
      ],
      "components": [
        "ProjectSelector",
        "ProjectSelector"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/TelcoProjectData.tsx": {
      "file_path": "src/components/CommandCentre/TelcoProjectData.tsx",
      "filename": "TelcoProjectData.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 14988,
      "lines": 328,
      "imports": [
        "@/components/DecisionPath/types",
        "@/components/AgentTraceability"
      ],
      "exports": [
        "getTelcoProjectData"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/ProjectTiles.tsx": {
      "file_path": "src/components/CommandCentre/ProjectTiles.tsx",
      "filename": "ProjectTiles.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 13820,
      "lines": 288,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "interface",
        "ProjectTiles"
      ],
      "components": [
        "ProjectTiles",
        "ProjectTiles"
      ],
      "hooks": [
        "useState",
        "useEvent"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/GlobalGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/GlobalGuardrails.tsx",
      "filename": "GlobalGuardrails.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 3147,
      "lines": 85,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/scroll-area",
        "./CreateAgent/ActionDialog",
        "./GuardrailItem",
        "./GuardrailData",
        "sonner"
      ],
      "exports": [
        "GlobalGuardrails"
      ],
      "components": [
        "GlobalGuardrails",
        "GlobalGuardrails"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/QuickActionsMinimal.tsx": {
      "file_path": "src/components/CommandCentre/QuickActionsMinimal.tsx",
      "filename": "QuickActionsMinimal.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 1769,
      "lines": 47,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "QuickActionsMinimal"
      ],
      "components": [
        "QuickActionsMinimal",
        "QuickActionsMinimal"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgentDialog.tsx",
      "filename": "CreateAgentDialog.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 425,
      "lines": 17,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./CreateAgent/WorkingAgentDialog"
      ],
      "exports": [
        "CreateAgentDialog"
      ],
      "components": [
        "CreateAgentDialog",
        "CreateAgentDialog"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/GuardrailItem.tsx": {
      "file_path": "src/components/CommandCentre/GuardrailItem.tsx",
      "filename": "GuardrailItem.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 1605,
      "lines": 51,
      "imports": [
        "react",
        "@/components/ui/switch",
        "lucide-react",
        "./GuardrailData"
      ],
      "exports": [
        "GuardrailItem"
      ],
      "components": [
        "GuardrailItem",
        "GuardrailItem"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/MainTabs.tsx": {
      "file_path": "src/components/CommandCentre/MainTabs.tsx",
      "filename": "MainTabs.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 9701,
      "lines": 220,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/tabs",
        "./ProjectTiles",
        "@/components/AgentTraceability",
        "./ToolsContent",
        "./GovernanceContent",
        "./DataAccessContent",
        "./CostContent",
        "./ProjectData",
        "./TelcoProjects",
        "@/contexts/IndustryContext",
        "@/hooks/use-toast",
        "./RealAgentMonitoring"
      ],
      "exports": [
        "MainTabs"
      ],
      "components": [
        "MainTabs",
        "MainTabs"
      ],
      "hooks": [
        "useToast",
        "useIndustry",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/QuickActionsDebug.tsx": {
      "file_path": "src/components/CommandCentre/QuickActionsDebug.tsx",
      "filename": "QuickActionsDebug.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 2212,
      "lines": 69,
      "imports": [
        "react",
        "@/components/ui/button",
        "./CreateAgentDialog"
      ],
      "exports": [
        "QuickActionsDebug"
      ],
      "components": [
        "QuickActionsDebug",
        "QuickActionsDebug"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/DataAccessContent.tsx": {
      "file_path": "src/components/CommandCentre/DataAccessContent.tsx",
      "filename": "DataAccessContent.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 23931,
      "lines": 538,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/table",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/form",
        "react-hook-form",
        "sonner"
      ],
      "exports": [
        "DataAccessContent"
      ],
      "components": [
        "DataAccessContent",
        "DataAccessContent"
      ],
      "hooks": [
        "useState",
        "useForm",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Form",
        "form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Dialog",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/StepNavigation.tsx": {
      "file_path": "src/components/CommandCentre/StepNavigation.tsx",
      "filename": "StepNavigation.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 1685,
      "lines": 68,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/dialog"
      ],
      "exports": [
        "StepNavigation"
      ],
      "components": [
        "StepNavigation",
        "StepNavigation"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/TelcoProjects.tsx": {
      "file_path": "src/components/CommandCentre/TelcoProjects.tsx",
      "filename": "TelcoProjects.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 5887,
      "lines": 205,
      "imports": [
        "./ProjectTiles"
      ],
      "exports": [
        "getTelcoProjects"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/QuickActions.tsx": {
      "file_path": "src/components/CommandCentre/QuickActions.tsx",
      "filename": "QuickActions.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 14234,
      "lines": 384,
      "imports": [
        "react",
        "@/components/ui/button",
        "./CreateAgentDialog",
        "./CreateStrandsWorkflow/CreateStrandsWorkflowDialog",
        "./CreateMultiAgentWorkflow/CreateMultiAgentWorkflowDialog",
        "./CreateLangGraphWorkflow/CreateLangGraphWorkflowDialog",
        "./CreateLangGraphWorkflow/DynamicLangGraphWorkflow",
        "@/components/Ollama"
      ],
      "exports": [
        "QuickActions"
      ],
      "components": [
        "QuickActions",
        "QuickActions"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/ToolsContent.tsx": {
      "file_path": "src/components/CommandCentre/ToolsContent.tsx",
      "filename": "ToolsContent.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 22940,
      "lines": 537,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/card",
        "sonner",
        "@/components/ui/form",
        "react-hook-form",
        "@/components/ui/tabs",
        "@/components/ui/toggle-group",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "ToolsContent"
      ],
      "components": [
        "ToolsContent",
        "ToolsContent"
      ],
      "hooks": [
        "useState",
        "useForm"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Form",
        "form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form",
        "Form",
        "Form",
        "Select",
        "Form",
        "Select",
        "Select",
        "Select",
        "Select",
        "Dialog",
        "Button",
        "button",
        "button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/ProjectData.tsx": {
      "file_path": "src/components/CommandCentre/ProjectData.tsx",
      "filename": "ProjectData.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 21178,
      "lines": 510,
      "imports": [
        "@/components/DecisionPath/types",
        "@/components/AgentTraceability"
      ],
      "exports": [
        "getProjectData",
        "decisionPathMetadata",
        "dataLineageMetadata"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/index.ts": {
      "file_path": "src/components/CommandCentre/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CommandCentre",
      "extension": ".ts",
      "size": 804,
      "lines": 17,
      "imports": [],
      "exports": [
        "type",
        "QuickActions ",
        "GlobalGuardrails ",
        "LocalGuardrails ",
        "UsageReports ",
        "MainTabs ",
        "ToolsContent ",
        "GovernanceContent ",
        "DataAccessContent ",
        "CostContent ",
        "ProjectTiles ",
        "getProjectData, decisionPathMetadata, dataLineageMetadata ",
        "getTelcoProjectData ",
        "getTelcoProjects ",
        "CreateAgentDialog "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/components/CommandCentre/CostContent.tsx": {
      "file_path": "src/components/CommandCentre/CostContent.tsx",
      "filename": "CostContent.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 16770,
      "lines": 464,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/chart",
        "recharts",
        "./ProjectSelector",
        "./ProjectData",
        "@/components/ui/checkbox"
      ],
      "exports": [
        "CostContent"
      ],
      "components": [
        "CostContent",
        "CostContent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Chart",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Table",
        "Chart"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/UsageReports.tsx": {
      "file_path": "src/components/CommandCentre/UsageReports.tsx",
      "filename": "UsageReports.tsx",
      "directory": "src/components/CommandCentre",
      "extension": ".tsx",
      "size": 672,
      "lines": 26,
      "imports": [
        "react",
        "lucide-react",
        "./CreateAgent/ActionDialog"
      ],
      "exports": [
        "UsageReports"
      ],
      "components": [
        "UsageReports",
        "UsageReports"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/GuardrailData.ts": {
      "file_path": "src/components/CommandCentre/GuardrailData.ts",
      "filename": "GuardrailData.ts",
      "directory": "src/components/CommandCentre",
      "extension": ".ts",
      "size": 2478,
      "lines": 95,
      "imports": [],
      "exports": [
        "interface",
        "globalGuardrails",
        "localGuardrails"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateLangGraphWorkflow/CreateLangGraphWorkflowDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateLangGraphWorkflow/CreateLangGraphWorkflowDialog.tsx",
      "filename": "CreateLangGraphWorkflowDialog.tsx",
      "directory": "src/components/CommandCentre/CreateLangGraphWorkflow",
      "extension": ".tsx",
      "size": 25901,
      "lines": 576,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "CreateLangGraphWorkflowDialog"
      ],
      "components": [
        "CreateLangGraphWorkflowDialog",
        "CreateLangGraphWorkflowDialog"
      ],
      "hooks": [
        "useState",
        "useCase"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Button",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "select",
        "select",
        "Button",
        "Button",
        "input",
        "select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateLangGraphWorkflow/DynamicLangGraphWorkflow.tsx": {
      "file_path": "src/components/CommandCentre/CreateLangGraphWorkflow/DynamicLangGraphWorkflow.tsx",
      "filename": "DynamicLangGraphWorkflow.tsx",
      "directory": "src/components/CommandCentre/CreateLangGraphWorkflow",
      "extension": ".tsx",
      "size": 22917,
      "lines": 600,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "DynamicLangGraphWorkflow"
      ],
      "components": [
        "DynamicLangGraphWorkflow",
        "DynamicLangGraphWorkflow"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "input",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/StrandsOllamaAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/StrandsOllamaAgentDialog.tsx",
      "filename": "StrandsOllamaAgentDialog.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 28526,
      "lines": 669,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/slider",
        "@/hooks/useOllamaModels",
        "@/hooks/useRealStrandsAgents",
        "@/lib/services/RealStrandsService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "StrandsOllamaAgentDialog"
      ],
      "components": [
        "StrandsOllamaAgentDialog",
        "StrandsOllamaAgentDialog"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useRealStrandsAgents",
        "useToast",
        "useOllamaModels"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:11434"
      ],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/SimpleMCPToolsSelection.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleMCPToolsSelection.tsx",
      "filename": "SimpleMCPToolsSelection.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 11804,
      "lines": 331,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label"
      ],
      "exports": [
        "SimpleMCPToolsSelection"
      ],
      "components": [
        "SimpleMCPToolsSelection",
        "SimpleMCPToolsSelection"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input",
        "button",
        "button",
        "Card",
        "Card",
        "Button",
        "button",
        "className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\"",
        "className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white\""
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/SimpleAgentNameField.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleAgentNameField.tsx",
      "filename": "SimpleAgentNameField.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 761,
      "lines": 29,
      "imports": [
        "react",
        "@/components/ui/input",
        "@/components/ui/label"
      ],
      "exports": [
        "SimpleAgentNameField"
      ],
      "components": [
        "SimpleAgentNameField",
        "SimpleAgentNameField"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/SimpleModelSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleModelSelector.tsx",
      "filename": "SimpleModelSelector.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 3105,
      "lines": 89,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/button",
        "@/components/ui/label",
        "./types",
        "./ModelSelector/ProviderTabs",
        "./ModelSelector/ModelItem"
      ],
      "exports": [
        "SimpleModelSelector"
      ],
      "components": [
        "SimpleModelSelector",
        "SimpleModelSelector"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/StepContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/StepContent.tsx",
      "filename": "StepContent.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 3790,
      "lines": 125,
      "imports": [
        "react",
        "react-hook-form",
        "./types",
        "./AgentNameField",
        "./ModelSelector",
        "./RoleSelector",
        "./MemorySelector",
        "./ToolsGuardrails",
        "./steps/MCPToolsSelection",
        "./steps/KnowledgeBaseStep",
        "./CompletionScreen"
      ],
      "exports": [
        "StepContent"
      ],
      "components": [
        "StepContent",
        "StepContent"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/CompletionScreen.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/CompletionScreen.tsx",
      "filename": "CompletionScreen.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 964,
      "lines": 23,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "CompletionScreen"
      ],
      "components": [
        "CompletionScreen",
        "CompletionScreen"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/AgentNameField.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/AgentNameField.tsx",
      "filename": "AgentNameField.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 974,
      "lines": 35,
      "imports": [
        "react",
        "@/components/ui/form",
        "@/components/ui/input",
        "react-hook-form"
      ],
      "exports": [
        "AgentNameField"
      ],
      "components": [
        "AgentNameField",
        "AgentNameField"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "Form",
        "Form",
        "Form",
        "Input",
        "Form"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector.tsx",
      "filename": "ModelSelector.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 8653,
      "lines": 209,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/button",
        "@/components/ui/form",
        "react-hook-form",
        "@/components/ui/tabs",
        "./types"
      ],
      "exports": [
        "ModelSelector"
      ],
      "components": [
        "ModelSelector",
        "ModelSelector"
      ],
      "hooks": [
        "useCallback"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "Form",
        "Form",
        "Form",
        "Button",
        "button",
        "Form"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/SimpleMemorySelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleMemorySelector.tsx",
      "filename": "SimpleMemorySelector.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 3006,
      "lines": 86,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [
        "SimpleMemorySelector"
      ],
      "components": [
        "SimpleMemorySelector",
        "SimpleMemorySelector"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/types.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/types.ts",
      "filename": "types.ts",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".ts",
      "size": 1444,
      "lines": 79,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/SimpleToolsGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleToolsGuardrails.tsx",
      "filename": "SimpleToolsGuardrails.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 4445,
      "lines": 123,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/label",
        "@/components/ui/scroll-area",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "./types"
      ],
      "exports": [
        "SimpleToolsGuardrails"
      ],
      "components": [
        "SimpleToolsGuardrails",
        "SimpleToolsGuardrails"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/StepNavigation.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/StepNavigation.tsx",
      "filename": "StepNavigation.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 2411,
      "lines": 99,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/dialog"
      ],
      "exports": [
        "StepNavigation"
      ],
      "components": [
        "StepNavigation",
        "StepNavigation"
      ],
      "hooks": [
        "useEvent"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/AgentDialogContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/AgentDialogContent.tsx",
      "filename": "AgentDialogContent.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 3103,
      "lines": 105,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "react-hook-form",
        "./types",
        "./components"
      ],
      "exports": [
        "AgentDialogContent"
      ],
      "components": [
        "AgentDialogContent",
        "AgentDialogContent"
      ],
      "hooks": [
        "useEvent"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/OllamaAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/OllamaAgentDialog.tsx",
      "filename": "OllamaAgentDialog.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 50884,
      "lines": 1159,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/slider",
        "@/hooks/useOllamaModels",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast",
        "./steps/EnhancedCapabilities",
        "./steps/EnhancedGuardrails"
      ],
      "exports": [
        "OllamaAgentDialog"
      ],
      "components": [
        "OllamaAgentDialog",
        "OllamaAgentDialog"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useOllamaModels",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/WorkingAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/WorkingAgentDialog.tsx",
      "filename": "WorkingAgentDialog.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 11675,
      "lines": 391,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/hooks/use-toast",
        "lucide-react",
        "@/components/ui/dialog",
        "./SimpleAgentNameField",
        "./SimpleModelSelector",
        "./SimpleRoleSelector",
        "./SimpleMemorySelector",
        "./SimpleToolsGuardrails",
        "./steps/MCPToolsSelection",
        "./CompletionScreen",
        "./models",
        "./toolsRolesData",
        "./types"
      ],
      "exports": [
        "WorkingAgentDialog"
      ],
      "components": [
        "WorkingAgentDialog",
        "WorkingAgentDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5001/api/agents",
        "http://localhost:7860",
        "http://localhost:5001/api/agents",
        "/api/agents"
      ],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/MinimalAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/MinimalAgentDialog.tsx",
      "filename": "MinimalAgentDialog.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 11006,
      "lines": 297,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/hooks/use-toast",
        "lucide-react",
        "./models"
      ],
      "exports": [
        "MinimalAgentDialog"
      ],
      "components": [
        "MinimalAgentDialog",
        "MinimalAgentDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input",
        "Button",
        "select",
        "Button",
        "Button",
        "Button",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/DebugWorkingDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/DebugWorkingDialog.tsx",
      "filename": "DebugWorkingDialog.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 7287,
      "lines": 196,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/hooks/use-toast",
        "lucide-react",
        "./SimpleAgentNameField",
        "./SimpleModelSelector",
        "./SimpleRoleSelector",
        "./SimpleMemorySelector",
        "./SimpleToolsGuardrails",
        "./SimpleMCPToolsSelection",
        "./models",
        "./toolsRolesData"
      ],
      "exports": [
        "DebugWorkingDialog"
      ],
      "components": [
        "DebugWorkingDialog",
        "DebugWorkingDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/RoleSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/RoleSelector.tsx",
      "filename": "RoleSelector.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 2422,
      "lines": 73,
      "imports": [
        "react",
        "@/components/ui/form",
        "react-hook-form",
        "./types",
        "@/components/ui/textarea"
      ],
      "exports": [
        "RoleSelector"
      ],
      "components": [
        "RoleSelector",
        "RoleSelector"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form",
        "Form"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".ts",
      "size": 431,
      "lines": 15,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [
        "useAgentForm"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 15 lines"
    },
    "src/components/CommandCentre/CreateAgent/toolsRolesData.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/toolsRolesData.tsx",
      "filename": "toolsRolesData.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 3185,
      "lines": 100,
      "imports": [
        "react",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "tools",
        "roles"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/SimpleRoleSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleRoleSelector.tsx",
      "filename": "SimpleRoleSelector.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 2215,
      "lines": 64,
      "imports": [
        "react",
        "@/components/ui/label",
        "./types",
        "@/components/ui/textarea"
      ],
      "exports": [
        "SimpleRoleSelector"
      ],
      "components": [
        "SimpleRoleSelector",
        "SimpleRoleSelector"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ToolsGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ToolsGuardrails.tsx",
      "filename": "ToolsGuardrails.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 6623,
      "lines": 188,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/form",
        "@/components/ui/scroll-area",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "./types",
        "react-hook-form",
        "./types",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "ToolsGuardrails"
      ],
      "components": [
        "ToolsGuardrails",
        "ToolsGuardrails"
      ],
      "hooks": [
        "useCallback"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "Form",
        "Form"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ActionDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ActionDialog.tsx",
      "filename": "ActionDialog.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 1120,
      "lines": 44,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "lucide-react"
      ],
      "exports": [
        "ActionDialog"
      ],
      "components": [
        "ActionDialog",
        "ActionDialog"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/MemorySelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/MemorySelector.tsx",
      "filename": "MemorySelector.tsx",
      "directory": "src/components/CommandCentre/CreateAgent",
      "extension": ".tsx",
      "size": 3120,
      "lines": 85,
      "imports": [
        "react",
        "react-hook-form",
        "./types",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [
        "MemorySelector"
      ],
      "components": [
        "MemorySelector",
        "MemorySelector"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/models/meta.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/meta.ts",
      "filename": "meta.ts",
      "directory": "src/components/CommandCentre/CreateAgent/models",
      "extension": ".ts",
      "size": 988,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "metaModels"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/amazon.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/amazon.ts",
      "filename": "amazon.ts",
      "directory": "src/components/CommandCentre/CreateAgent/models",
      "extension": ".ts",
      "size": 669,
      "lines": 34,
      "imports": [
        "../types"
      ],
      "exports": [
        "amazonModels"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/ollama.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/ollama.ts",
      "filename": "ollama.ts",
      "directory": "src/components/CommandCentre/CreateAgent/models",
      "extension": ".ts",
      "size": 3005,
      "lines": 141,
      "imports": [
        "../types"
      ],
      "exports": [
        "ollamaModels"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/anthropic.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/anthropic.ts",
      "filename": "anthropic.ts",
      "directory": "src/components/CommandCentre/CreateAgent/models",
      "extension": ".ts",
      "size": 1014,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "anthropicModels"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/deepseek.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/deepseek.ts",
      "filename": "deepseek.ts",
      "directory": "src/components/CommandCentre/CreateAgent/models",
      "extension": ".ts",
      "size": 987,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "deepseekModels"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/openai.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/openai.ts",
      "filename": "openai.ts",
      "directory": "src/components/CommandCentre/CreateAgent/models",
      "extension": ".ts",
      "size": 1003,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "openaiModels"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CommandCentre/CreateAgent/models",
      "extension": ".ts",
      "size": 1291,
      "lines": 42,
      "imports": [
        "../types",
        "./openai",
        "./anthropic",
        "./meta",
        "./deepseek",
        "./amazon",
        "./ollama"
      ],
      "exports": [
        "AIModels",
        "getDynamicOllamaModels",
        "openaiModels,\n  anthropicModels,\n  metaModels,\n  deepseekModels,\n  amazonModels,\n  ollamaModels\n"
      ],
      "components": [
        "AIModels"
      ],
      "hooks": [
        "useOllamaModels"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/CommandCentre/CreateAgent/components/AgentFormWrapper.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/components/AgentFormWrapper.tsx",
      "filename": "AgentFormWrapper.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/components",
      "extension": ".tsx",
      "size": 3173,
      "lines": 108,
      "imports": [
        "react",
        "@/components/ui/form",
        "react-hook-form",
        "../types",
        "../StepContent",
        "../StepNavigation",
        "../types"
      ],
      "exports": [
        "AgentFormWrapper"
      ],
      "components": [
        "AgentFormWrapper",
        "AgentFormWrapper"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "form"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/components/AgentDialogHeader.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/components/AgentDialogHeader.tsx",
      "filename": "AgentDialogHeader.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/components",
      "extension": ".tsx",
      "size": 549,
      "lines": 19,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog"
      ],
      "exports": [
        "AgentDialogHeader"
      ],
      "components": [
        "AgentDialogHeader",
        "AgentDialogHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/components/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/components/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CommandCentre/CreateAgent/components",
      "extension": ".ts",
      "size": 74,
      "lines": 4,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/components/CommandCentre/CreateAgent/steps/MCPToolsSelection.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/MCPToolsSelection.tsx",
      "filename": "MCPToolsSelection.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/steps",
      "extension": ".tsx",
      "size": 14168,
      "lines": 399,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/lib/services/MCPGatewayService"
      ],
      "exports": [
        "MCPToolsSelection"
      ],
      "components": [
        "MCPToolsSelection"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Button",
        "Button",
        "Input",
        "button",
        "button",
        "Card",
        "Card",
        "Button",
        "button",
        "className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\"",
        "className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white\""
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/CommandCentre/CreateAgent/steps/EnhancedGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/EnhancedGuardrails.tsx",
      "filename": "EnhancedGuardrails.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/steps",
      "extension": ".tsx",
      "size": 30087,
      "lines": 732,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/alert",
        "@/components/ui/checkbox",
        "@/components/ui/badge"
      ],
      "exports": [
        "EnhancedGuardrails"
      ],
      "components": [
        "EnhancedGuardrails",
        "EnhancedGuardrails"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Input",
        "Button",
        "Input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Button",
        "Button",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/steps/KnowledgeBaseStep.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/KnowledgeBaseStep.tsx",
      "filename": "KnowledgeBaseStep.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/steps",
      "extension": ".tsx",
      "size": 11748,
      "lines": 296,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/RAG/DocumentUploader",
        "@/components/RAG/KnowledgeBaseSelector",
        "@/components/RAG/RAGConfiguration",
        "@/lib/services/RAGService",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "KnowledgeBaseStep"
      ],
      "components": [
        "KnowledgeBaseStep",
        "KnowledgeBaseStep"
      ],
      "hooks": [
        "useIndustryContext",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "9 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/steps/EnhancedCapabilities.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/EnhancedCapabilities.tsx",
      "filename": "EnhancedCapabilities.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/steps",
      "extension": ".tsx",
      "size": 5491,
      "lines": 156,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/label",
        "@/components/ui/select"
      ],
      "exports": [
        "EnhancedCapabilities"
      ],
      "components": [
        "EnhancedCapabilities",
        "EnhancedCapabilities"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/ModelItem.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/ModelItem.tsx",
      "filename": "ModelItem.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/ModelSelector",
      "extension": ".tsx",
      "size": 3069,
      "lines": 97,
      "imports": [
        "react",
        "lucide-react",
        "../types",
        "./CapabilityBar"
      ],
      "exports": [
        "ModelItem"
      ],
      "components": [
        "ModelItem",
        "ModelItem"
      ],
      "hooks": [
        "useEvent"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/CapabilityBar.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/CapabilityBar.tsx",
      "filename": "CapabilityBar.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/ModelSelector",
      "extension": ".tsx",
      "size": 438,
      "lines": 22,
      "imports": [
        "react"
      ],
      "exports": [
        "CapabilityBar"
      ],
      "components": [
        "CapabilityBar",
        "CapabilityBar"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/ModelSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/ModelSelector.tsx",
      "filename": "ModelSelector.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/ModelSelector",
      "extension": ".tsx",
      "size": 4177,
      "lines": 118,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/button",
        "@/components/ui/form",
        "react-hook-form",
        "../types",
        "./ProviderTabs",
        "./ModelItem"
      ],
      "exports": [
        "ModelSelector"
      ],
      "components": [
        "ModelSelector",
        "ModelSelector"
      ],
      "hooks": [
        "useCallback",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Form",
        "Form",
        "Form",
        "Form",
        "Button",
        "Form"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/ProviderTabs.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/ProviderTabs.tsx",
      "filename": "ProviderTabs.tsx",
      "directory": "src/components/CommandCentre/CreateAgent/ModelSelector",
      "extension": ".tsx",
      "size": 1780,
      "lines": 62,
      "imports": [
        "react",
        "@/components/ui/tabs"
      ],
      "exports": [
        "ProviderTabs"
      ],
      "components": [
        "ProviderTabs",
        "ProviderTabs"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CommandCentre/CreateAgent/ModelSelector",
      "extension": ".ts",
      "size": 128,
      "lines": 6,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/CommandCentre/CreateAgent/hooks/useAgentForm.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/hooks/useAgentForm.ts",
      "filename": "useAgentForm.ts",
      "directory": "src/components/CommandCentre/CreateAgent/hooks",
      "extension": ".ts",
      "size": 10889,
      "lines": 374,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../types",
        "../toolsRolesData"
      ],
      "exports": [
        "useAgentForm"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useEffect",
        "useAgentForm",
        "useRef",
        "useToast",
        "useCallback",
        "useForm"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5052/api/agents",
        "http://localhost:7860",
        "http://localhost:5052/api/agents",
        "/api/agents"
      ],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "10 functionality indicators, 0 components"
    },
    "src/components/CommandCentre/CreateMultiAgentWorkflow/CreateMultiAgentWorkflowDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateMultiAgentWorkflow/CreateMultiAgentWorkflowDialog.tsx",
      "filename": "CreateMultiAgentWorkflowDialog.tsx",
      "directory": "src/components/CommandCentre/CreateMultiAgentWorkflow",
      "extension": ".tsx",
      "size": 12739,
      "lines": 325,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/hooks/use-toast",
        "lucide-react"
      ],
      "exports": [
        "CreateMultiAgentWorkflowDialog"
      ],
      "components": [
        "CreateMultiAgentWorkflowDialog",
        "CreateMultiAgentWorkflowDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/agents",
        "http://localhost:5002/api/agents",
        "/api/agents"
      ],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Button",
        "Button",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowDialogContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowDialogContent.tsx",
      "filename": "StrandsWorkflowDialogContent.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".tsx",
      "size": 4017,
      "lines": 118,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/progress",
        "./StrandsWorkflowStepContent",
        "./StrandsWorkflowStepNavigation",
        "react-hook-form",
        "./types"
      ],
      "exports": [
        "StrandsWorkflowDialogContent"
      ],
      "components": [
        "StrandsWorkflowDialogContent",
        "StrandsWorkflowDialogContent"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepNavigation.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepNavigation.tsx",
      "filename": "StrandsWorkflowStepNavigation.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".tsx",
      "size": 3256,
      "lines": 108,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "react-hook-form",
        "./types"
      ],
      "exports": [
        "StrandsWorkflowStepNavigation"
      ],
      "components": [
        "StrandsWorkflowStepNavigation",
        "StrandsWorkflowStepNavigation"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/CreateStrandsWorkflowDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/CreateStrandsWorkflowDialog.tsx",
      "filename": "CreateStrandsWorkflowDialog.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".tsx",
      "size": 2671,
      "lines": 92,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./StrandsWorkflowDialogContent",
        "./hooks/useStrandsWorkflowForm",
        "./models",
        "./strandsData"
      ],
      "exports": [
        "CreateStrandsWorkflowDialog"
      ],
      "components": [
        "CreateStrandsWorkflowDialog",
        "CreateStrandsWorkflowDialog"
      ],
      "hooks": [
        "useStrandsWorkflowForm",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/types.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/types.ts",
      "filename": "types.ts",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".ts",
      "size": 2258,
      "lines": 94,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepContent.tsx",
      "filename": "StrandsWorkflowStepContent.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".tsx",
      "size": 3174,
      "lines": 105,
      "imports": [
        "react",
        "react-hook-form",
        "./types",
        "./steps/StrandsBasicInfo",
        "./steps/StrandsModelConfig",
        "./steps/StrandsReasoningPatterns",
        "./steps/StrandsMemoryConfig",
        "./steps/StrandsWorkflowSteps",
        "./steps/StrandsToolsGuardrails"
      ],
      "exports": [
        "StrandsWorkflowStepContent"
      ],
      "components": [
        "StrandsWorkflowStepContent",
        "StrandsWorkflowStepContent"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/index.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".ts",
      "size": 614,
      "lines": 16,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [
        "useStrandsWorkflowForm"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 16 lines"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/models.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/models.ts",
      "filename": "models.ts",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".ts",
      "size": 3002,
      "lines": 95,
      "imports": [
        "./types"
      ],
      "exports": [
        "StrandsModels",
        "getModelsByProvider",
        "getModelCapabilities",
        "supportsReasoningPattern"
      ],
      "components": [
        "StrandsModels"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/strandsData.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/strandsData.ts",
      "filename": "strandsData.ts",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow",
      "extension": ".ts",
      "size": 6170,
      "lines": 169,
      "imports": [
        "./types"
      ],
      "exports": [
        "reasoningPatterns",
        "strandsTools",
        "memoryTypes"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsBasicInfo.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsBasicInfo.tsx",
      "filename": "StrandsBasicInfo.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow/steps",
      "extension": ".tsx",
      "size": 3606,
      "lines": 90,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsBasicInfo"
      ],
      "components": [
        "StrandsBasicInfo",
        "StrandsBasicInfo"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsReasoningPatterns.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsReasoningPatterns.tsx",
      "filename": "StrandsReasoningPatterns.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow/steps",
      "extension": ".tsx",
      "size": 5024,
      "lines": 122,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsReasoningPatterns"
      ],
      "components": [
        "StrandsReasoningPatterns",
        "StrandsReasoningPatterns"
      ],
      "hooks": [
        "useCase"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsModelConfig.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsModelConfig.tsx",
      "filename": "StrandsModelConfig.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow/steps",
      "extension": ".tsx",
      "size": 8319,
      "lines": 213,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/slider",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsModelConfig"
      ],
      "components": [
        "StrandsModelConfig",
        "StrandsModelConfig"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsToolsGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsToolsGuardrails.tsx",
      "filename": "StrandsToolsGuardrails.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow/steps",
      "extension": ".tsx",
      "size": 7306,
      "lines": 202,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsToolsGuardrails"
      ],
      "components": [
        "StrandsToolsGuardrails",
        "StrandsToolsGuardrails"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsWorkflowSteps.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsWorkflowSteps.tsx",
      "filename": "StrandsWorkflowSteps.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow/steps",
      "extension": ".tsx",
      "size": 8614,
      "lines": 197,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsWorkflowSteps"
      ],
      "components": [
        "StrandsWorkflowSteps",
        "StrandsWorkflowSteps"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsMemoryConfig.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsMemoryConfig.tsx",
      "filename": "StrandsMemoryConfig.tsx",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow/steps",
      "extension": ".tsx",
      "size": 4907,
      "lines": 118,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsMemoryConfig"
      ],
      "components": [
        "StrandsMemoryConfig",
        "StrandsMemoryConfig"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/hooks/useStrandsWorkflowForm.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/hooks/useStrandsWorkflowForm.ts",
      "filename": "useStrandsWorkflowForm.ts",
      "directory": "src/components/CommandCentre/CreateStrandsWorkflow/hooks",
      "extension": ".ts",
      "size": 7664,
      "lines": 249,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../types",
        "@/lib/frameworks/StrandsSDK"
      ],
      "exports": [
        "useStrandsWorkflowForm"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useStrandsWorkflowForm",
        "useRef",
        "useToast",
        "useCallback",
        "useForm"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "9 functionality indicators, 0 components"
    },
    "src/components/CommandCentre/StrandsIntegration/StrandsAgentCreator.tsx": {
      "file_path": "src/components/CommandCentre/StrandsIntegration/StrandsAgentCreator.tsx",
      "filename": "StrandsAgentCreator.tsx",
      "directory": "src/components/CommandCentre/StrandsIntegration",
      "extension": ".tsx",
      "size": 0,
      "lines": 1,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 1 lines"
    },
    "src/components/CommandCentre/hooks/useAgentForm.ts": {
      "file_path": "src/components/CommandCentre/hooks/useAgentForm.ts",
      "filename": "useAgentForm.ts",
      "directory": "src/components/CommandCentre/hooks",
      "extension": ".ts",
      "size": 2149,
      "lines": 104,
      "imports": [
        "react",
        "react-hook-form",
        "../CreateAgent/types"
      ],
      "exports": [
        "useAgentForm"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useFormNavigation",
        "useAgentForm",
        "useRef",
        "useFormSubmission",
        "useFormOptions",
        "useForm",
        "useFormCleanup"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormSubmission.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormSubmission.ts",
      "filename": "useFormSubmission.ts",
      "directory": "src/components/CommandCentre/hooks/agent-form",
      "extension": ".ts",
      "size": 1877,
      "lines": 69,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../../CreateAgent/types"
      ],
      "exports": [
        "useFormSubmission"
      ],
      "components": [],
      "hooks": [
        "useRef",
        "useToast",
        "useCallback",
        "useFormSubmission"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormNavigation.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormNavigation.ts",
      "filename": "useFormNavigation.ts",
      "directory": "src/components/CommandCentre/hooks/agent-form",
      "extension": ".ts",
      "size": 996,
      "lines": 32,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../../CreateAgent/types"
      ],
      "exports": [
        "useFormNavigation"
      ],
      "components": [],
      "hooks": [
        "useToast",
        "useCallback",
        "useFormNavigation"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormCleanup.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormCleanup.ts",
      "filename": "useFormCleanup.ts",
      "directory": "src/components/CommandCentre/hooks/agent-form",
      "extension": ".ts",
      "size": 1435,
      "lines": 48,
      "imports": [
        "react",
        "react-hook-form",
        "../../CreateAgent/types"
      ],
      "exports": [
        "useFormCleanup"
      ],
      "components": [],
      "hooks": [
        "useRef",
        "useCallback",
        "useFormCleanup"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/hooks/agent-form/index.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CommandCentre/hooks/agent-form",
      "extension": ".ts",
      "size": 143,
      "lines": 6,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [
        "useFormSubmission",
        "useFormOptions",
        "useFormCleanup",
        "useFormNavigation"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormOptions.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormOptions.ts",
      "filename": "useFormOptions.ts",
      "directory": "src/components/CommandCentre/hooks/agent-form",
      "extension": ".ts",
      "size": 1851,
      "lines": 60,
      "imports": [
        "react",
        "react-hook-form",
        "../../CreateAgent/types",
        "../../CreateAgent/toolsRolesData"
      ],
      "exports": [
        "useFormOptions"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useFormOptions"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/RAG/DocumentUploader.tsx": {
      "file_path": "src/components/RAG/DocumentUploader.tsx",
      "filename": "DocumentUploader.tsx",
      "directory": "src/components/RAG",
      "extension": ".tsx",
      "size": 10707,
      "lines": 324,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/lib/services/RAGService"
      ],
      "exports": [
        "DocumentUploader"
      ],
      "components": [
        "DocumentUploader",
        "DocumentUploader"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "input",
        "Button",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "9 functionality indicators, 2 components"
    },
    "src/components/RAG/KnowledgeBaseSelector.tsx": {
      "file_path": "src/components/RAG/KnowledgeBaseSelector.tsx",
      "filename": "KnowledgeBaseSelector.tsx",
      "directory": "src/components/RAG",
      "extension": ".tsx",
      "size": 9826,
      "lines": 267,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/lib/services/RAGService",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "KnowledgeBaseSelector"
      ],
      "components": [
        "KnowledgeBaseSelector",
        "KnowledgeBaseSelector"
      ],
      "hooks": [
        "useIndustryContext",
        "useState",
        "useMemo",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Input",
        "Button",
        "Button",
        "className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\""
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/RAG/RAGConfiguration.tsx": {
      "file_path": "src/components/RAG/RAGConfiguration.tsx",
      "filename": "RAGConfiguration.tsx",
      "directory": "src/components/RAG",
      "extension": ".tsx",
      "size": 14223,
      "lines": 361,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/ui/select",
        "@/components/ui/tooltip",
        "@/components/ui/badge",
        "@/lib/services/RAGService",
        "@/lib/services/OllamaService",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "RAGConfiguration"
      ],
      "components": [
        "RAGConfiguration",
        "RAGConfiguration"
      ],
      "hooks": [
        "useIndustryContext",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/WorkflowTemplates/WorkflowTemplateSelector.tsx": {
      "file_path": "src/components/WorkflowTemplates/WorkflowTemplateSelector.tsx",
      "filename": "WorkflowTemplateSelector.tsx",
      "directory": "src/components/WorkflowTemplates",
      "extension": ".tsx",
      "size": 14756,
      "lines": 385,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "interface",
        "WorkflowTemplateSelector"
      ],
      "components": [
        "WorkflowTemplateSelector",
        "WorkflowTemplateSelector"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/WorkflowTemplates/index.ts": {
      "file_path": "src/components/WorkflowTemplates/index.ts",
      "filename": "index.ts",
      "directory": "src/components/WorkflowTemplates",
      "extension": ".ts",
      "size": 148,
      "lines": 4,
      "imports": [],
      "exports": [
        "type",
        "WorkflowTemplateSelector "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmPropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmPropertiesPanel.tsx",
      "filename": "TelcoCvmPropertiesPanel.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 19663,
      "lines": 447,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/tabs",
        "@xyflow/react"
      ],
      "exports": [
        "TelcoCvmPropertiesPanel"
      ],
      "components": [
        "TelcoCvmPropertiesPanel",
        "TelcoCvmPropertiesPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/ModernBankingAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ModernBankingAgentPalette.tsx",
      "filename": "ModernBankingAgentPalette.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 7915,
      "lines": 210,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge"
      ],
      "exports": [
        "ModernBankingAgentPalette"
      ],
      "components": [
        "ModernBankingAgentPalette",
        "ModernBankingAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/ComplianceMonitor.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ComplianceMonitor.tsx",
      "filename": "ComplianceMonitor.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 5953,
      "lines": 161,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "ComplianceMonitor"
      ],
      "components": [
        "ComplianceMonitor",
        "ComplianceMonitor"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/PropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/PropertiesPanel.tsx",
      "filename": "PropertiesPanel.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 44547,
      "lines": 1034,
      "imports": [
        "react",
        "@xyflow/react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useUtilityConfiguration"
      ],
      "exports": [
        "EnhancedPropertiesPanel",
        "PropertiesPanel"
      ],
      "components": [
        "EnhancedPropertiesPanel",
        "EnhancedPropertiesPanel",
        "PropertiesPanel"
      ],
      "hooks": [
        "useState",
        "useUtilityConfiguration",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Button",
        "Input",
        "Input",
        "Input",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Input",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 3 components"
    },
    "src/components/MultiAgentWorkspace/WorkflowValidationPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowValidationPanel.tsx",
      "filename": "WorkflowValidationPanel.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 9854,
      "lines": 241,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "WorkflowValidationPanel"
      ],
      "components": [
        "WorkflowValidationPanel",
        "WorkflowValidationPanel"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/WorkspaceHeader.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkspaceHeader.tsx",
      "filename": "WorkspaceHeader.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 1359,
      "lines": 33,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "WorkspaceHeader"
      ],
      "components": [
        "WorkspaceHeader",
        "WorkspaceHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/BlankWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/BlankWorkspace.tsx",
      "filename": "BlankWorkspace.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 23299,
      "lines": 622,
      "imports": [
        "react",
        "lucide-react",
        "./ModernWorkspaceHeader",
        "./AgentPalette",
        "./PropertiesPanel",
        "./BankingWorkflowToolbar",
        "./config/DecisionNodeConfigDialog",
        "./config/HandoffNodeConfigDialog",
        "@/hooks/useUtilityConfiguration",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernMemoryNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ModernHandoffNode",
        "./nodes/ModernAggregatorNode",
        "./nodes/ModernMonitorNode",
        "./nodes/ModernHumanNode",
        "./nodes/ModernMCPToolNode",
        "./WorkflowConfigDialog",
        "./edges/EnhancedConnectionEdge",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useOllamaAgentsForPalette",
        "@xyflow/react/dist/style.css"
      ],
      "exports": [
        "BlankWorkspace"
      ],
      "components": [
        "BlankWorkspace",
        "BlankWorkspace"
      ],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useState",
        "useUtilityConfiguration",
        "useNodesState",
        "useEvent",
        "useCallback",
        "useEdgesState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinPropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinPropertiesPanel.tsx",
      "filename": "NetworkTwinPropertiesPanel.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 16749,
      "lines": 334,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/ui/textarea",
        "@/components/ui/tabs",
        "@xyflow/react"
      ],
      "exports": [
        "NetworkTwinPropertiesPanel"
      ],
      "components": [
        "NetworkTwinPropertiesPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/StrandsExecutionOverlay.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/StrandsExecutionOverlay.tsx",
      "filename": "StrandsExecutionOverlay.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 8690,
      "lines": 212,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "StrandsExecutionOverlay"
      ],
      "components": [
        "StrandsExecutionOverlay"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/ChatConfigurationWizard.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ChatConfigurationWizard.tsx",
      "filename": "ChatConfigurationWizard.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 20842,
      "lines": 547,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react",
        "@/hooks/useOllamaModels",
        "@/hooks/useOllamaAgentsForPalette",
        "@/config/ollamaModels"
      ],
      "exports": [
        "interface",
        "ChatConfigurationWizard"
      ],
      "components": [
        "ChatConfigurationWizard",
        "ChatConfigurationWizard"
      ],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useState",
        "useOllamaModels"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/AgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/AgentPalette.tsx",
      "filename": "AgentPalette.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 75714,
      "lines": 1493,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useOllamaAgentsForPalette",
        "@/hooks/useStrandsNativeTools",
        "./config/StrandsToolConfigDialog",
        "@/hooks/useStrandsUtilities"
      ],
      "exports": [
        "AgentPalette"
      ],
      "components": [
        "AgentConfigDialog",
        "AgentPalette",
        "AgentPalette"
      ],
      "hooks": [
        "useStrandsUtilities",
        "useOllamaAgentsForPalette",
        "useState",
        "useStrandsNativeTools",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1\"",
        "className=\"fixed bg-gray-900/95 backdrop-blur-sm border border-gray-600 rounded-lg shadow-2xl p-4 w-80 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 pointer-events-none select-none\"",
        "className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1\"",
        "className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1\"",
        "className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1\"",
        "className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1\""
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/MultiAgentWorkspace/StrandsBlankWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/StrandsBlankWorkspace.tsx",
      "filename": "StrandsBlankWorkspace.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 15636,
      "lines": 384,
      "imports": [
        "react",
        "lucide-react",
        "./ModernWorkspaceHeader",
        "./AgentPalette",
        "./PropertiesPanel",
        "./BankingWorkflowToolbar",
        "./StrandsWorkflowCanvas",
        "@/lib/services/StrandsWorkflowOrchestrator",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useOllamaAgentsForPalette",
        "./config/DecisionNodeConfigDialog",
        "./config/HandoffNodeConfigDialog",
        "./config/MemoryNodeConfigDialog",
        "./config/GuardrailNodeConfigDialog",
        "./config/AggregatorNodeConfigDialog",
        "./config/MonitorNodeConfigDialog",
        "./config/HumanNodeConfigDialog"
      ],
      "exports": [
        "StrandsBlankWorkspace"
      ],
      "components": [
        "StrandsBlankWorkspace",
        "StrandsBlankWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useOllamaAgentsForPalette",
        "useMemo"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/RiskAssessmentPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/RiskAssessmentPanel.tsx",
      "filename": "RiskAssessmentPanel.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 7042,
      "lines": 179,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "RiskAssessmentPanel"
      ],
      "components": [
        "RiskAssessmentPanel",
        "RiskAssessmentPanel"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinWorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinWorkflowToolbar.tsx",
      "filename": "NetworkTwinWorkflowToolbar.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 6045,
      "lines": 175,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "NetworkTwinWorkflowToolbar"
      ],
      "components": [
        "NetworkTwinWorkflowToolbar"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button",
        "Button",
        "Button",
        "Card",
        "Button",
        "Button",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmAgentPalette.tsx",
      "filename": "TelcoCvmAgentPalette.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 8849,
      "lines": 228,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "TelcoCvmAgentPalette"
      ],
      "components": [
        "TelcoCvmAgentPalette",
        "TelcoCvmAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/AddChatInterfaceButton.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/AddChatInterfaceButton.tsx",
      "filename": "AddChatInterfaceButton.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 2304,
      "lines": 70,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "./ChatConfigurationWizard",
        "@xyflow/react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "AddChatInterfaceButton"
      ],
      "components": [
        "AddChatInterfaceButton",
        "AddChatInterfaceButton"
      ],
      "hooks": [
        "useReactFlow",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/MultiAgentProjectSelector.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/MultiAgentProjectSelector.tsx",
      "filename": "MultiAgentProjectSelector.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 12674,
      "lines": 290,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "MultiAgentProjectSelector"
      ],
      "components": [
        "MultiAgentProjectSelector",
        "MultiAgentProjectSelector"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/MultiAgentWorkspaceBuilder.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/MultiAgentWorkspaceBuilder.tsx",
      "filename": "MultiAgentWorkspaceBuilder.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 5011,
      "lines": 174,
      "imports": [
        "react",
        "./WorkspaceHeader",
        "./AgentPalette",
        "./PropertiesPanel",
        "./WorkflowToolbar",
        "./nodes/CustomAgentNode",
        "./nodes/DecisionNode",
        "./nodes/MemoryNode",
        "./nodes/GuardrailNode",
        "./edges/TaskHandoffEdge",
        "@xyflow/react/dist/style.css"
      ],
      "exports": [
        "MultiAgentWorkspaceBuilder"
      ],
      "components": [
        "MultiAgentWorkspaceBuilder",
        "MultiAgentWorkspaceBuilder"
      ],
      "hooks": [
        "useState",
        "useNodesState",
        "useEvent",
        "useCallback",
        "useEdgesState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/FlexibleChatInterface.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/FlexibleChatInterface.tsx",
      "filename": "FlexibleChatInterface.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 11271,
      "lines": 328,
      "imports": [
        "@/utils/modelValidator",
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "lucide-react",
        "@/lib/services/FlexibleChatService"
      ],
      "exports": [
        "FlexibleChatInterface"
      ],
      "components": [
        "FlexibleChatInterface",
        "FlexibleChatInterface"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Input",
        "Button",
        "className=\"chat-input p-4 border-t border-gray-700 bg-gray-800/50\""
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/ChatWorkflowInterface.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ChatWorkflowInterface.tsx",
      "filename": "ChatWorkflowInterface.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 9939,
      "lines": 254,
      "imports": [
        "react",
        "@/lib/services/StrandsWorkflowOrchestrator",
        "@/lib/services/ChatExecutionService"
      ],
      "exports": [
        "ChatWorkflowInterface"
      ],
      "components": [
        "ChatWorkflowInterface",
        "ChatWorkflowInterface"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button",
        "button",
        "button",
        "className=\"chat-input border-t border-gray-600 p-4\"",
        "className=\"input-container flex gap-2 items-end\"",
        "className=\"message-input flex-1 p-3 rounded-lg border border-gray-600 bg-gray-800/80 text-white text-sm resize-none min-h-[44px] max-h-[120px] placeholder-gray-400\"",
        "className=\"send-button bg-green-600 hover:bg-green-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white p-3 rounded-lg min-w-[44px] h-[44px] flex items-center justify-center transition-colors\""
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/BankingAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/BankingAgentPalette.tsx",
      "filename": "BankingAgentPalette.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 7952,
      "lines": 213,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge"
      ],
      "exports": [
        "BankingAgentPalette"
      ],
      "components": [
        "BankingAgentPalette",
        "BankingAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspace.tsx",
      "filename": "EnhancedMultiAgentWorkspace.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 0,
      "lines": 1,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 1 lines"
    },
    "src/components/MultiAgentWorkspace/WealthPropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WealthPropertiesPanel.tsx",
      "filename": "WealthPropertiesPanel.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 22092,
      "lines": 476,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "WealthPropertiesPanel"
      ],
      "components": [
        "WealthPropertiesPanel",
        "WealthPropertiesPanel"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Input",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmWorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmWorkflowToolbar.tsx",
      "filename": "TelcoCvmWorkflowToolbar.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 6175,
      "lines": 166,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "TelcoCvmWorkflowToolbar"
      ],
      "components": [
        "TelcoCvmWorkflowToolbar",
        "TelcoCvmWorkflowToolbar"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/WealthManagementWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WealthManagementWorkspace.tsx",
      "filename": "WealthManagementWorkspace.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 13640,
      "lines": 438,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./WealthAgentPalette",
        "./WealthPropertiesPanel",
        "./BankingWorkflowToolbar",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernMemoryNode",
        "./nodes/ModernGuardrailNode",
        "./edges/EnhancedConnectionEdge",
        "@xyflow/react/dist/style.css"
      ],
      "exports": [
        "WealthManagementWorkspace"
      ],
      "components": [
        "WealthManagementWorkspace",
        "WealthManagementWorkspace"
      ],
      "hooks": [
        "useState",
        "useNodesState",
        "useEffect",
        "useEvent",
        "useCallback",
        "useEdgesState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/ModernWorkspaceHeader.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ModernWorkspaceHeader.tsx",
      "filename": "ModernWorkspaceHeader.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 1644,
      "lines": 36,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "ModernWorkspaceHeader"
      ],
      "components": [
        "ModernWorkspaceHeader",
        "ModernWorkspaceHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/BankingWorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/BankingWorkflowToolbar.tsx",
      "filename": "BankingWorkflowToolbar.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 5719,
      "lines": 156,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "BankingWorkflowToolbar"
      ],
      "components": [
        "BankingWorkflowToolbar",
        "BankingWorkflowToolbar"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/index.ts": {
      "file_path": "src/components/MultiAgentWorkspace/index.ts",
      "filename": "index.ts",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".ts",
      "size": 1488,
      "lines": 25,
      "imports": [],
      "exports": [
        "MultiAgentWorkspaceBuilder ",
        "EnhancedMultiAgentWorkspaceBuilder ",
        "WealthManagementWorkspace ",
        "TelcoCvmWorkspace ",
        "BlankWorkspace ",
        "MultiAgentProjectSelector ",
        "WorkspaceHeader ",
        "AgentPalette ",
        "BankingAgentPalette ",
        "TelcoCvmAgentPalette ",
        "PropertiesPanel ",
        "TelcoCvmPropertiesPanel ",
        "EnhancedPropertiesPanel ",
        "WorkflowToolbar ",
        "BankingWorkflowToolbar ",
        "ComplianceMonitor ",
        "RiskAssessmentPanel ",
        "CustomAgentNode ",
        "DecisionNode ",
        "MemoryNode ",
        "GuardrailNode ",
        "ComplianceNode ",
        "RiskNode ",
        "AuditNode ",
        "TaskHandoffEdge "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/WorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowToolbar.tsx",
      "filename": "WorkflowToolbar.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 2634,
      "lines": 80,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/separator"
      ],
      "exports": [
        "WorkflowToolbar"
      ],
      "components": [
        "WorkflowToolbar",
        "WorkflowToolbar"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/StrandsWorkflowCanvas.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/StrandsWorkflowCanvas.tsx",
      "filename": "StrandsWorkflowCanvas.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 18974,
      "lines": 563,
      "imports": [
        "react",
        "@/lib/services/StrandsWorkflowOrchestrator",
        "@/hooks/useOllamaAgentsForPalette",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useStrandsNativeTools",
        "./nodes/StrandsAgentNode",
        "./nodes/StrandsToolNode",
        "./nodes/StrandsDecisionNode",
        "./nodes/StrandsHandoffNode",
        "./nodes/StrandsOutputNode",
        "./nodes/StrandsHumanNode",
        "./nodes/StrandsMemoryNode",
        "./nodes/StrandsGuardrailNode",
        "./nodes/StrandsAggregatorNode",
        "./nodes/StrandsMonitorNode",
        "./nodes/ChatInterfaceNode",
        "./edges/StrandsEdge",
        "./edges/AnimatedStrandsEdge",
        "./StrandsExecutionOverlay",
        "./AddChatInterfaceButton",
        "@xyflow/react/dist/style.css"
      ],
      "exports": [
        "StrandsWorkflowCanvasWrapper"
      ],
      "components": [
        "StrandsWorkflowCanvas",
        "StrandsWorkflowCanvasWrapper"
      ],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useState",
        "useNodesState",
        "useStrandsNativeTools",
        "useEffect",
        "useReactFlow",
        "useEvent",
        "useCallback",
        "useEdgesState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button",
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "10 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmWorkspace.tsx",
      "filename": "TelcoCvmWorkspace.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 14044,
      "lines": 458,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./TelcoCvmAgentPalette",
        "./TelcoCvmPropertiesPanel",
        "./TelcoCvmWorkflowToolbar",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ModernMemoryNode",
        "./edges/EnhancedConnectionEdge",
        "@xyflow/react/dist/style.css"
      ],
      "exports": [
        "TelcoCvmWorkspace"
      ],
      "components": [
        "TelcoCvmWorkspace",
        "TelcoCvmWorkspace"
      ],
      "hooks": [
        "useState",
        "useNodesState",
        "useEffect",
        "useEvent",
        "useCallback",
        "useEdgesState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/WorkflowExecutionPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowExecutionPanel.tsx",
      "filename": "WorkflowExecutionPanel.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 11499,
      "lines": 320,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/hooks/useWorkflowExecution",
        "@/hooks/useOllamaAgentsForPalette"
      ],
      "exports": [
        "WorkflowExecutionPanel"
      ],
      "components": [
        "WorkflowExecutionPanel",
        "WorkflowExecutionPanel"
      ],
      "hooks": [
        "useWorkflowExecution",
        "useState",
        "useOllamaAgentsForPalette",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinWorkspace.tsx",
      "filename": "NetworkTwinWorkspace.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 14096,
      "lines": 459,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./NetworkTwinAgentPalette",
        "./NetworkTwinPropertiesPanel",
        "./NetworkTwinWorkflowToolbar",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ModernMemoryNode",
        "./edges/EnhancedConnectionEdge",
        "@xyflow/react/dist/style.css"
      ],
      "exports": [
        "NetworkTwinWorkspace"
      ],
      "components": [
        "NetworkTwinWorkspace",
        "NetworkTwinWorkspace"
      ],
      "hooks": [
        "useState",
        "useNodesState",
        "useEffect",
        "useEvent",
        "useCallback",
        "useEdgesState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspaceBuilder.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspaceBuilder.tsx",
      "filename": "EnhancedMultiAgentWorkspaceBuilder.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 13839,
      "lines": 405,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./ModernBankingAgentPalette",
        "./PropertiesPanel",
        "./BankingWorkflowToolbar",
        "./ComplianceMonitor",
        "./RiskAssessmentPanel",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernMemoryNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ComplianceNode",
        "./nodes/RiskNode",
        "./nodes/AuditNode",
        "./edges/EnhancedConnectionEdge",
        "./engines/WorkflowEngine",
        "./types/orchestration",
        "@xyflow/react/dist/style.css"
      ],
      "exports": [
        "EnhancedMultiAgentWorkspaceBuilder"
      ],
      "components": [
        "EnhancedMultiAgentWorkspaceBuilder",
        "EnhancedMultiAgentWorkspaceBuilder"
      ],
      "hooks": [
        "useState",
        "useNodesState",
        "useEvent",
        "useCallback",
        "useEdgesState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinAgentPalette.tsx",
      "filename": "NetworkTwinAgentPalette.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 8699,
      "lines": 226,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "NetworkTwinAgentPalette"
      ],
      "components": [
        "NetworkTwinAgentPalette",
        "NetworkTwinAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/WorkflowConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowConfigDialog.tsx",
      "filename": "WorkflowConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 16616,
      "lines": 465,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs"
      ],
      "exports": [
        "WorkflowConfigDialog"
      ],
      "components": [
        "WorkflowConfigDialog",
        "WorkflowConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [
        "human",
        "agent_b",
        "agent_a",
        "human",
        "agent_a",
        "human",
        "escalation_agent",
        "human"
      ],
      "api_calls": [],
      "ui_elements": [
        "select",
        "input",
        "select",
        "select",
        "input",
        "select",
        "input",
        "Button",
        "Button",
        "select",
        "input",
        "select",
        "input",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/WealthAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WealthAgentPalette.tsx",
      "filename": "WealthAgentPalette.tsx",
      "directory": "src/components/MultiAgentWorkspace",
      "extension": ".tsx",
      "size": 7552,
      "lines": 188,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "WealthAgentPalette"
      ],
      "components": [
        "WealthAgentPalette",
        "WealthAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/types/orchestration.ts": {
      "file_path": "src/components/MultiAgentWorkspace/types/orchestration.ts",
      "filename": "orchestration.ts",
      "directory": "src/components/MultiAgentWorkspace/types",
      "extension": ".ts",
      "size": 1768,
      "lines": 74,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/GuardrailNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/GuardrailNodeConfigDialog.tsx",
      "filename": "GuardrailNodeConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 6768,
      "lines": 183,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "GuardrailNodeConfigDialog"
      ],
      "components": [
        "GuardrailNodeConfigDialog",
        "GuardrailNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/config/HandoffNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/HandoffNodeConfigDialog.tsx",
      "filename": "HandoffNodeConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 19043,
      "lines": 449,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react",
        "@/types/WorkflowUtilityTypes"
      ],
      "exports": [
        "HandoffNodeConfigDialog"
      ],
      "components": [
        "HandoffNodeConfigDialog",
        "HandoffNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/config/MonitorNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/MonitorNodeConfigDialog.tsx",
      "filename": "MonitorNodeConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 6947,
      "lines": 194,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "MonitorNodeConfigDialog"
      ],
      "components": [
        "MonitorNodeConfigDialog",
        "MonitorNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/config/AggregatorNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/AggregatorNodeConfigDialog.tsx",
      "filename": "AggregatorNodeConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 6600,
      "lines": 182,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "AggregatorNodeConfigDialog"
      ],
      "components": [
        "AggregatorNodeConfigDialog",
        "AggregatorNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/config/StrandsToolConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/StrandsToolConfigDialog.tsx",
      "filename": "StrandsToolConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 11920,
      "lines": 332,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/alert",
        "@/hooks/useStrandsNativeTools"
      ],
      "exports": [
        "StrandsToolConfigDialog"
      ],
      "components": [
        "StrandsToolConfigDialog",
        "StrandsToolConfigDialog"
      ],
      "hooks": [
        "useState",
        "useStrandsNativeTools",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "https://docs.tavily.com",
        "https://docs.exa.ai",
        "https://docs.mem0.ai",
        "https://api.slack.com/start",
        "https://docs.aws.amazon.com",
        "https://platform.openai.com/docs/guides/text-to-speech",
        "https://platform.openai.com/docs/guides/images"
      ],
      "ui_elements": [
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/config/MemoryNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/MemoryNodeConfigDialog.tsx",
      "filename": "MemoryNodeConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 5865,
      "lines": 166,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "MemoryNodeConfigDialog"
      ],
      "components": [
        "MemoryNodeConfigDialog",
        "MemoryNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/config/HumanNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/HumanNodeConfigDialog.tsx",
      "filename": "HumanNodeConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 7278,
      "lines": 200,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "lucide-react"
      ],
      "exports": [
        "HumanNodeConfigDialog"
      ],
      "components": [
        "HumanNodeConfigDialog",
        "HumanNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/config/DecisionNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/DecisionNodeConfigDialog.tsx",
      "filename": "DecisionNodeConfigDialog.tsx",
      "directory": "src/components/MultiAgentWorkspace/config",
      "extension": ".tsx",
      "size": 16596,
      "lines": 384,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "lucide-react",
        "@/types/WorkflowUtilityTypes"
      ],
      "exports": [
        "DecisionNodeConfigDialog"
      ],
      "components": [
        "DecisionNodeConfigDialog",
        "DecisionNodeConfigDialog"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button",
        "Button",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ChatInterfaceNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ChatInterfaceNode.tsx",
      "filename": "ChatInterfaceNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 9506,
      "lines": 283,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "../FlexibleChatInterface",
        "@/lib/services/FlexibleChatService"
      ],
      "exports": [
        "ChatInterfaceNode"
      ],
      "components": [
        "ChatInterfaceNode",
        "ChatInterfaceNode"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernDecisionNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernDecisionNode.tsx",
      "filename": "ModernDecisionNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 3478,
      "lines": 88,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernDecisionNode"
      ],
      "components": [
        "ModernDecisionNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernGuardrailNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernGuardrailNode.tsx",
      "filename": "ModernGuardrailNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 4444,
      "lines": 107,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernGuardrailNode"
      ],
      "components": [
        "ModernGuardrailNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernHandoffNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernHandoffNode.tsx",
      "filename": "ModernHandoffNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 5627,
      "lines": 151,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernHandoffNode"
      ],
      "components": [
        "ModernHandoffNode",
        "ModernHandoffNode"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernMonitorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernMonitorNode.tsx",
      "filename": "ModernMonitorNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 8364,
      "lines": 215,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernMonitorNode"
      ],
      "components": [
        "ModernMonitorNode",
        "ModernMonitorNode"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernMemoryNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernMemoryNode.tsx",
      "filename": "ModernMemoryNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 5490,
      "lines": 146,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernMemoryNode"
      ],
      "components": [
        "ModernMemoryNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/AuditNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/AuditNode.tsx",
      "filename": "AuditNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 2861,
      "lines": 76,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "AuditNode"
      ],
      "components": [
        "AuditNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsMemoryNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsMemoryNode.tsx",
      "filename": "StrandsMemoryNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 3409,
      "lines": 105,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsMemoryNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernHumanNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernHumanNode.tsx",
      "filename": "ModernHumanNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 5309,
      "lines": 152,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernHumanNode"
      ],
      "components": [
        "ModernHumanNode",
        "ModernHumanNode"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsOutputNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsOutputNode.tsx",
      "filename": "StrandsOutputNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 1684,
      "lines": 48,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsOutputNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsAggregatorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsAggregatorNode.tsx",
      "filename": "StrandsAggregatorNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 3516,
      "lines": 107,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsAggregatorNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsHandoffNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsHandoffNode.tsx",
      "filename": "StrandsHandoffNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 1880,
      "lines": 55,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsHandoffNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsMonitorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsMonitorNode.tsx",
      "filename": "StrandsMonitorNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 2964,
      "lines": 91,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsMonitorNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/GuardrailNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/GuardrailNode.tsx",
      "filename": "GuardrailNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 2035,
      "lines": 60,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "GuardrailNode"
      ],
      "components": [
        "GuardrailNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernAgentNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernAgentNode.tsx",
      "filename": "ModernAgentNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 8495,
      "lines": 182,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/dialog"
      ],
      "exports": [
        "ModernAgentNode"
      ],
      "components": [
        "ModernAgentNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernAggregatorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernAggregatorNode.tsx",
      "filename": "ModernAggregatorNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 7224,
      "lines": 192,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernAggregatorNode"
      ],
      "components": [
        "ModernAggregatorNode",
        "ModernAggregatorNode"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/nodes/CustomAgentNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/CustomAgentNode.tsx",
      "filename": "CustomAgentNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 1947,
      "lines": 55,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "CustomAgentNode"
      ],
      "components": [
        "CustomAgentNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsToolNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsToolNode.tsx",
      "filename": "StrandsToolNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 8213,
      "lines": 242,
      "imports": [
        "react",
        "@xyflow/react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsToolNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/RiskNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/RiskNode.tsx",
      "filename": "RiskNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 3106,
      "lines": 81,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "RiskNode"
      ],
      "components": [
        "RiskNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernMCPToolNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernMCPToolNode.tsx",
      "filename": "ModernMCPToolNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 6323,
      "lines": 169,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/dialog"
      ],
      "exports": [
        "ModernMCPToolNode"
      ],
      "components": [
        "ModernMCPToolNode",
        "ModernMCPToolNode"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/nodes/MemoryNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/MemoryNode.tsx",
      "filename": "MemoryNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 1548,
      "lines": 45,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "MemoryNode"
      ],
      "components": [
        "MemoryNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsDecisionNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsDecisionNode.tsx",
      "filename": "StrandsDecisionNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 7130,
      "lines": 211,
      "imports": [
        "react",
        "@xyflow/react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsDecisionNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "className=\"absolute right-2 top-1/4 transform -translate-y-1/2 text-xs text-green-400 font-medium\"",
        "className=\"absolute right-2 top-3/4 transform -translate-y-1/2 text-xs text-red-400 font-medium\"",
        "className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 bg-purple-600 text-white text-xs px-2 py-1 rounded-full animate-pulse\"",
        "className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 bg-red-600 text-white text-xs px-2 py-1 rounded max-w-40 truncate\""
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/ComplianceNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ComplianceNode.tsx",
      "filename": "ComplianceNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 2907,
      "lines": 73,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ComplianceNode"
      ],
      "components": [
        "ComplianceNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsHumanNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsHumanNode.tsx",
      "filename": "StrandsHumanNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 2993,
      "lines": 91,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsHumanNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsGuardrailNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsGuardrailNode.tsx",
      "filename": "StrandsGuardrailNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 3551,
      "lines": 108,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsGuardrailNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "className=\"absolute right-2 top-1/4 transform -translate-y-1/2 text-xs text-green-400 font-medium\"",
        "className=\"absolute right-2 top-3/4 transform -translate-y-1/2 text-xs text-red-400 font-medium\""
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/DecisionNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/DecisionNode.tsx",
      "filename": "DecisionNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 1506,
      "lines": 48,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "DecisionNode"
      ],
      "components": [
        "DecisionNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsAgentNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsAgentNode.tsx",
      "filename": "StrandsAgentNode.tsx",
      "directory": "src/components/MultiAgentWorkspace/nodes",
      "extension": ".tsx",
      "size": 7253,
      "lines": 212,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "memo"
      ],
      "components": [
        "StrandsAgentNode"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/engines/WorkflowEngine.ts": {
      "file_path": "src/components/MultiAgentWorkspace/engines/WorkflowEngine.ts",
      "filename": "WorkflowEngine.ts",
      "directory": "src/components/MultiAgentWorkspace/engines",
      "extension": ".ts",
      "size": 9747,
      "lines": 345,
      "imports": [
        "../types/orchestration"
      ],
      "exports": [
        "WorkflowEngine",
        "workflowEngine"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/components/MultiAgentWorkspace/edges/ModernTaskHandoffEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/ModernTaskHandoffEdge.tsx",
      "filename": "ModernTaskHandoffEdge.tsx",
      "directory": "src/components/MultiAgentWorkspace/edges",
      "extension": ".tsx",
      "size": 1324,
      "lines": 54,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernTaskHandoffEdge"
      ],
      "components": [
        "ModernTaskHandoffEdge"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/edges/StrandsEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/StrandsEdge.tsx",
      "filename": "StrandsEdge.tsx",
      "directory": "src/components/MultiAgentWorkspace/edges",
      "extension": ".tsx",
      "size": 1300,
      "lines": 59,
      "imports": [
        "react",
        "@xyflow/react"
      ],
      "exports": [
        "StrandsEdge"
      ],
      "components": [
        "StrandsEdge"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/edges/EnhancedConnectionEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/EnhancedConnectionEdge.tsx",
      "filename": "EnhancedConnectionEdge.tsx",
      "directory": "src/components/MultiAgentWorkspace/edges",
      "extension": ".tsx",
      "size": 8414,
      "lines": 269,
      "imports": [
        "react",
        "@xyflow/react",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "EnhancedConnectionEdge"
      ],
      "components": [
        "EnhancedConnectionEdge",
        "EnhancedConnectionEdge"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEnter"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "className=\"absolute -top-6 left-1/2 transform -translate-x-1/2\"",
        "className=\"absolute top-8 left-1/2 transform -translate-x-1/2 z-50\""
      ],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/MultiAgentWorkspace/edges/AnimatedStrandsEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/AnimatedStrandsEdge.tsx",
      "filename": "AnimatedStrandsEdge.tsx",
      "directory": "src/components/MultiAgentWorkspace/edges",
      "extension": ".tsx",
      "size": 1261,
      "lines": 65,
      "imports": [
        "react",
        "@xyflow/react"
      ],
      "exports": [
        "AnimatedStrandsEdge"
      ],
      "components": [
        "AnimatedStrandsEdge"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/MultiAgentWorkspace/edges/TaskHandoffEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/TaskHandoffEdge.tsx",
      "filename": "TaskHandoffEdge.tsx",
      "directory": "src/components/MultiAgentWorkspace/edges",
      "extension": ".tsx",
      "size": 1279,
      "lines": 54,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "TaskHandoffEdge"
      ],
      "components": [
        "TaskHandoffEdge"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/components/AgentWorkspace/RequestAccessDialog.tsx": {
      "file_path": "src/components/AgentWorkspace/RequestAccessDialog.tsx",
      "filename": "RequestAccessDialog.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 3136,
      "lines": 105,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/hooks/use-toast"
      ],
      "exports": [
        "RequestAccessDialog"
      ],
      "components": [
        "RequestAccessDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "form",
        "Dialog",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "10 functionality indicators, 1 components"
    },
    "src/components/AgentWorkspace/PropertiesPanel.tsx": {
      "file_path": "src/components/AgentWorkspace/PropertiesPanel.tsx",
      "filename": "PropertiesPanel.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 6688,
      "lines": 157,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "PropertiesPanel"
      ],
      "components": [
        "PropertiesPanel"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/components/AgentWorkspace/WorkspaceHeader.tsx": {
      "file_path": "src/components/AgentWorkspace/WorkspaceHeader.tsx",
      "filename": "WorkspaceHeader.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 1640,
      "lines": 56,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/hooks/use-toast"
      ],
      "exports": [
        "WorkspaceHeader"
      ],
      "components": [
        "WorkspaceHeader",
        "WorkspaceHeader"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/ChatSuggestion.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatSuggestion.tsx",
      "filename": "ChatSuggestion.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 676,
      "lines": 24,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ChatSuggestion"
      ],
      "components": [
        "ChatSuggestion",
        "ChatSuggestion"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/VoiceAnalyticsHeader.tsx": {
      "file_path": "src/components/AgentWorkspace/VoiceAnalyticsHeader.tsx",
      "filename": "VoiceAnalyticsHeader.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 2586,
      "lines": 59,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "VoiceAnalyticsHeader"
      ],
      "components": [
        "VoiceAnalyticsHeader",
        "VoiceAnalyticsHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/WorkspaceCanvas.tsx": {
      "file_path": "src/components/AgentWorkspace/WorkspaceCanvas.tsx",
      "filename": "WorkspaceCanvas.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 2208,
      "lines": 82,
      "imports": [
        "react",
        "./ChatMessageList",
        "./ChatInputForm",
        "./EmptyChatState",
        "./AccessRequired",
        "./hooks/useLangChainKey",
        "./RagDemo"
      ],
      "exports": [
        "WorkspaceCanvas"
      ],
      "components": [
        "WorkspaceCanvas",
        "WorkspaceCanvas"
      ],
      "hooks": [
        "useLangChainKey",
        "useState",
        "useLangChain"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/ChatInputForm.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatInputForm.tsx",
      "filename": "ChatInputForm.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 3637,
      "lines": 111,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/textarea",
        "@/components/ui/button",
        "@/lib/utils",
        "./LangChainToggle",
        "./ApiKeyInput"
      ],
      "exports": [
        "ChatInputForm"
      ],
      "components": [
        "ChatInputForm",
        "ChatInputForm"
      ],
      "hooks": [
        "useRef",
        "useLangChain"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "form",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/RagDemo.tsx": {
      "file_path": "src/components/AgentWorkspace/RagDemo.tsx",
      "filename": "RagDemo.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 8563,
      "lines": 201,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "@/hooks/useRagWorkflow",
        "@/components/ui/skeleton",
        "@/hooks/useSupabaseApiKey",
        "sonner",
        "react-router-dom"
      ],
      "exports": [
        "RagDemo"
      ],
      "components": [
        "RagDemo",
        "RagDemo"
      ],
      "hooks": [
        "useRagWorkflow",
        "useState",
        "useSupabaseApiKey",
        "useEffect"
      ],
      "routes": [
        "/settings"
      ],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/ProjectSelection.tsx": {
      "file_path": "src/components/AgentWorkspace/ProjectSelection.tsx",
      "filename": "ProjectSelection.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 1923,
      "lines": 50,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/scroll-area",
        "react-router-dom"
      ],
      "exports": [
        "ProjectSelection"
      ],
      "components": [
        "ProjectSelection",
        "ProjectSelection"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/WorkspaceToolbar.tsx": {
      "file_path": "src/components/AgentWorkspace/WorkspaceToolbar.tsx",
      "filename": "WorkspaceToolbar.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 2457,
      "lines": 80,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/separator",
        "@/lib/utils",
        "@/hooks/use-toast"
      ],
      "exports": [
        "WorkspaceToolbar"
      ],
      "components": [
        "WorkspaceToolbar"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/components/AgentWorkspace/AgentPalette.tsx": {
      "file_path": "src/components/AgentWorkspace/AgentPalette.tsx",
      "filename": "AgentPalette.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 3710,
      "lines": 80,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/input",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "AgentPalette"
      ],
      "components": [
        "AgentPalette",
        "AgentPalette"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/ChatReasoningOutput.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatReasoningOutput.tsx",
      "filename": "ChatReasoningOutput.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 2213,
      "lines": 57,
      "imports": [
        "react",
        "./types"
      ],
      "exports": [
        "interface",
        "ChatReasoningOutput"
      ],
      "components": [
        "ChatReasoningOutput",
        "ChatReasoningOutput"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "http://www.w3.org/2000/svg"
      ],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/types.ts": {
      "file_path": "src/components/AgentWorkspace/types.ts",
      "filename": "types.ts",
      "directory": "src/components/AgentWorkspace",
      "extension": ".ts",
      "size": 705,
      "lines": 39,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/LangChainToggle.tsx": {
      "file_path": "src/components/AgentWorkspace/LangChainToggle.tsx",
      "filename": "LangChainToggle.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 920,
      "lines": 34,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [
        "LangChainToggle"
      ],
      "components": [
        "LangChainToggle",
        "LangChainToggle"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/AccessRequired.tsx": {
      "file_path": "src/components/AgentWorkspace/AccessRequired.tsx",
      "filename": "AccessRequired.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 1114,
      "lines": 38,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "interface",
        "AccessRequired"
      ],
      "components": [
        "AccessRequired",
        "AccessRequired"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/ApiKeyInput.tsx": {
      "file_path": "src/components/AgentWorkspace/ApiKeyInput.tsx",
      "filename": "ApiKeyInput.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 2852,
      "lines": 96,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "lucide-react"
      ],
      "exports": [
        "ApiKeyInput"
      ],
      "components": [
        "ApiKeyInput",
        "ApiKeyInput"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Input",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/ChatMessageList.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatMessageList.tsx",
      "filename": "ChatMessageList.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 754,
      "lines": 31,
      "imports": [
        "react",
        "./ChatMessage",
        "./ChatReasoningOutput"
      ],
      "exports": [
        "interface",
        "ChatMessageList"
      ],
      "components": [
        "ChatMessageList",
        "ChatMessageList"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/index.ts": {
      "file_path": "src/components/AgentWorkspace/index.ts",
      "filename": "index.ts",
      "directory": "src/components/AgentWorkspace",
      "extension": ".ts",
      "size": 864,
      "lines": 17,
      "imports": [],
      "exports": [
        "WorkspaceHeader ",
        "WorkspaceCanvas ",
        "AgentPalette ",
        "WorkspaceToolbar ",
        "PropertiesPanel ",
        "RequestAccessDialog ",
        "ChatReasoningOutput ",
        "VoiceAnalyticsHeader ",
        "useConversation ",
        "useSuggestedPrompts ",
        "useMessageReasoning ",
        "useLangChainKey ",
        "useVoiceProjectData ",
        "ApiKeyInput ",
        "LangChainToggle "
      ],
      "components": [],
      "hooks": [
        "useLangChainKey",
        "useVoiceProjectData",
        "useMessageReasoning",
        "useConversation",
        "useSuggestedPrompts"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/components/AgentWorkspace/EmptyChatState.tsx": {
      "file_path": "src/components/AgentWorkspace/EmptyChatState.tsx",
      "filename": "EmptyChatState.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 3702,
      "lines": 84,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "EmptyChatState"
      ],
      "components": [
        "EmptyChatState",
        "EmptyChatState"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/AgentWorkspace/ChatMessage.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatMessage.tsx",
      "filename": "ChatMessage.tsx",
      "directory": "src/components/AgentWorkspace",
      "extension": ".tsx",
      "size": 2980,
      "lines": 102,
      "imports": [
        "react",
        "lucide-react",
        "./types",
        "@/components/ui/button",
        "./ChatReasoningOutput",
        "./hooks/useMessageReasoning"
      ],
      "exports": [
        "ChatMessage"
      ],
      "components": [
        "ChatMessage",
        "MessageUserBadge",
        "MessageAssistantBadge",
        "ReasoningToggleButton",
        "ChatMessage"
      ],
      "hooks": [
        "useMessageReasoning",
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 5 components"
    },
    "src/components/AgentWorkspace/langchain/api.ts": {
      "file_path": "src/components/AgentWorkspace/langchain/api.ts",
      "filename": "api.ts",
      "directory": "src/components/AgentWorkspace/langchain",
      "extension": ".ts",
      "size": 1854,
      "lines": 67,
      "imports": [
        "@langchain/openai",
        "@langchain/core/prompts",
        "@langchain/core/output_parsers"
      ],
      "exports": [
        "createChatModel",
        "generateResponseWithLangChain"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 0 components"
    },
    "src/components/AgentWorkspace/hooks/useMessageReasoning.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useMessageReasoning.ts",
      "filename": "useMessageReasoning.ts",
      "directory": "src/components/AgentWorkspace/hooks",
      "extension": ".ts",
      "size": 3406,
      "lines": 74,
      "imports": [
        "../types"
      ],
      "exports": [
        "useMessageReasoning"
      ],
      "components": [],
      "hooks": [
        "useMessageReasoning"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/hooks/useConversation.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useConversation.ts",
      "filename": "useConversation.ts",
      "directory": "src/components/AgentWorkspace/hooks",
      "extension": ".ts",
      "size": 4412,
      "lines": 139,
      "imports": [
        "react",
        "@/hooks/use-toast",
        "@/components/DecisionPath/utils/nodeUtils",
        "../types",
        "../langchain/api"
      ],
      "exports": [
        "useConversation"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useEffect",
        "useConversation",
        "useToast",
        "useLangChain"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 0 components"
    },
    "src/components/AgentWorkspace/hooks/useSuggestedPrompts.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useSuggestedPrompts.ts",
      "filename": "useSuggestedPrompts.ts",
      "directory": "src/components/AgentWorkspace/hooks",
      "extension": ".ts",
      "size": 1545,
      "lines": 44,
      "imports": [
        "react"
      ],
      "exports": [
        "useSuggestedPrompts"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useSuggestedPrompts",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/hooks/useVoiceProjectData.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useVoiceProjectData.ts",
      "filename": "useVoiceProjectData.ts",
      "directory": "src/components/AgentWorkspace/hooks",
      "extension": ".ts",
      "size": 2194,
      "lines": 67,
      "imports": [
        "react",
        "@/components/CommandCentre/ProjectData"
      ],
      "exports": [
        "useVoiceProjectData"
      ],
      "components": [],
      "hooks": [
        "useMemo",
        "useVoiceProjectData"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/hooks/useLangChainKey.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useLangChainKey.ts",
      "filename": "useLangChainKey.ts",
      "directory": "src/components/AgentWorkspace/hooks",
      "extension": ".ts",
      "size": 251,
      "lines": 17,
      "imports": [
        "@/hooks/useSupabaseApiKey"
      ],
      "exports": [
        "useLangChainKey"
      ],
      "components": [],
      "hooks": [
        "useLangChainKey",
        "useSupabaseApiKey"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/components/Documents/RAGDebugPanel.tsx": {
      "file_path": "src/components/Documents/RAGDebugPanel.tsx",
      "filename": "RAGDebugPanel.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 9277,
      "lines": 248,
      "imports": [
        "react",
        "../ui/card",
        "../ui/button",
        "../ui/badge",
        "../../lib/services/DocumentRAGService"
      ],
      "exports": [
        "RAGDebugPanel"
      ],
      "components": [
        "RAGDebugPanel",
        "RAGDebugPanel"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/health",
        "http://localhost:11434/api/tags",
        "http://localhost:5002/health",
        "http://localhost:11434/api/tags",
        "/api/tags"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/Documents/DocumentAgentCreator.tsx": {
      "file_path": "src/components/Documents/DocumentAgentCreator.tsx",
      "filename": "DocumentAgentCreator.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 46249,
      "lines": 1059,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/textarea",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/CommandCentre/CreateAgent/steps/EnhancedCapabilities",
        "@/components/CommandCentre/CreateAgent/steps/EnhancedGuardrails"
      ],
      "exports": [
        "DocumentAgentCreator"
      ],
      "components": [
        "DocumentAgentCreator",
        "DocumentAgentCreator"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/document-agents",
        "http://localhost:5002/api/document-agents",
        "/api/document"
      ],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "8 functionality indicators, 2 components"
    },
    "src/components/Documents/DocumentProcessingLogs.tsx": {
      "file_path": "src/components/Documents/DocumentProcessingLogs.tsx",
      "filename": "DocumentProcessingLogs.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 8565,
      "lines": 242,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/hooks/useProcessingLogs"
      ],
      "exports": [
        "DocumentProcessingLogs"
      ],
      "components": [
        "DocumentProcessingLogs",
        "DocumentProcessingLogs"
      ],
      "hooks": [
        "useProcessingLogs",
        "useState",
        "useEffect",
        "useRef",
        "useCallback"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 2 components"
    },
    "src/components/Documents/DocumentUploader.tsx": {
      "file_path": "src/components/Documents/DocumentUploader.tsx",
      "filename": "DocumentUploader.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 6800,
      "lines": 201,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/progress"
      ],
      "exports": [
        "DocumentUploader"
      ],
      "components": [
        "DocumentUploader",
        "DocumentUploader"
      ],
      "hooks": [
        "useState",
        "useCallback"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "input",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "9 functionality indicators, 2 components"
    },
    "src/components/Documents/DocumentLibrary.tsx": {
      "file_path": "src/components/Documents/DocumentLibrary.tsx",
      "filename": "DocumentLibrary.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 8359,
      "lines": 227,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/checkbox"
      ],
      "exports": [
        "DocumentLibrary"
      ],
      "components": [
        "DocumentLibrary",
        "DocumentLibrary"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/Documents/DocumentAgentManager.tsx": {
      "file_path": "src/components/Documents/DocumentAgentManager.tsx",
      "filename": "DocumentAgentManager.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 13829,
      "lines": 361,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/dialog",
        "@/components/ui/alert"
      ],
      "exports": [
        "DocumentAgentManager"
      ],
      "components": [
        "DocumentAgentManager",
        "AgentCard",
        "DocumentAgentManager"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/document-agents/${agent.id}`,",
        "/api/document"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Button",
        "Dialog",
        "Dialog",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 3 components"
    },
    "src/components/Documents/DocumentChat.tsx": {
      "file_path": "src/components/Documents/DocumentChat.tsx",
      "filename": "DocumentChat.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 15431,
      "lines": 395,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select"
      ],
      "exports": [
        "DocumentChat"
      ],
      "components": [
        "DocumentChat",
        "DocumentChat"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Input",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/Documents/AgentDocumentChat.tsx": {
      "file_path": "src/components/Documents/AgentDocumentChat.tsx",
      "filename": "AgentDocumentChat.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 25130,
      "lines": 665,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select",
        "./DocumentAgentCreator",
        "./DocumentAgentManager"
      ],
      "exports": [
        "AgentDocumentChat"
      ],
      "components": [
        "AgentDocumentChat",
        "AgentDocumentChat"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/rag/agent-query",
        "http://localhost:5002/api/agents/document-ready?model_filter=${encodeURIComponent(modelFilter)}`",
        "http://localhost:5002/api/agents/document-ready",
        "http://localhost:5002/api/agents/document-ready?model_filter=${encodeURIComponent(modelFilter)}`",
        "http://localhost:5002/api/agents/document-ready",
        "http://localhost:5002/api/rag/agent-query",
        "/api/agents/document",
        "/api/agents/document",
        "/api/agents/document",
        "/api/agents/document",
        "/api/rag/agent"
      ],
      "ui_elements": [
        "Button",
        "Button",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Card",
        "Input",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/Documents/AgentSuggestions.tsx": {
      "file_path": "src/components/Documents/AgentSuggestions.tsx",
      "filename": "AgentSuggestions.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 7804,
      "lines": 210,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "AgentSuggestions"
      ],
      "components": [
        "AgentSuggestions",
        "AgentSuggestions"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/Documents/DocumentMetadataPanel.tsx": {
      "file_path": "src/components/Documents/DocumentMetadataPanel.tsx",
      "filename": "DocumentMetadataPanel.tsx",
      "directory": "src/components/Documents",
      "extension": ".tsx",
      "size": 11642,
      "lines": 299,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "DocumentMetadataPanel"
      ],
      "components": [
        "DocumentMetadataPanel",
        "DocumentMetadataPanel"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/rag/documents",
        "http://localhost:5002/api/rag/status",
        "http://localhost:5002/api/rag/documents",
        "http://localhost:5002/api/rag/status",
        "http://localhost:5002/api/rag/documents/${documentId}/chunks`);",
        "/api/rag/documents",
        "/api/rag/status",
        "/api/rag/documents/"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/Ollama/OllamaStatus.tsx": {
      "file_path": "src/components/Ollama/OllamaStatus.tsx",
      "filename": "OllamaStatus.tsx",
      "directory": "src/components/Ollama",
      "extension": ".tsx",
      "size": 7573,
      "lines": 225,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "OllamaStatus"
      ],
      "components": [
        "OllamaStatus",
        "OllamaStatus"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:11434",
        "https://ollama.ai"
      ],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 2 components"
    },
    "src/components/Ollama/OllamaModelsDialog.tsx": {
      "file_path": "src/components/Ollama/OllamaModelsDialog.tsx",
      "filename": "OllamaModelsDialog.tsx",
      "directory": "src/components/Ollama",
      "extension": ".tsx",
      "size": 1628,
      "lines": 47,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./OllamaModelSelector",
        "./OllamaStatus"
      ],
      "exports": [
        "OllamaModelsDialog"
      ],
      "components": [
        "OllamaModelsDialog",
        "OllamaModelsDialog"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/components/Ollama/OllamaTerminalDialog.tsx": {
      "file_path": "src/components/Ollama/OllamaTerminalDialog.tsx",
      "filename": "OllamaTerminalDialog.tsx",
      "directory": "src/components/Ollama",
      "extension": ".tsx",
      "size": 785,
      "lines": 26,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./OllamaTerminal"
      ],
      "exports": [
        "OllamaTerminalDialog"
      ],
      "components": [
        "OllamaTerminalDialog",
        "OllamaTerminalDialog"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Terminal",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/Ollama/index.ts": {
      "file_path": "src/components/Ollama/index.ts",
      "filename": "index.ts",
      "directory": "src/components/Ollama",
      "extension": ".ts",
      "size": 713,
      "lines": 23,
      "imports": [],
      "exports": [
        "types",
        "type",
        "OllamaTerminal ",
        "OllamaModelSelector ",
        "OllamaStatus ",
        "OllamaTerminalDialog ",
        "OllamaModelsDialog ",
        "ollamaService, OllamaUtils "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Ollama/OllamaModelSelector.tsx": {
      "file_path": "src/components/Ollama/OllamaModelSelector.tsx",
      "filename": "OllamaModelSelector.tsx",
      "directory": "src/components/Ollama",
      "extension": ".tsx",
      "size": 15932,
      "lines": 443,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/lib/services/OllamaService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaModelSelector"
      ],
      "components": [
        "OllamaModelSelector",
        "OllamaModelSelector"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "https://ollama.ai"
      ],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button",
        "input",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/components/Ollama/OllamaTerminal.tsx": {
      "file_path": "src/components/Ollama/OllamaTerminal.tsx",
      "filename": "OllamaTerminal.tsx",
      "directory": "src/components/Ollama",
      "extension": ".tsx",
      "size": 12139,
      "lines": 367,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/services/OllamaService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaTerminal"
      ],
      "components": [
        "OllamaTerminal",
        "OllamaTerminal"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useRef",
        "useToast",
        "useCallback"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "button",
        "input",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Ollama Terminal",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "9 functionality indicators, 2 components"
    },
    "src/components/SystemFlow/AgentOSLogicalFlow.tsx": {
      "file_path": "src/components/SystemFlow/AgentOSLogicalFlow.tsx",
      "filename": "AgentOSLogicalFlow.tsx",
      "directory": "src/components/SystemFlow",
      "extension": ".tsx",
      "size": 2432,
      "lines": 63,
      "imports": [
        "react",
        "../ui/card"
      ],
      "exports": [
        "AgentOSLogicalFlow"
      ],
      "components": [
        "AgentOSLogicalFlow",
        "AgentOSLogicalFlow"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "AgentOS Architecture Blueprint",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/SystemFlow/AgentOSArchitectureDesign.tsx": {
      "file_path": "src/components/SystemFlow/AgentOSArchitectureDesign.tsx",
      "filename": "AgentOSArchitectureDesign.tsx",
      "directory": "src/components/SystemFlow",
      "extension": ".tsx",
      "size": 3490,
      "lines": 86,
      "imports": [
        "react",
        "../ui/card"
      ],
      "exports": [
        "AgentOSArchitectureDesign"
      ],
      "components": [
        "AgentOSArchitectureDesign",
        "AgentOSArchitectureDesign"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "AgentOS Architecture Blueprint",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/ViewSelectorTabs.tsx": {
      "file_path": "src/components/CombinedVisualization/ViewSelectorTabs.tsx",
      "filename": "ViewSelectorTabs.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 2152,
      "lines": 69,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ViewSelectorTabs"
      ],
      "components": [
        "ViewSelectorTabs",
        "ViewSelectorTabs"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/CombinedVisualizationGraph.tsx": {
      "file_path": "src/components/CombinedVisualization/CombinedVisualizationGraph.tsx",
      "filename": "CombinedVisualizationGraph.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 5289,
      "lines": 171,
      "imports": [
        "react",
        "../DecisionPath/ArrowMarkers",
        "./GraphLegend",
        "./GraphHeader",
        "../DecisionPath/utils/pathUtils",
        "./ViewSelectorTabs",
        "./DecisionPathRenderer",
        "./DataLineageRenderer",
        "./NodesRenderer",
        "../DecisionPath/types"
      ],
      "exports": [
        "interface",
        "CombinedVisualizationGraph"
      ],
      "components": [
        "CombinedVisualizationGraph",
        "CombinedVisualizationGraph"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph",
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/GraphLegend.tsx": {
      "file_path": "src/components/CombinedVisualization/GraphLegend.tsx",
      "filename": "GraphLegend.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 2225,
      "lines": 68,
      "imports": [
        "react"
      ],
      "exports": [
        "GraphLegend"
      ],
      "components": [
        "GraphLegend",
        "GraphLegend"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/NodesRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/NodesRenderer.tsx",
      "filename": "NodesRenderer.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 2254,
      "lines": 77,
      "imports": [
        "react",
        "../DecisionPath/GraphNode",
        "../DecisionPath/types",
        "./IconRenderer",
        "lucide-react"
      ],
      "exports": [
        "NodesRenderer"
      ],
      "components": [
        "NodesRenderer",
        "NodesRenderer"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEvent",
        "useEnter"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/DecisionPathRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/DecisionPathRenderer.tsx",
      "filename": "DecisionPathRenderer.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 2104,
      "lines": 62,
      "imports": [
        "react",
        "../DecisionPath/types",
        "../DecisionPath/utils/pathUtils"
      ],
      "exports": [
        "DecisionPathRenderer"
      ],
      "components": [
        "DecisionPathRenderer",
        "DecisionPathRenderer"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/GraphHeader.tsx": {
      "file_path": "src/components/CombinedVisualization/GraphHeader.tsx",
      "filename": "GraphHeader.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 2171,
      "lines": 49,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "GraphHeader"
      ],
      "components": [
        "GraphHeader",
        "GraphHeader"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Graph"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/IconRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/IconRenderer.tsx",
      "filename": "IconRenderer.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 1641,
      "lines": 51,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "IconRenderer"
      ],
      "components": [
        "IconRenderer",
        "IconRenderer"
      ],
      "hooks": [
        "useDown",
        "useUp",
        "useEvent"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Chart"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/DataLineageRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/DataLineageRenderer.tsx",
      "filename": "DataLineageRenderer.tsx",
      "directory": "src/components/CombinedVisualization",
      "extension": ".tsx",
      "size": 2042,
      "lines": 66,
      "imports": [
        "react",
        "../DecisionPath/types",
        "../DecisionPath/utils/pathUtils"
      ],
      "exports": [
        "DataLineageRenderer"
      ],
      "components": [
        "DataLineageRenderer",
        "DataLineageRenderer"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/CombinedVisualization/index.ts": {
      "file_path": "src/components/CombinedVisualization/index.ts",
      "filename": "index.ts",
      "directory": "src/components/CombinedVisualization",
      "extension": ".ts",
      "size": 351,
      "lines": 8,
      "imports": [],
      "exports": [
        "CombinedVisualizationGraph ",
        "ViewSelectorTabs ",
        "IconRenderer ",
        "DecisionPathRenderer ",
        "DataLineageRenderer ",
        "NodesRenderer "
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 8 lines"
    },
    "src/components/ArchitectureDesign/InteractiveAgentFlowDiagram.tsx": {
      "file_path": "src/components/ArchitectureDesign/InteractiveAgentFlowDiagram.tsx",
      "filename": "InteractiveAgentFlowDiagram.tsx",
      "directory": "src/components/ArchitectureDesign",
      "extension": ".tsx",
      "size": 7697,
      "lines": 246,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "InteractiveAgentFlowDiagram"
      ],
      "components": [
        "InteractiveAgentFlowDiagram",
        "InteractiveAgentFlowDiagram"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Architecture Design",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/components/ArchitectureDesign/TechnicalBuildingBlocks.tsx": {
      "file_path": "src/components/ArchitectureDesign/TechnicalBuildingBlocks.tsx",
      "filename": "TechnicalBuildingBlocks.tsx",
      "directory": "src/components/ArchitectureDesign",
      "extension": ".tsx",
      "size": 4458,
      "lines": 135,
      "imports": [
        "react",
        "../ui/card",
        "../ui/button",
        "../ui/badge"
      ],
      "exports": [
        "TechnicalBuildingBlocks"
      ],
      "components": [
        "TechnicalBuildingBlocks",
        "TechnicalBuildingBlocks"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Architecture Design",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/ArchitectureDesign/ComponentLibrary.tsx": {
      "file_path": "src/components/ArchitectureDesign/ComponentLibrary.tsx",
      "filename": "ComponentLibrary.tsx",
      "directory": "src/components/ArchitectureDesign",
      "extension": ".tsx",
      "size": 5942,
      "lines": 177,
      "imports": [
        "react",
        "../ui/card",
        "../ui/button",
        "../ui/badge",
        "../ui/input",
        "lucide-react"
      ],
      "exports": [
        "ComponentLibrary"
      ],
      "components": [
        "ComponentLibrary",
        "ComponentLibrary"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Architecture Design",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/components/ArchitectureDesign/ArchitectureDesignDashboard.tsx": {
      "file_path": "src/components/ArchitectureDesign/ArchitectureDesignDashboard.tsx",
      "filename": "ArchitectureDesignDashboard.tsx",
      "directory": "src/components/ArchitectureDesign",
      "extension": ".tsx",
      "size": 3694,
      "lines": 100,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "./InteractiveAgentFlowDiagram",
        "./TechnicalBuildingBlocks",
        "./ComponentLibrary",
        "../SystemFlow/AgentOSArchitectureDesign"
      ],
      "exports": [
        "ArchitectureDesignDashboard"
      ],
      "components": [
        "ArchitectureDesignDashboard",
        "ArchitectureDesignDashboard"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 2 components"
    },
    "src/hooks/useRealStrandsAgents.ts": {
      "file_path": "src/hooks/useRealStrandsAgents.ts",
      "filename": "useRealStrandsAgents.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 4336,
      "lines": 146,
      "imports": [
        "react",
        "./useOllamaModels"
      ],
      "exports": [
        "useRealStrandsAgents"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useRealStrandsAgents",
        "useOllamaModels",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/hooks/useUtilityConfiguration.ts": {
      "file_path": "src/hooks/useUtilityConfiguration.ts",
      "filename": "useUtilityConfiguration.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 4033,
      "lines": 111,
      "imports": [
        "react",
        "@/types/WorkflowUtilityTypes"
      ],
      "exports": [
        "useUtilityConfiguration"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useState",
        "useUtilityConfiguration"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/hooks/use-toast.tsx": {
      "file_path": "src/hooks/use-toast.tsx",
      "filename": "use-toast.tsx",
      "directory": "src/hooks",
      "extension": ".tsx",
      "size": 71,
      "lines": 4,
      "imports": [],
      "exports": [
        "everything"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/hooks/use-mobile.tsx": {
      "file_path": "src/hooks/use-mobile.tsx",
      "filename": "use-mobile.tsx",
      "directory": "src/hooks",
      "extension": ".tsx",
      "size": 565,
      "lines": 20,
      "imports": [
        "react"
      ],
      "exports": [
        "useIsMobile"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useIsMobile",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/useOllamaAgentsForPalette.ts": {
      "file_path": "src/hooks/useOllamaAgentsForPalette.ts",
      "filename": "useOllamaAgentsForPalette.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 6056,
      "lines": 163,
      "imports": [
        "react",
        "@/lib/services/OllamaAgentService",
        "@/config/ollamaModels"
      ],
      "exports": [
        "interface",
        "useOllamaAgentsForPalette"
      ],
      "components": [],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/hooks/useStrandsUtilitiesStatic.ts": {
      "file_path": "src/hooks/useStrandsUtilitiesStatic.ts",
      "filename": "useStrandsUtilitiesStatic.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 3270,
      "lines": 131,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useStrandsUtilities"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useState",
        "useStrandsUtilities"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/useStrandsOllamaAgents.ts": {
      "file_path": "src/hooks/useStrandsOllamaAgents.ts",
      "filename": "useStrandsOllamaAgents.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 5968,
      "lines": 189,
      "imports": [
        "react",
        "@/lib/services/StrandsOllamaAgentService",
        "./useOllamaModels"
      ],
      "exports": [
        "useStrandsOllamaAgents"
      ],
      "components": [],
      "hooks": [
        "useStrandsOllamaAgents",
        "useState",
        "useOllamaModels",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/hooks/useOllamaModels.ts": {
      "file_path": "src/hooks/useOllamaModels.ts",
      "filename": "useOllamaModels.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 1347,
      "lines": 53,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useOllamaModels"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useOllamaModels",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:11434/api/tags",
        "http://localhost:11434/api/tags",
        "/api/tags"
      ],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "6 functionality indicators, 0 components"
    },
    "src/hooks/useSupabaseApiKey.ts": {
      "file_path": "src/hooks/useSupabaseApiKey.ts",
      "filename": "useSupabaseApiKey.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 3903,
      "lines": 131,
      "imports": [
        "react",
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "interface",
        "useSupabaseApiKey"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useState",
        "useSupabaseApiKey",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "9 functionality indicators, 0 components"
    },
    "src/hooks/useModelProvider.ts": {
      "file_path": "src/hooks/useModelProvider.ts",
      "filename": "useModelProvider.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 4214,
      "lines": 138,
      "imports": [
        "react",
        "@/hooks/useSupabaseApiKey",
        "@/integrations/supabase/client",
        "@/utils/models/modelTypes"
      ],
      "exports": [
        "type",
        "useModelProvider"
      ],
      "components": [],
      "hooks": [
        "useModelProvider",
        "useState",
        "useSupabaseApiKey",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 0 components"
    },
    "src/hooks/useWorkflowExecution.ts": {
      "file_path": "src/hooks/useWorkflowExecution.ts",
      "filename": "useWorkflowExecution.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 7947,
      "lines": 298,
      "imports": [
        "react",
        "@/lib/services/WorkflowExecutionService"
      ],
      "exports": [
        "interface",
        "interface",
        "useWorkflowExecution"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useWorkflowExecution"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 0 components"
    },
    "src/hooks/useRagWorkflow.ts": {
      "file_path": "src/hooks/useRagWorkflow.ts",
      "filename": "useRagWorkflow.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 4892,
      "lines": 156,
      "imports": [
        "react",
        "@/utils/vectorStore",
        "@/hooks/useModelProvider",
        "@/utils/ragService",
        "sonner",
        "@/integrations/supabase/client"
      ],
      "exports": [
        "interface",
        "useRagWorkflow"
      ],
      "components": [],
      "hooks": [
        "useVectorStore",
        "useModelProvider",
        "useState",
        "useRAGService",
        "useRagWorkflow"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 0 components"
    },
    "src/hooks/useStrandsNativeTools.ts": {
      "file_path": "src/hooks/useStrandsNativeTools.ts",
      "filename": "useStrandsNativeTools.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 21109,
      "lines": 723,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useStrandsNativeTools"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useStrandsNativeTools",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "https://tavily.com",
        "https://exa.ai",
        "https://mem0.ai"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/hooks/useProcessingLogs.ts": {
      "file_path": "src/hooks/useProcessingLogs.ts",
      "filename": "useProcessingLogs.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 1996,
      "lines": 79,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useProcessingLogs"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useState",
        "useProcessingLogs",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5052/api/processing-logs",
        "http://localhost:5052/api/processing-logs",
        "http://localhost:5052/api/processing-logs",
        "http://localhost:5052/api/processing-logs",
        "/api/processing",
        "/api/processing"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 0 components"
    },
    "src/hooks/useSupabaseConnection.ts": {
      "file_path": "src/hooks/useSupabaseConnection.ts",
      "filename": "useSupabaseConnection.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 8531,
      "lines": 273,
      "imports": [
        "react",
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "type",
        "interface",
        "interface",
        "useSupabaseConnection"
      ],
      "components": [],
      "hooks": [
        "useSupabaseConnection",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "7 functionality indicators, 0 components"
    },
    "src/hooks/useStrandsUtilities.ts": {
      "file_path": "src/hooks/useStrandsUtilities.ts",
      "filename": "useStrandsUtilities.ts",
      "directory": "src/hooks",
      "extension": ".ts",
      "size": 3192,
      "lines": 120,
      "imports": [
        "react",
        "../lib/frameworks/StrandsSDK"
      ],
      "exports": [
        "interface",
        "useStrandsUtilities"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useStrandsUtilities",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/hooks/toast/toast.ts": {
      "file_path": "src/hooks/toast/toast.ts",
      "filename": "toast.ts",
      "directory": "src/hooks/toast",
      "extension": ".ts",
      "size": 839,
      "lines": 41,
      "imports": [
        "./types",
        "./utils"
      ],
      "exports": [
        "toast",
        "dismissToast"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/utils.ts": {
      "file_path": "src/hooks/toast/utils.ts",
      "filename": "utils.ts",
      "directory": "src/hooks/toast",
      "extension": ".ts",
      "size": 874,
      "lines": 35,
      "imports": [
        "./types"
      ],
      "exports": [
        "generateId",
        "let",
        "setDispatch",
        "toastTimeouts",
        "setToastTimeout"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/use-toast.ts": {
      "file_path": "src/hooks/toast/use-toast.ts",
      "filename": "use-toast.ts",
      "directory": "src/hooks/toast",
      "extension": ".ts",
      "size": 1000,
      "lines": 48,
      "imports": [
        "./types",
        "./context",
        "./utils"
      ],
      "exports": [
        "useToast"
      ],
      "components": [],
      "hooks": [
        "useToast",
        "useToastContext"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/types.ts": {
      "file_path": "src/hooks/toast/types.ts",
      "filename": "types.ts",
      "directory": "src/hooks/toast",
      "extension": ".ts",
      "size": 913,
      "lines": 45,
      "imports": [
        "react",
        "@/components/ui/toast"
      ],
      "exports": [
        "TOAST_LIMIT",
        "TOAST_REMOVE_DELAY",
        "type",
        "actionTypes",
        "type",
        "type",
        "interface"
      ],
      "components": [
        "TOAST_LIMIT",
        "TOAST_REMOVE_DELAY"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/hooks/toast/reducer.ts": {
      "file_path": "src/hooks/toast/reducer.ts",
      "filename": "reducer.ts",
      "directory": "src/hooks/toast",
      "extension": ".ts",
      "size": 1489,
      "lines": 62,
      "imports": [
        "./types",
        "./utils",
        "./types"
      ],
      "exports": [
        "reducer"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/context.tsx": {
      "file_path": "src/hooks/toast/context.tsx",
      "filename": "context.tsx",
      "directory": "src/hooks/toast",
      "extension": ".tsx",
      "size": 1111,
      "lines": 43,
      "imports": [
        "react",
        "./types",
        "./reducer",
        "./utils"
      ],
      "exports": [
        "ToastContext",
        "ToastProvider",
        "useToastContext"
      ],
      "components": [
        "ToastContext",
        "ToastProvider"
      ],
      "hooks": [
        "useContext",
        "useReducer",
        "useToastContext",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 2 components"
    },
    "src/hooks/toast/index.ts": {
      "file_path": "src/hooks/toast/index.ts",
      "filename": "index.ts",
      "directory": "src/hooks/toast",
      "extension": ".ts",
      "size": 184,
      "lines": 6,
      "imports": [],
      "exports": [
        "all",
        "useToast ",
        "toast, dismissToast ",
        "ToastProvider "
      ],
      "components": [],
      "hooks": [
        "useToast"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Hooks",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/lib/utils.ts": {
      "file_path": "src/lib/utils.ts",
      "filename": "utils.ts",
      "directory": "src/lib",
      "extension": ".ts",
      "size": 165,
      "lines": 6,
      "imports": [
        "clsx",
        "tailwind-merge"
      ],
      "exports": [
        "cn"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/lib/apiClient.ts": {
      "file_path": "src/lib/apiClient.ts",
      "filename": "apiClient.ts",
      "directory": "src/lib",
      "extension": ".ts",
      "size": 2588,
      "lines": 112,
      "imports": [
        "../config/appConfig"
      ],
      "exports": [
        "apiClient",
        "apiClient"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "/api/ollama/models",
        "/api/ollama/terminal",
        "/api/ollama/status",
        "/api/rag/ingest",
        "/api/rag/query",
        "/api/rag/documents",
        "/api/rag/status",
        "/api/agents",
        "/api/agents"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/lib/frameworks/StrandsOllamaSDK.ts": {
      "file_path": "src/lib/frameworks/StrandsOllamaSDK.ts",
      "filename": "StrandsOllamaSDK.ts",
      "directory": "src/lib/frameworks",
      "extension": ".ts",
      "size": 19183,
      "lines": 597,
      "imports": [
        "../services/OllamaService",
        "./StrandsSDK"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsOllamaSDK",
        "strandsOllamaSDK"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/lib/frameworks/StrandsSDK.ts": {
      "file_path": "src/lib/frameworks/StrandsSDK.ts",
      "filename": "StrandsSDK.ts",
      "directory": "src/lib/frameworks",
      "extension": ".ts",
      "size": 16881,
      "lines": 508,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsSDK"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "https://github.com/strands-agents/sdk-python"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/lib/frameworks/AgentCoreSDK.ts": {
      "file_path": "src/lib/frameworks/AgentCoreSDK.ts",
      "filename": "AgentCoreSDK.ts",
      "directory": "src/lib/frameworks",
      "extension": ".ts",
      "size": 15865,
      "lines": 583,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "AgentCoreSDK"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "https://github.com/awslabs/amazon-bedrock-agentcore-samples"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/lib/services/RealStrandsService.ts": {
      "file_path": "src/lib/services/RealStrandsService.ts",
      "filename": "RealStrandsService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 7351,
      "lines": 308,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "RealStrandsService",
        "realStrandsService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "/api/strands"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/lib/services/RAGService.ts": {
      "file_path": "src/lib/services/RAGService.ts",
      "filename": "RAGService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 10998,
      "lines": 444,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "RAGService",
        "ragService",
        "RAGUtils"
      ],
      "components": [
        "RAGUtils"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "/api/rag/documents/upload",
        "/api/rag/knowledge-bases",
        "/api/rag/query",
        "/api/rag/generate",
        "/api/rag/documents/upload",
        "/api/rag/knowledge",
        "/api/rag/knowledge",
        "/api/rag/knowledge",
        "/api/rag/query",
        "/api/rag/generate",
        "/api/rag/documents/",
        "/api/rag/knowledge",
        "/api/rag/knowledge"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 1 components"
    },
    "src/lib/services/DocumentRAGService.ts": {
      "file_path": "src/lib/services/DocumentRAGService.ts",
      "filename": "DocumentRAGService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 1226,
      "lines": 50,
      "imports": [
        "../apiClient"
      ],
      "exports": [
        "DocumentRAGService",
        "documentRAGService",
        "documentRAGService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 0 components"
    },
    "src/lib/services/StrandsOllamaAgentService.ts": {
      "file_path": "src/lib/services/StrandsOllamaAgentService.ts",
      "filename": "StrandsOllamaAgentService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 27884,
      "lines": 914,
      "imports": [
        "./OllamaService"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsOllamaAgentService",
        "strandsOllamaAgentService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "/api/strands"
      ],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/lib/services/WorkflowExecutionService.ts": {
      "file_path": "src/lib/services/WorkflowExecutionService.ts",
      "filename": "WorkflowExecutionService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 9412,
      "lines": 346,
      "imports": [
        "../apiClient"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "workflowExecutionService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "/api/agents/register",
        "/api/agents/available",
        "/api/agents/",
        "/api/workflows/create",
        "/api/workflows/execute",
        "/api/workflows/quick",
        "/api/workflows/session/",
        "/api/workflows/session/",
        "/api/workflows/definitions"
      ],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/lib/services/OllamaService.ts": {
      "file_path": "src/lib/services/OllamaService.ts",
      "filename": "OllamaService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 879,
      "lines": 37,
      "imports": [
        "../apiClient"
      ],
      "exports": [
        "OllamaService",
        "ollamaService",
        "ollamaService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 0 components"
    },
    "src/lib/services/StrandsWorkflowOrchestrator.ts": {
      "file_path": "src/lib/services/StrandsWorkflowOrchestrator.ts",
      "filename": "StrandsWorkflowOrchestrator.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 21698,
      "lines": 769,
      "imports": [
        "@xyflow/react",
        "@/hooks/useOllamaAgentsForPalette",
        "@/lib/services/MCPGatewayService"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsWorkflowOrchestrator",
        "interface"
      ],
      "components": [],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useCase"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/lib/services/MCPGatewayService.ts": {
      "file_path": "src/lib/services/MCPGatewayService.ts",
      "filename": "MCPGatewayService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 19873,
      "lines": 630,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "mcpGatewayService",
        "MCPGatewayService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "http://localhost:7860",
        "http://localhost:3001/mcp",
        "https://gateway.aws.agentcore.com/mcp",
        "https://mcp.github.enterprise.com/api"
      ],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "MCP Gateway",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/lib/services/ChatExecutionService.ts": {
      "file_path": "src/lib/services/ChatExecutionService.ts",
      "filename": "ChatExecutionService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 13720,
      "lines": 371,
      "imports": [
        "./StrandsWorkflowOrchestrator",
        "./WorkflowExecutionService"
      ],
      "exports": [
        "interface",
        "ChatExecutionService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "5 functionality indicators, 0 components"
    },
    "src/lib/services/OllamaAgentService.ts": {
      "file_path": "src/lib/services/OllamaAgentService.ts",
      "filename": "OllamaAgentService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 30544,
      "lines": 939,
      "imports": [
        "./OllamaService"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "OllamaAgentService",
        "ollamaAgentService"
      ],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [
        "http://localhost:5052/api/agents/ollama/enhanced",
        "http://localhost:5052/api/agents/ollama/enhanced",
        "http://localhost:5052/api/agents/ollama/enhanced",
        "http://localhost:5052/api/agents/ollama/enhanced",
        "http://localhost:5052/api/agents/ollama/enhanced/${agentId}`,",
        "/api/agents/ollama/enhanced",
        "/api/agents/ollama/enhanced",
        "/api/agents/ollama/enhanced/"
      ],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Agents",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/lib/services/FlexibleChatService.ts": {
      "file_path": "src/lib/services/FlexibleChatService.ts",
      "filename": "FlexibleChatService.ts",
      "directory": "src/lib/services",
      "extension": ".ts",
      "size": 14265,
      "lines": 467,
      "imports": [
        "./OllamaService",
        "./OllamaAgentService",
        "@/hooks/useOllamaAgentsForPalette",
        "@/config/ollamaModels"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "FlexibleChatService"
      ],
      "components": [],
      "hooks": [
        "useOllamaAgentsForPalette"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Infrastructure",
      "subcategory": "Services",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/pages/Settings.tsx": {
      "file_path": "src/pages/Settings.tsx",
      "filename": "Settings.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 13509,
      "lines": 326,
      "imports": [
        "react",
        "../components/ui/card",
        "../components/ui/button",
        "../components/ui/badge",
        "../components/ui/tabs"
      ],
      "exports": [
        "Settings"
      ],
      "components": [
        "Settings"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "input",
        "select",
        "select",
        "select",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "input",
        "input",
        "select",
        "input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "select",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "input",
        "input",
        "input",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "select",
        "select",
        "select",
        "Button",
        "Button"
      ],
      "category": "Infrastructure",
      "subcategory": "Configuration",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/pages/Index.tsx": {
      "file_path": "src/pages/Index.tsx",
      "filename": "Index.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 145,
      "lines": 6,
      "imports": [
        "react",
        "@/components/MainContent"
      ],
      "exports": [
        "Index"
      ],
      "components": [
        "Index"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/Auth.tsx": {
      "file_path": "src/pages/Auth.tsx",
      "filename": "Auth.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 5973,
      "lines": 159,
      "imports": [
        "react",
        "react-router-dom",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "sonner",
        "@/components/ui/alert",
        "lucide-react"
      ],
      "exports": [
        "Auth"
      ],
      "components": [
        "Auth"
      ],
      "hooks": [
        "useState",
        "useNavigate",
        "useEffect"
      ],
      "routes": [
        "/",
        "/",
        "/"
      ],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "form",
        "Input",
        "Input",
        "Button",
        "form",
        "Input",
        "Input",
        "Button",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 1 components"
    },
    "src/pages/SimpleDocumentTest.tsx": {
      "file_path": "src/pages/SimpleDocumentTest.tsx",
      "filename": "SimpleDocumentTest.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 477,
      "lines": 13,
      "imports": [
        "react"
      ],
      "exports": [
        "SimpleDocumentTest"
      ],
      "components": [
        "SimpleDocumentTest",
        "SimpleDocumentTest"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/pages/CommandCentreTest.tsx": {
      "file_path": "src/pages/CommandCentreTest.tsx",
      "filename": "CommandCentreTest.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 1302,
      "lines": 35,
      "imports": [
        "react"
      ],
      "exports": [
        "CommandCentreTest"
      ],
      "components": [
        "CommandCentreTest"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/CustomerValueManagement.tsx": {
      "file_path": "src/pages/CustomerValueManagement.tsx",
      "filename": "CustomerValueManagement.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 7212,
      "lines": 199,
      "imports": [
        "react",
        "../components/ui/card",
        "../components/ui/button",
        "../components/ui/badge",
        "../components/ui/tabs"
      ],
      "exports": [
        "CustomerValueManagement"
      ],
      "components": [
        "CustomerValueManagement"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/pages/CustomerAnalytics.tsx": {
      "file_path": "src/pages/CustomerAnalytics.tsx",
      "filename": "CustomerAnalytics.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 1080,
      "lines": 34,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "CustomerAnalytics"
      ],
      "components": [
        "CustomerAnalytics"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Customer Analytics",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/Agents.tsx": {
      "file_path": "src/pages/Agents.tsx",
      "filename": "Agents.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 1073,
      "lines": 34,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "Agents"
      ],
      "components": [
        "Agents"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/SimpleOllamaAgentDashboard.tsx": {
      "file_path": "src/pages/SimpleOllamaAgentDashboard.tsx",
      "filename": "SimpleOllamaAgentDashboard.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 6907,
      "lines": 190,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "SimpleOllamaAgentDashboard"
      ],
      "components": [
        "SimpleOllamaAgentDashboard",
        "SimpleOllamaAgentDashboard"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/pages/StrandsOllamaAgentDashboard.tsx": {
      "file_path": "src/pages/StrandsOllamaAgentDashboard.tsx",
      "filename": "StrandsOllamaAgentDashboard.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 21794,
      "lines": 488,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/hooks/useOllamaModels",
        "@/hooks/use-toast"
      ],
      "exports": [
        "StrandsOllamaAgentDashboard"
      ],
      "components": [
        "StrandsOllamaAgentDashboard",
        "StrandsOllamaAgentDashboard"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useOllamaModels"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "3 functionality indicators, 2 components"
    },
    "src/pages/OllamaAgentDashboard.tsx": {
      "file_path": "src/pages/OllamaAgentDashboard.tsx",
      "filename": "OllamaAgentDashboard.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 22974,
      "lines": 542,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/lib/services/OllamaAgentService",
        "@/components/CommandCentre/CreateAgent/OllamaAgentDialog",
        "@/components/InlineAgentChat",
        "@/components/DebugOllamaAgent",
        "@/components/AgentConfigDialog",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaAgentDashboard"
      ],
      "components": [
        "OllamaAgentDashboard",
        "OllamaAgentDashboard"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/pages/RiskAnalytics.tsx": {
      "file_path": "src/pages/RiskAnalytics.tsx",
      "filename": "RiskAnalytics.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 3212,
      "lines": 81,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "RiskAnalytics"
      ],
      "components": [
        "RiskAnalytics"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Risk Analytics",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/UnifiedDocumentWorkspace.tsx": {
      "file_path": "src/pages/UnifiedDocumentWorkspace.tsx",
      "filename": "UnifiedDocumentWorkspace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 28441,
      "lines": 734,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/scroll-area",
        "@/lib/services/OllamaService",
        "@/components/BackendControl",
        "@/components/Documents/DocumentProcessingLogs"
      ],
      "exports": [
        "UnifiedDocumentWorkspace"
      ],
      "components": [
        "UnifiedDocumentWorkspace",
        "UnifiedDocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "10 functionality indicators, 2 components"
    },
    "src/pages/MinimalDocumentWorkspace.tsx": {
      "file_path": "src/pages/MinimalDocumentWorkspace.tsx",
      "filename": "MinimalDocumentWorkspace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 5409,
      "lines": 139,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "MinimalDocumentWorkspace"
      ],
      "components": [
        "MinimalDocumentWorkspace",
        "MinimalDocumentWorkspace"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/pages/SystemFlow.tsx": {
      "file_path": "src/pages/SystemFlow.tsx",
      "filename": "SystemFlow.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 622,
      "lines": 19,
      "imports": [
        "react",
        "@/components/SystemFlow/AgentOSArchitectureDesign"
      ],
      "exports": [
        "SystemFlow"
      ],
      "components": [
        "SystemFlow"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "AgentOS Architecture Blueprint",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/ArchitectureDesign.tsx": {
      "file_path": "src/pages/ArchitectureDesign.tsx",
      "filename": "ArchitectureDesign.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 2923,
      "lines": 88,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "ArchitectureDesign"
      ],
      "components": [
        "ArchitectureDesign"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Architecture Design",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/Marketplace.tsx": {
      "file_path": "src/pages/Marketplace.tsx",
      "filename": "Marketplace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 275,
      "lines": 15,
      "imports": [
        "react",
        "@/components/Layout",
        "@/components/AgentMarketplace"
      ],
      "exports": [
        "AgentExchange"
      ],
      "components": [
        "AgentExchange"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "AI Marketplace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/TestRealDocumentWorkspace.tsx": {
      "file_path": "src/pages/TestRealDocumentWorkspace.tsx",
      "filename": "TestRealDocumentWorkspace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 348,
      "lines": 10,
      "imports": [
        "react"
      ],
      "exports": [
        "TestRealDocumentWorkspace"
      ],
      "components": [
        "TestRealDocumentWorkspace",
        "TestRealDocumentWorkspace"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/pages/CommandCentreSimple.tsx": {
      "file_path": "src/pages/CommandCentreSimple.tsx",
      "filename": "CommandCentreSimple.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 1566,
      "lines": 44,
      "imports": [
        "react"
      ],
      "exports": [
        "CommandCentreSimple"
      ],
      "components": [
        "CommandCentreSimple"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "button",
        "button",
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/pages/Test.tsx": {
      "file_path": "src/pages/Test.tsx",
      "filename": "Test.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 293,
      "lines": 12,
      "imports": [
        "react"
      ],
      "exports": [
        "Test"
      ],
      "components": [
        "Test"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/DebugPage.tsx": {
      "file_path": "src/pages/DebugPage.tsx",
      "filename": "DebugPage.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 940,
      "lines": 24,
      "imports": [
        "react"
      ],
      "exports": [
        "DebugPage"
      ],
      "components": [
        "DebugPage",
        "DebugPage"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    },
    "src/pages/CustomerInsights.tsx": {
      "file_path": "src/pages/CustomerInsights.tsx",
      "filename": "CustomerInsights.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 0,
      "lines": 1,
      "imports": [],
      "exports": [],
      "components": [],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Agent Use Cases",
      "subcategory": "Customer Insights",
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 1 lines"
    },
    "src/pages/MultiAgentWorkspace.tsx": {
      "file_path": "src/pages/MultiAgentWorkspace.tsx",
      "filename": "MultiAgentWorkspace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 1681,
      "lines": 50,
      "imports": [
        "react",
        "@/components/MultiAgentWorkspace/WealthManagementWorkspace",
        "@/components/MultiAgentWorkspace/TelcoCvmWorkspace",
        "@/components/MultiAgentWorkspace/NetworkTwinWorkspace",
        "@/components/MultiAgentWorkspace/BlankWorkspace",
        "@/components/MultiAgentWorkspace/StrandsBlankWorkspace",
        "@/components/MultiAgentWorkspace/MultiAgentProjectSelector"
      ],
      "exports": [
        "MultiAgentWorkspace"
      ],
      "components": [
        "MultiAgentWorkspace"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Multi Agent Workspace",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/pages/SimpleMCPDashboard.tsx": {
      "file_path": "src/pages/SimpleMCPDashboard.tsx",
      "filename": "SimpleMCPDashboard.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 5756,
      "lines": 144,
      "imports": [
        "react"
      ],
      "exports": [
        "SimpleMCPDashboard"
      ],
      "components": [
        "SimpleMCPDashboard"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:3001/mcp",
        "http://localhost:3002/mcp"
      ],
      "ui_elements": [
        "button",
        "button",
        "button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "2 functionality indicators, 1 components"
    },
    "src/pages/SimpleRealDocumentWorkspace.tsx": {
      "file_path": "src/pages/SimpleRealDocumentWorkspace.tsx",
      "filename": "SimpleRealDocumentWorkspace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 29505,
      "lines": 736,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/scroll-area",
        "@/components/ui/select",
        "@/components/Documents/DocumentProcessingLogs",
        "@/components/Documents/DocumentChat",
        "@/components/Documents/AgentDocumentChat",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "SimpleRealDocumentWorkspace"
      ],
      "components": [
        "SimpleRealDocumentWorkspace",
        "SimpleRealDocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/rag/query",
        "http://localhost:5002/api/rag/ingest",
        "http://localhost:5002/health",
        "http://localhost:11434/api/tags",
        "http://localhost:5002/api/rag/query",
        "http://localhost:5002/api/rag/ingest",
        "http://localhost:5002/health",
        "http://localhost:11434/api/tags",
        "/api/rag/query",
        "/api/rag/ingest",
        "/api/tags"
      ],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "input",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/pages/CommandCentre.tsx": {
      "file_path": "src/pages/CommandCentre.tsx",
      "filename": "CommandCentre.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 4076,
      "lines": 106,
      "imports": [
        "react",
        "@/components/Layout",
        "@/contexts/IndustryContext",
        "@/components/CommandCentre/TelcoProjectData"
      ],
      "exports": [
        "AgentCommand"
      ],
      "components": [
        "AgentCommand"
      ],
      "hooks": [
        "useState",
        "useEffect",
        "useIndustry",
        "useRef",
        "useCallback",
        "useMemo"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "4 functionality indicators, 1 components"
    },
    "src/pages/NetworkTwin.tsx": {
      "file_path": "src/pages/NetworkTwin.tsx",
      "filename": "NetworkTwin.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 6127,
      "lines": 160,
      "imports": [
        "react",
        "@/components/NetworkTwin/NetworkTwinHeader",
        "@/components/NetworkTwin/SimulationPanel",
        "@/components/NetworkTwin/components/InteractiveNetworkTopology",
        "@/components/NetworkTwin/AnalysisPanel",
        "@/components/NetworkTwin/NetworkAgents",
        "@/components/NetworkTwin/modals/AgentDetailModal",
        "@/components/NetworkTwin/modals/SiteDetailModal",
        "@/components/ui/tabs",
        "@/components/NetworkTwin/hooks/useNetworkTwinNavigation",
        "@/components/NetworkTwin/data/networkTwinData",
        "@/components/NetworkTwin/NetworkSelector",
        "@/hooks/use-toast"
      ],
      "exports": [
        "NetworkTwin"
      ],
      "components": [
        "NetworkTwin"
      ],
      "hooks": [
        "useNetworkTwinNavigation",
        "useToast"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/AgentControlPanel.tsx": {
      "file_path": "src/pages/AgentControlPanel.tsx",
      "filename": "AgentControlPanel.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 181,
      "lines": 6,
      "imports": [
        "react",
        "@/components/AgentDashboard/AgentDashboard"
      ],
      "exports": [
        "AgentControlPanel"
      ],
      "components": [
        "AgentControlPanel"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Monitoring & Control",
      "subcategory": "Agent Control Panel",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/CommandCentreDebug.tsx": {
      "file_path": "src/pages/CommandCentreDebug.tsx",
      "filename": "CommandCentreDebug.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 1098,
      "lines": 29,
      "imports": [
        "react",
        "@/components/CommandCentre/QuickActionsDebug"
      ],
      "exports": [
        "CommandCentreDebug"
      ],
      "components": [
        "CommandCentreDebug"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Agent Command Centre",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/RealDocumentWorkspace.tsx": {
      "file_path": "src/pages/RealDocumentWorkspace.tsx",
      "filename": "RealDocumentWorkspace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 23601,
      "lines": 601,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/Documents/DocumentUploader",
        "@/components/Documents/DocumentChat",
        "@/components/Documents/DocumentLibrary",
        "@/lib/services/DocumentRAGService",
        "@/lib/services/OllamaService",
        "@/components/Documents/RAGDebugPanel",
        "@/components/Documents/DocumentMetadataPanel",
        "@/components/Documents/DocumentProcessingLogs"
      ],
      "exports": [
        "RealDocumentWorkspace"
      ],
      "components": [
        "RealDocumentWorkspace",
        "RealDocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:5002/api/rag/status",
        "http://localhost:5002/api/rag/status",
        "http://localhost:5002`,",
        "/api/rag/status"
      ],
      "ui_elements": [
        "button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/pages/MCPGatewayTest.tsx": {
      "file_path": "src/pages/MCPGatewayTest.tsx",
      "filename": "MCPGatewayTest.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 528,
      "lines": 17,
      "imports": [
        "react"
      ],
      "exports": [
        "MCPGatewayTest"
      ],
      "components": [
        "MCPGatewayTest"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "MCP Gateway",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 1 components"
    },
    "src/pages/MCPDashboard.tsx": {
      "file_path": "src/pages/MCPDashboard.tsx",
      "filename": "MCPDashboard.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 32031,
      "lines": 841,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/switch",
        "@/lib/services/MCPGatewayService",
        "sonner"
      ],
      "exports": [
        "MCPGateway"
      ],
      "components": [
        "MCPGateway",
        "ServersTab",
        "ToolsTab",
        "AnalyticsTab",
        "AddServerDialog",
        "AddToolDialog"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [
        "http://localhost:8000/mcp"
      ],
      "ui_elements": [
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Input",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Dialog",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Input",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Select",
        "Button",
        "Button"
      ],
      "category": "Core Platform",
      "subcategory": "Dashboard",
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains error messages"
    },
    "src/pages/DocumentWorkspace.tsx": {
      "file_path": "src/pages/DocumentWorkspace.tsx",
      "filename": "DocumentWorkspace.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 22582,
      "lines": 552,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/Documents/DocumentUploader",
        "@/components/Documents/DocumentChat",
        "@/components/Documents/DocumentLibrary",
        "@/components/Documents/AgentSuggestions",
        "@/lib/services/DocumentRAGService",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "DocumentWorkspace"
      ],
      "components": [
        "DocumentWorkspace",
        "DocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Button",
        "Card"
      ],
      "category": "Core Platform",
      "subcategory": "Document Chat",
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "10 functionality indicators, 2 components"
    },
    "src/pages/NotFound.tsx": {
      "file_path": "src/pages/NotFound.tsx",
      "filename": "NotFound.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 739,
      "lines": 28,
      "imports": [
        "react-router-dom",
        "react"
      ],
      "exports": [
        "NotFound"
      ],
      "components": [
        "NotFound"
      ],
      "hooks": [
        "useLocation",
        "useEffect"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "UNKNOWN",
      "subcategory": "",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/pages/WealthManagement.tsx": {
      "file_path": "src/pages/WealthManagement.tsx",
      "filename": "WealthManagement.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 7696,
      "lines": 205,
      "imports": [
        "react",
        "../components/ui/card",
        "../components/ui/button",
        "../components/ui/badge",
        "../components/ui/tabs"
      ],
      "exports": [
        "WealthManagement"
      ],
      "components": [
        "WealthManagement"
      ],
      "hooks": [
        "useState"
      ],
      "routes": [],
      "api_calls": [],
      "ui_elements": [
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card",
        "Card"
      ],
      "category": "Agent Use Cases",
      "subcategory": "Wealth Management",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "1 functionality indicators, 1 components"
    },
    "src/pages/OllamaTerminal.tsx": {
      "file_path": "src/pages/OllamaTerminal.tsx",
      "filename": "OllamaTerminal.tsx",
      "directory": "src/pages",
      "extension": ".tsx",
      "size": 3311,
      "lines": 78,
      "imports": [
        "react",
        "@/components/SimpleOllamaTerminal",
        "@/components/BackendControl"
      ],
      "exports": [
        "OllamaTerminalPage"
      ],
      "components": [
        "OllamaTerminalPage",
        "OllamaTerminalPage"
      ],
      "hooks": [],
      "routes": [],
      "api_calls": [],
      "ui_elements": [],
      "category": "Core Platform",
      "subcategory": "Ollama Terminal",
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "0 functionality indicators, 2 components"
    }
  }
}