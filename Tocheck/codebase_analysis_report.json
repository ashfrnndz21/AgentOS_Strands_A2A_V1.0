{
  "summary": {
    "total_files": 570,
    "total_features": 17,
    "file_status_counts": {
      "UNKNOWN": 375,
      "ERROR": 91,
      "MINIMAL": 52,
      "PARTIAL": 39,
      "FUNCTIONAL": 13
    },
    "feature_status_counts": {
      "BROKEN": 12,
      "PARTIALLY_WORKING": 5
    },
    "functional_percentage": 0.0
  },
  "features": {
    "Dashboard": {
      "route": "/",
      "primary_files": [
        {
          "path": "src/pages/Index.tsx",
          "status": "MINIMAL",
          "confidence": 60,
          "reason": "Only 6 lines"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/MainContent.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 2
    },
    "AgentOS Architecture Blueprint": {
      "route": "/system-flow",
      "primary_files": [
        {
          "path": "src/components/SystemFlow/AgentOSLogicalFlow.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 1
    },
    "Agent Command Centre": {
      "route": "/agent-command",
      "primary_files": [
        {
          "path": "src/pages/CommandCentre.tsx",
          "status": "PARTIAL",
          "confidence": 70,
          "reason": "Has 4 functionality indicators"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/CommandCentre/QuickActions.tsx",
          "status": "PARTIAL",
          "confidence": 70,
          "reason": "Has 5 functionality indicators"
        },
        {
          "path": "src/components/CommandCentre/CreateAgentDialog.tsx",
          "status": "MINIMAL",
          "confidence": 60,
          "reason": "Only 17 lines"
        },
        {
          "path": "src/components/CommandCentre/ProjectData.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "status": "PARTIALLY_WORKING",
      "confidence": 60,
      "issues": [],
      "working_files": 2,
      "total_files": 4
    },
    "Document Chat": {
      "route": "/documents",
      "primary_files": [
        {
          "path": "src/pages/SimpleRealDocumentWorkspace.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 2 error indicators"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/Documents/DocumentChat.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        },
        {
          "path": "src/components/Documents/DocumentUploader.tsx",
          "status": "FUNCTIONAL",
          "confidence": 85,
          "reason": "Has 11 functionality indicators"
        },
        {
          "path": "src/components/Documents/AgentDocumentChat.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 2 error indicators"
        }
      ],
      "status": "PARTIALLY_WORKING",
      "confidence": 60,
      "issues": [
        "src/pages/SimpleRealDocumentWorkspace.tsx: Contains 2 error indicators",
        "src/components/Documents/DocumentChat.tsx: Contains 1 error indicators",
        "src/components/Documents/AgentDocumentChat.tsx: Contains 2 error indicators"
      ],
      "working_files": 1,
      "total_files": 4
    },
    "Ollama Agents": {
      "route": "/ollama-agents",
      "primary_files": [
        {
          "path": "src/pages/OllamaAgentDashboard.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/OllamaAgentChat.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        },
        {
          "path": "src/lib/services/OllamaAgentService.ts",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        },
        {
          "path": "src/hooks/useOllamaModels.ts",
          "status": "PARTIAL",
          "confidence": 70,
          "reason": "Has 6 functionality indicators"
        }
      ],
      "status": "PARTIALLY_WORKING",
      "confidence": 60,
      "issues": [
        "src/pages/OllamaAgentDashboard.tsx: Contains 1 error indicators",
        "src/components/OllamaAgentChat.tsx: Contains 1 error indicators",
        "src/lib/services/OllamaAgentService.ts: Contains 1 error indicators"
      ],
      "working_files": 1,
      "total_files": 4
    },
    "Ollama Terminal": {
      "route": "/ollama-terminal",
      "primary_files": [
        {
          "path": "src/pages/OllamaTerminal.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/SimpleOllamaTerminal.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        },
        {
          "path": "src/components/Ollama/OllamaTerminal.tsx",
          "status": "FUNCTIONAL",
          "confidence": 85,
          "reason": "Has 9 functionality indicators"
        }
      ],
      "status": "PARTIALLY_WORKING",
      "confidence": 60,
      "issues": [
        "src/components/SimpleOllamaTerminal.tsx: Contains 1 error indicators"
      ],
      "working_files": 1,
      "total_files": 3
    },
    "AI Agents": {
      "route": "/agents",
      "primary_files": [
        {
          "path": "src/pages/Agents.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/AgentDashboard/AgentDashboard.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        },
        {
          "path": "src/components/AgentDashboard/AgentsTable.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 3
    },
    "Multi Agent Workspace": {
      "route": "/multi-agent-workspace",
      "primary_files": [
        {
          "path": "src/pages/MultiAgentWorkspace.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/MultiAgentWorkspace/AgentPalette.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        },
        {
          "path": "src/components/MultiAgentWorkspace/BlankWorkspace.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        },
        {
          "path": "src/components/MultiAgentWorkspace/PropertiesPanel.tsx",
          "status": "PARTIAL",
          "confidence": 70,
          "reason": "Has 7 functionality indicators"
        }
      ],
      "status": "PARTIALLY_WORKING",
      "confidence": 60,
      "issues": [
        "src/components/MultiAgentWorkspace/AgentPalette.tsx: Contains 1 error indicators",
        "src/components/MultiAgentWorkspace/BlankWorkspace.tsx: Contains 1 error indicators"
      ],
      "working_files": 1,
      "total_files": 4
    },
    "MCP Gateway": {
      "route": "/mcp-dashboard",
      "primary_files": [
        {
          "path": "src/pages/MCPDashboard.tsx",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        }
      ],
      "supporting_files": [
        {
          "path": "src/pages/SimpleMCPDashboard.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        },
        {
          "path": "src/lib/services/MCPGatewayService.ts",
          "status": "ERROR",
          "confidence": 90,
          "reason": "Contains 1 error indicators"
        }
      ],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [
        "src/pages/MCPDashboard.tsx: Contains 1 error indicators",
        "src/lib/services/MCPGatewayService.ts: Contains 1 error indicators"
      ],
      "working_files": 0,
      "total_files": 3
    },
    "AI Marketplace": {
      "route": "/agent-exchange",
      "primary_files": [
        {
          "path": "src/components/AgentMarketplace.tsx",
          "status": "MINIMAL",
          "confidence": 60,
          "reason": "Only 8 lines"
        }
      ],
      "supporting_files": [],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 1
    },
    "Risk Analytics": {
      "route": "/risk-analytics",
      "primary_files": [
        {
          "path": "src/pages/RiskAnalytics.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 1
    },
    "Architecture Design": {
      "route": "/architecture-design",
      "primary_files": [
        {
          "path": "src/pages/ArchitectureDesign.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/ArchitectureDesign/ArchitectureDesignDashboard.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        },
        {
          "path": "src/components/ArchitectureDesign/InteractiveAgentFlowDiagram.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 3
    },
    "Wealth Management": {
      "route": "/wealth-management",
      "primary_files": [
        {
          "path": "src/pages/WealthManagement.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 1
    },
    "Customer Insights": {
      "route": "/customer-insights",
      "primary_files": [
        {
          "path": "src/pages/CustomerValueManagement.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/CustomerValueManagement/CvmDashboard.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 2
    },
    "Customer Analytics": {
      "route": "/customer-analytics",
      "primary_files": [
        {
          "path": "src/pages/CustomerAnalytics.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 1
    },
    "Agent Control Panel": {
      "route": "/agent-control",
      "primary_files": [
        {
          "path": "src/pages/AgentControlPanel.tsx",
          "status": "MINIMAL",
          "confidence": 60,
          "reason": "Only 6 lines"
        }
      ],
      "supporting_files": [],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 1
    },
    "System Monitor": {
      "route": "/system-flow",
      "primary_files": [
        {
          "path": "src/components/SystemFlow/AgentOSLogicalFlow.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "supporting_files": [
        {
          "path": "src/components/SystemFlow/AgentOSArchitectureDesign.tsx",
          "status": "UNKNOWN",
          "confidence": 30,
          "reason": "Cannot determine functionality level"
        }
      ],
      "status": "BROKEN",
      "confidence": 90,
      "issues": [],
      "working_files": 0,
      "total_files": 2
    }
  },
  "files": {
    "src/App_test_individual_2.tsx": {
      "file_path": "src/App_test_individual_2.tsx",
      "size": 759,
      "lines": 24,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaAgentDashboard"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App.tsx": {
      "file_path": "src/App.tsx",
      "size": 12601,
      "lines": 322,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App",
        "Index",
        "CommandCentre",
        "Agents",
        "AgentControlPanel",
        "MCPDashboard",
        "SimpleMCPDashboard",
        "AgentMarketplace",
        "WealthManagement",
        "CustomerValueManagement",
        "CustomerAnalytics",
        "SimpleRealDocumentWorkspace",
        "RiskAnalytics",
        "ArchitectureDesign",
        "AgentOSLogicalFlow",
        "AgentOSArchitectureDesign",
        "Settings",
        "MultiAgentWorkspace",
        "OllamaAgentDashboard",
        "OllamaTerminalPage",
        "LoadingSpinner",
        "ErrorFallback"
      ],
      "components": [
        "Index",
        "CommandCentre",
        "Agents",
        "AgentControlPanel",
        "MCPDashboard",
        "SimpleMCPDashboard",
        "AgentMarketplace",
        "WealthManagement",
        "CustomerValueManagement",
        "CustomerAnalytics",
        "SimpleRealDocumentWorkspace",
        "RiskAnalytics",
        "ArchitectureDesign",
        "AgentOSLogicalFlow",
        "AgentOSArchitectureDesign",
        "Settings",
        "MultiAgentWorkspace",
        "OllamaAgentDashboard",
        "OllamaTerminalPage",
        "LoadingSpinner"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/App_test_individual_3.tsx": {
      "file_path": "src/App_test_individual_3.tsx",
      "size": 751,
      "lines": 24,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_test_individual_1.tsx": {
      "file_path": "src/App_test_individual_1.tsx",
      "size": 760,
      "lines": 24,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/MultiAgentWorkspace"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_minimal_core.tsx": {
      "file_path": "src/App_minimal_core.tsx",
      "size": 219,
      "lines": 12,
      "imports": [
        "react"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 12 lines"
    },
    "src/main.tsx": {
      "file_path": "src/main.tsx",
      "size": 637,
      "lines": 23,
      "imports": [
        "react",
        "react-dom/client",
        "@tanstack/react-query",
        "./App.tsx",
        "./hooks/toast",
        "./contexts/IndustryContext"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_backup.tsx": {
      "file_path": "src/App_backup.tsx",
      "size": 4030,
      "lines": 74,
      "imports": [
        "@/components/ui/toaster",
        "@/components/ui/sonner",
        "@/components/ui/tooltip",
        "react-router-dom",
        "./components/Layout",
        "./pages/Index",
        "./pages/Agents",
        "./pages/MultiAgentWorkspace",
        "./pages/CommandCentre",
        "./pages/WealthManagement",
        "./pages/CustomerValueManagement",
        "./pages/CustomerAnalytics",
        "./components/AgentMarketplace",
        "./pages/NetworkTwin",
        "./pages/RiskAnalytics",
        "./pages/Auth",
        "./components/Settings/GeneralSettings",
        "./pages/AgentControlPanel",
        "./pages/MCPDashboard",
        "./pages/MCPGatewayTest",
        "./pages/SystemFlow",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/OllamaAgentDashboard",
        "./pages/StrandsOllamaAgentDashboard",
        "./pages/DebugPage",
        "./pages/CommandCentreTest",
        "./pages/CommandCentreSimple",
        "./pages/CommandCentreDebug",
        "./components/ErrorBoundary"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_with_routing.tsx": {
      "file_path": "src/App_with_routing.tsx",
      "size": 1634,
      "lines": 42,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App",
        "ComingSoon"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_minimal.tsx": {
      "file_path": "src/App_minimal.tsx",
      "size": 753,
      "lines": 27,
      "imports": [
        "react"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_systematic.tsx": {
      "file_path": "src/App_systematic.tsx",
      "size": 3480,
      "lines": 75,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/Agents",
        "./pages/CommandCentre",
        "./pages/AgentControlPanel",
        "./pages/MultiAgentWorkspace",
        "./pages/OllamaAgentDashboard",
        "./pages/Settings"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App",
        "ComingSoon"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/vite-env.d.ts": {
      "file_path": "src/vite-env.d.ts",
      "size": 38,
      "lines": 2,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 2 lines"
    },
    "src/App_systematic_safe.tsx": {
      "file_path": "src/App_systematic_safe.tsx",
      "size": 3291,
      "lines": 64,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/Agents",
        "./pages/CommandCentre",
        "./pages/AgentControlPanel",
        "./pages/MultiAgentWorkspace",
        "./pages/OllamaAgentDashboard"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App",
        "ComingSoon"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_working.tsx": {
      "file_path": "src/App_working.tsx",
      "size": 5583,
      "lines": 163,
      "imports": [
        "react",
        "./lib/apiClient"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App",
        "checkBackendStatus",
        "loadOllamaModels",
        "executeOllamaCommand",
        "uploadDocument",
        "queryDocuments"
      ],
      "components": [],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/App_step1.tsx": {
      "file_path": "src/App_step1.tsx",
      "size": 1676,
      "lines": 43,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App",
        "ComingSoon"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_super_minimal.tsx": {
      "file_path": "src/App_super_minimal.tsx",
      "size": 1259,
      "lines": 38,
      "imports": [
        "react",
        "react-router-dom"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_without_problematic_components.tsx": {
      "file_path": "src/App_without_problematic_components.tsx",
      "size": 5315,
      "lines": 112,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index",
        "./pages/OllamaTerminal",
        "./pages/SimpleRealDocumentWorkspace",
        "./pages/CommandCentre",
        "./pages/Agents",
        "./pages/AgentControlPanel",
        "./pages/MultiAgentWorkspace",
        "./pages/OllamaAgentDashboard",
        "./pages/MCPDashboard",
        "./pages/SimpleMCPDashboard",
        "./components/AgentMarketplace",
        "./pages/WealthManagement",
        "./pages/CustomerValueManagement",
        "./pages/CustomerAnalytics"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/App_minimal_ui.tsx": {
      "file_path": "src/App_minimal_ui.tsx",
      "size": 938,
      "lines": 29,
      "imports": [
        "react",
        "react-router-dom",
        "./components/ui/toaster",
        "./components/ui/sonner",
        "./components/ui/tooltip",
        "./components/ErrorBoundary",
        "./components/Layout",
        "./pages/Index"
      ],
      "exports": [
        "App"
      ],
      "functions": [
        "App"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/types/WorkflowUtilityTypes.ts": {
      "file_path": "src/types/WorkflowUtilityTypes.ts",
      "size": 5429,
      "lines": 181,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "type",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/contexts/IndustryContext.tsx": {
      "file_path": "src/contexts/IndustryContext.tsx",
      "size": 8409,
      "lines": 209,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useIndustry",
        "IndustryProvider",
        "useIndustryContext"
      ],
      "functions": [
        "useIndustry",
        "getInitialIndustry",
        "setIndustry",
        "useIndustryContext",
        "IndustryProvider",
        "useIndustry",
        "useIndustryContext"
      ],
      "components": [
        "IndustryProvider"
      ],
      "hooks": [
        "useIndustry",
        "useState",
        "useContext",
        "useIndustryContext"
      ],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/config/appConfig.ts": {
      "file_path": "src/config/appConfig.ts",
      "size": 888,
      "lines": 36,
      "imports": [],
      "exports": [
        "appConfig",
        "appConfig"
      ],
      "functions": [
        "appConfig"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/config/ollamaModels.ts": {
      "file_path": "src/config/ollamaModels.ts",
      "size": 4349,
      "lines": 107,
      "imports": [],
      "exports": [
        "OLLAMA_MODELS",
        "type",
        "type",
        "type",
        "OLLAMA_MODELS"
      ],
      "functions": [
        "OLLAMA_MODELS"
      ],
      "components": [],
      "hooks": [
        "useCase"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/utils/memoryService.ts": {
      "file_path": "src/utils/memoryService.ts",
      "size": 5120,
      "lines": 164,
      "imports": [
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "interface",
        "interface",
        "MemoryService",
        "useMemoryService"
      ],
      "functions": [
        "useMemoryService",
        "useMemoryService"
      ],
      "components": [],
      "hooks": [
        "useMemoryService"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/utils/ragService.ts": {
      "file_path": "src/utils/ragService.ts",
      "size": 9869,
      "lines": 319,
      "imports": [
        "@/integrations/supabase/client",
        "sonner",
        "@langchain/openai",
        "@langchain/core/prompts",
        "@langchain/core/output_parsers",
        "@langchain/core/runnables",
        "@/utils/models/modelTypes"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "RAGService",
        "useRAGService"
      ],
      "functions": [
        "documents",
        "context",
        "hasRelevance",
        "totalRelevance",
        "processedDocs",
        "useRAGService",
        "useRAGService"
      ],
      "components": [],
      "hooks": [
        "useRAGService"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/utils/modelValidator.ts": {
      "file_path": "src/utils/modelValidator.ts",
      "size": 1936,
      "lines": 69,
      "imports": [
        "@/config/ollamaModels"
      ],
      "exports": [
        "ModelValidator",
        "validateModel",
        "getModelForUseCase",
        "formatModelForDisplay"
      ],
      "functions": [
        "validateModel",
        "getModelForUseCase",
        "formatModelForDisplay"
      ],
      "components": [],
      "hooks": [
        "useCase"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/utils/vectorStore.ts": {
      "file_path": "src/utils/vectorStore.ts",
      "size": 8381,
      "lines": 261,
      "imports": [
        "@/integrations/supabase/client",
        "sonner",
        "@langchain/openai",
        "@langchain/pinecone",
        "@pinecone-database/pinecone"
      ],
      "exports": [
        "interface",
        "type",
        "VectorStoreService",
        "useVectorStore"
      ],
      "functions": [
        "indexExists",
        "formattedDocs",
        "useVectorStore",
        "useVectorStore"
      ],
      "components": [],
      "hooks": [
        "useVectorStore"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/utils/langchainService.ts": {
      "file_path": "src/utils/langchainService.ts",
      "size": 7592,
      "lines": 225,
      "imports": [
        "react",
        "@/utils/models/modelTypes",
        "@/integrations/supabase/client",
        "sonner",
        "@langchain/openai",
        "@langchain/core/prompts",
        "@langchain/core/output_parsers",
        "@langchain/core/runnables",
        "@langchain/core/messages"
      ],
      "exports": [
        "interface",
        "LangChainService",
        "useLangChain"
      ],
      "functions": [
        "useLangChain",
        "useLangChain"
      ],
      "components": [],
      "hooks": [
        "useLangChain",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/utils/mem0Service.ts": {
      "file_path": "src/utils/mem0Service.ts",
      "size": 11556,
      "lines": 365,
      "imports": [
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "interface",
        "Mem0Service",
        "useMem0Service"
      ],
      "functions": [
        "to",
        "to",
        "to",
        "const",
        "useMem0Service",
        "useMem0Service"
      ],
      "components": [],
      "hooks": [
        "useDatabase",
        "useMem0Service"
      ],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.delete\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "src/utils/modelContextProtocol.ts": {
      "file_path": "src/utils/modelContextProtocol.ts",
      "size": 4461,
      "lines": 160,
      "imports": [
        "react",
        "@/utils/models/modelTypes",
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "MCPService",
        "useMCP"
      ],
      "functions": [
        "useMCP",
        "useMCP"
      ],
      "components": [],
      "hooks": [
        "useMCP",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/utils/models/modelTypes.ts": {
      "file_path": "src/utils/models/modelTypes.ts",
      "size": 467,
      "lines": 18,
      "imports": [],
      "exports": [
        "type",
        "interface",
        "model"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 18 lines"
    },
    "src/utils/models/modelUtils.ts": {
      "file_path": "src/utils/models/modelUtils.ts",
      "size": 2032,
      "lines": 71,
      "imports": [
        "./modelDefinitions",
        "./modelTypes",
        "sonner"
      ],
      "exports": [
        "getModelConfig",
        "validateLocalEndpoint",
        "loadInitialModelSelection",
        "saveModelSelection",
        "saveLocalEndpoint"
      ],
      "functions": [
        "getModelConfig",
        "validateLocalEndpoint",
        "loadInitialModelSelection",
        "saveModelSelection",
        "saveLocalEndpoint",
        "getModelConfig",
        "validateLocalEndpoint",
        "loadInitialModelSelection",
        "saveModelSelection",
        "saveLocalEndpoint"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/utils/models/modelDefinitions.ts": {
      "file_path": "src/utils/models/modelDefinitions.ts",
      "size": 2452,
      "lines": 110,
      "imports": [
        "./modelTypes"
      ],
      "exports": [
        "models"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/integrations/supabase/types.ts": {
      "file_path": "src/integrations/supabase/types.ts",
      "size": 14095,
      "lines": 457,
      "imports": [],
      "exports": [
        "type",
        "type",
        "type",
        "type",
        "type",
        "type",
        "type",
        "Constants"
      ],
      "functions": [
        "Constants"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/integrations/supabase/client.ts": {
      "file_path": "src/integrations/supabase/client.ts",
      "size": 1688,
      "lines": 41,
      "imports": [
        "@supabase/supabase-js",
        "./types",
        "@/integrations/supabase/client"
      ],
      "exports": [
        "type",
        "supabase"
      ],
      "functions": [
        "supabase"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/InlineAgentChat.tsx": {
      "file_path": "src/components/InlineAgentChat.tsx",
      "size": 9134,
      "lines": 280,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/scroll-area",
        "@/components/ui/badge",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "InlineAgentChat"
      ],
      "functions": [
        "initConversation",
        "timeoutPromise",
        "handleSendMessage",
        "handleKeyPress",
        "formatDuration",
        "InlineAgentChat"
      ],
      "components": [
        "InlineAgentChat"
      ],
      "hooks": [
        "useToast",
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/IndustrySidebar.tsx": {
      "file_path": "src/components/IndustrySidebar.tsx",
      "size": 8085,
      "lines": 215,
      "imports": [
        "react",
        "react-router-dom",
        "./IndustryBanner",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "IndustrySidebar"
      ],
      "functions": [
        "IndustrySidebar",
        "isActive",
        "toggleGroup"
      ],
      "components": [],
      "hooks": [
        "useLocation",
        "useIndustry",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "\\.delete\\s*\\("
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/OllamaAgentChat.tsx": {
      "file_path": "src/components/OllamaAgentChat.tsx",
      "size": 13265,
      "lines": 364,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/alert",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaAgentChat"
      ],
      "functions": [
        "initConversation",
        "loadMetrics",
        "loadExecutions",
        "handleSendMessage",
        "handleKeyPress",
        "formatDuration",
        "OllamaAgentChat"
      ],
      "components": [
        "OllamaAgentChat"
      ],
      "hooks": [
        "useToast",
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/ThinkingIndicator.tsx": {
      "file_path": "src/components/ThinkingIndicator.tsx",
      "size": 1458,
      "lines": 45,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "ThinkingIndicator"
      ],
      "functions": [
        "ThinkingIndicator"
      ],
      "components": [
        "ThinkingIndicator"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentCard.tsx": {
      "file_path": "src/components/AgentCard.tsx",
      "size": 1871,
      "lines": 68,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "AgentCard",
        "InfoPanel"
      ],
      "functions": [
        "AgentCard",
        "InfoPanel"
      ],
      "components": [
        "AgentCard",
        "InfoPanel"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/GuardrailsPanel.tsx": {
      "file_path": "src/components/GuardrailsPanel.tsx",
      "size": 2243,
      "lines": 78,
      "imports": [
        "react",
        "lucide-react",
        "./AgentCard"
      ],
      "exports": [
        "type",
        "GuardrailsPanel"
      ],
      "functions": [
        "getGuardrailIcon",
        "GuardrailsPanel"
      ],
      "components": [
        "GuardrailsPanel"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/GlobalConnectionStatus.tsx": {
      "file_path": "src/components/GlobalConnectionStatus.tsx",
      "size": 1171,
      "lines": 37,
      "imports": [
        "react",
        "./ConnectionStatus",
        "./ConnectionManager",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "lucide-react"
      ],
      "exports": [
        "GlobalConnectionStatus"
      ],
      "functions": [
        "GlobalConnectionStatus"
      ],
      "components": [
        "GlobalConnectionStatus"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentConfigDialog.tsx": {
      "file_path": "src/components/AgentConfigDialog.tsx",
      "size": 28373,
      "lines": 672,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/lib/services/OllamaAgentService"
      ],
      "exports": [
        "AgentConfigDialog"
      ],
      "functions": [
        "formatDate",
        "renderCapabilities",
        "renderGuardrails",
        "renderEnhancedGuardrails",
        "renderRAGConfig",
        "renderBehaviorConfig",
        "AgentConfigDialog"
      ],
      "components": [
        "AgentConfigDialog"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentMarketplace.tsx": {
      "file_path": "src/components/AgentMarketplace.tsx",
      "size": 189,
      "lines": 8,
      "imports": [
        "react",
        "./AgentMarketplace/ModernAgentMarketplace"
      ],
      "exports": [
        "AgentMarketplace"
      ],
      "functions": [
        "AgentMarketplace"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 8 lines"
    },
    "src/components/GlobeBanner.tsx": {
      "file_path": "src/components/GlobeBanner.tsx",
      "size": 793,
      "lines": 21,
      "imports": [
        "react"
      ],
      "exports": [
        "GlobeBanner"
      ],
      "functions": [
        "GlobeBanner"
      ],
      "components": [
        "GlobeBanner"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/IndustrySwitcher.tsx": {
      "file_path": "src/components/IndustrySwitcher.tsx",
      "size": 2876,
      "lines": 81,
      "imports": [
        "react",
        "./ui/button",
        "lucide-react",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "IndustrySwitcher"
      ],
      "functions": [
        "handleIndustryChange",
        "IndustrySwitcher"
      ],
      "components": [
        "IndustrySwitcher"
      ],
      "hooks": [
        "useIndustry"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/BackendControl.tsx": {
      "file_path": "src/components/BackendControl.tsx",
      "size": 31453,
      "lines": 877,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/separator"
      ],
      "exports": [
        "BackendControl"
      ],
      "functions": [
        "to",
        "loadConfig",
        "saveConfig",
        "checkBackendStatus",
        "refreshStatus",
        "testConnection",
        "startBackend",
        "restartBackend",
        "restartRAGService",
        "startBackendViaCommand",
        "stopBackend",
        "initializeComponent",
        "interval",
        "updateTimeout",
        "getStatusColor",
        "getStatusIcon",
        "BackendControl"
      ],
      "components": [
        "BackendControl"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "\\.delete\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 3 error indicators"
    },
    "src/components/StrandsOllamaAgentChat.tsx": {
      "file_path": "src/components/StrandsOllamaAgentChat.tsx",
      "size": 22098,
      "lines": 540,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/hooks/useStrandsOllamaAgents",
        "@/hooks/use-toast"
      ],
      "exports": [
        "StrandsOllamaAgentChat"
      ],
      "functions": [
        "initConversation",
        "loadExecutions",
        "handleSendMessage",
        "handleKeyPress",
        "formatDuration",
        "getReasoningIcon",
        "getReasoningColor",
        "StrandsOllamaAgentChat"
      ],
      "components": [
        "StrandsOllamaAgentChat"
      ],
      "hooks": [
        "useState",
        "useToast",
        "useStrandsOllamaAgents",
        "useEffect",
        "useRef"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/SimpleOllamaTerminal.tsx": {
      "file_path": "src/components/SimpleOllamaTerminal.tsx",
      "size": 11408,
      "lines": 351,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/lib/apiClient"
      ],
      "exports": [
        "SimpleOllamaTerminal"
      ],
      "functions": [
        "to",
        "addLine",
        "testInput",
        "executeCommand",
        "clearTerminal",
        "copyTerminalContent",
        "content",
        "handleKeyPress",
        "focusInput",
        "getLineColor",
        "testConnection",
        "SimpleOllamaTerminal"
      ],
      "components": [
        "SimpleOllamaTerminal"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/DebugOllamaAgent.tsx": {
      "file_path": "src/components/DebugOllamaAgent.tsx",
      "size": 4407,
      "lines": 133,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "DebugOllamaAgent"
      ],
      "functions": [
        "loadDebugInfo",
        "testChatWithAgent",
        "testOllamaConnection",
        "DebugOllamaAgent"
      ],
      "components": [
        "DebugOllamaAgent"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Layout.tsx": {
      "file_path": "src/components/Layout.tsx",
      "size": 1907,
      "lines": 58,
      "imports": [
        "react",
        "./IndustrySidebar",
        "./IndustrySwitcher",
        "./ui/button",
        "lucide-react",
        "react-router-dom",
        "./ErrorBoundary",
        "./ui/sidebar"
      ],
      "exports": [
        "Layout"
      ],
      "functions": [
        "handleSignOut",
        "Layout"
      ],
      "components": [
        "Layout"
      ],
      "hooks": [
        "useNavigate",
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MainContent.tsx": {
      "file_path": "src/components/MainContent.tsx",
      "size": 5368,
      "lines": 97,
      "imports": [
        "react",
        "react-router-dom",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "MainContent"
      ],
      "functions": [
        "MainContent",
        "MainContent"
      ],
      "components": [
        "MainContent"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/BankingBanner.tsx": {
      "file_path": "src/components/BankingBanner.tsx",
      "size": 617,
      "lines": 21,
      "imports": [
        "react"
      ],
      "exports": [
        "BankingBanner"
      ],
      "functions": [
        "BankingBanner",
        "BankingBanner"
      ],
      "components": [
        "BankingBanner"
      ],
      "hooks": [],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/TrueBanner.tsx": {
      "file_path": "src/components/TrueBanner.tsx",
      "size": 761,
      "lines": 21,
      "imports": [
        "react"
      ],
      "exports": [
        "TrueBanner"
      ],
      "functions": [
        "TrueBanner"
      ],
      "components": [
        "TrueBanner"
      ],
      "hooks": [],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Sidebar.tsx": {
      "file_path": "src/components/Sidebar.tsx",
      "size": 7158,
      "lines": 196,
      "imports": [
        "react",
        "react-router-dom",
        "lucide-react",
        "./BankingBanner",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "Sidebar"
      ],
      "functions": [
        "Sidebar",
        "isActive",
        "getIconComponent",
        "toggleGroup"
      ],
      "components": [],
      "hooks": [
        "useLocation",
        "useIndustry",
        "useState"
      ],
      "api_calls": [
        "\\.delete\\s*\\("
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ConnectionManager.tsx": {
      "file_path": "src/components/ConnectionManager.tsx",
      "size": 10661,
      "lines": 318,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/config/appConfig"
      ],
      "exports": [
        "ConnectionManager"
      ],
      "functions": [
        "testAllConnections",
        "handleAutoSetup",
        "applyManualConfig",
        "handleReset",
        "getStatusIcon",
        "getStatusBadge",
        "ConnectionManager"
      ],
      "components": [
        "ConnectionManager"
      ],
      "hooks": [
        "useAppConfig",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 7 functionality indicators"
    },
    "src/components/ConnectionStatus.tsx": {
      "file_path": "src/components/ConnectionStatus.tsx",
      "size": 4391,
      "lines": 165,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/config/appConfig",
        "@/lib/apiClient"
      ],
      "exports": [
        "ConnectionStatus"
      ],
      "functions": [
        "checkStatus",
        "handleAutoFix",
        "getStatusIcon",
        "getStatusText",
        "getStatusColor",
        "ConnectionStatus"
      ],
      "components": [
        "ConnectionStatus"
      ],
      "hooks": [
        "useAppConfig",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 7 functionality indicators"
    },
    "src/components/IndustryBanner.tsx": {
      "file_path": "src/components/IndustryBanner.tsx",
      "size": 824,
      "lines": 24,
      "imports": [
        "react",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "IndustryBanner"
      ],
      "functions": [
        "IndustryBanner",
        "IndustryBanner"
      ],
      "components": [
        "IndustryBanner"
      ],
      "hooks": [
        "useIndustry"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/PerformanceMetrics.tsx": {
      "file_path": "src/components/PerformanceMetrics.tsx",
      "size": 15149,
      "lines": 407,
      "imports": [
        "react",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "lucide-react"
      ],
      "exports": [
        "PerformanceMetrics"
      ],
      "functions": [
        "PerformanceMetrics",
        "MetricCard"
      ],
      "components": [
        "MetricCard"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/SimpleLayout.tsx": {
      "file_path": "src/components/SimpleLayout.tsx",
      "size": 1934,
      "lines": 57,
      "imports": [
        "react",
        "react-router-dom"
      ],
      "exports": [
        "SimpleLayout"
      ],
      "functions": [
        "SimpleLayout"
      ],
      "components": [
        "SimpleLayout"
      ],
      "hooks": [
        "useLocation"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ErrorBoundary.tsx": {
      "file_path": "src/components/ErrorBoundary.tsx",
      "size": 2449,
      "lines": 74,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "ErrorBoundary"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/DecisionPath/NodeIndicators.tsx": {
      "file_path": "src/components/DecisionPath/NodeIndicators.tsx",
      "size": 1580,
      "lines": 52,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "NodeIndicators"
      ],
      "functions": [
        "NodeIndicators"
      ],
      "components": [
        "NodeIndicators"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/NodeOperation.tsx": {
      "file_path": "src/components/DecisionPath/NodeOperation.tsx",
      "size": 803,
      "lines": 32,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "NodeOperation"
      ],
      "functions": [
        "NodeOperation"
      ],
      "components": [
        "NodeOperation"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/GraphLegend.tsx": {
      "file_path": "src/components/DecisionPath/GraphLegend.tsx",
      "size": 735,
      "lines": 20,
      "imports": [
        "react",
        "./types"
      ],
      "exports": [
        "GraphLegend"
      ],
      "functions": [
        "GraphLegend"
      ],
      "components": [
        "GraphLegend"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/PathDrawing.tsx": {
      "file_path": "src/components/DecisionPath/PathDrawing.tsx",
      "size": 1873,
      "lines": 54,
      "imports": [
        "react",
        "./utils/pathUtils",
        "./types"
      ],
      "exports": [
        "PathDrawing"
      ],
      "functions": [
        "PathDrawing"
      ],
      "components": [
        "PathDrawing"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/DecisionPathGraph.tsx": {
      "file_path": "src/components/DecisionPath/DecisionPathGraph.tsx",
      "size": 4142,
      "lines": 131,
      "imports": [
        "react",
        "lucide-react",
        "./ArrowMarkers",
        "./GraphHeader",
        "./GraphLegend",
        "./GraphNode",
        "./PathDrawing",
        "./types",
        "./utils/pathUtils"
      ],
      "exports": [
        "DecisionPathGraph"
      ],
      "functions": [
        "renderIcon",
        "toolNodes",
        "DecisionPathGraph"
      ],
      "components": [
        "DecisionPathGraph"
      ],
      "hooks": [
        "useLeave",
        "useEnter",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/NodeOperationsList.tsx": {
      "file_path": "src/components/DecisionPath/NodeOperationsList.tsx",
      "size": 794,
      "lines": 33,
      "imports": [
        "react",
        "./NodeOperation"
      ],
      "exports": [
        "NodeOperationsList"
      ],
      "functions": [
        "NodeOperationsList"
      ],
      "components": [
        "NodeOperationsList"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/NodeHeader.tsx": {
      "file_path": "src/components/DecisionPath/NodeHeader.tsx",
      "size": 1633,
      "lines": 62,
      "imports": [
        "react",
        "lucide-react",
        "./utils/nodeUtils"
      ],
      "exports": [
        "NodeHeader"
      ],
      "functions": [
        "NodeHeader"
      ],
      "components": [
        "NodeHeader"
      ],
      "hooks": [
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/GraphHeader.tsx": {
      "file_path": "src/components/DecisionPath/GraphHeader.tsx",
      "size": 900,
      "lines": 20,
      "imports": [
        "react",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "GraphHeader"
      ],
      "functions": [
        "GraphHeader"
      ],
      "components": [
        "GraphHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/ArrowMarkers.tsx": {
      "file_path": "src/components/DecisionPath/ArrowMarkers.tsx",
      "size": 824,
      "lines": 40,
      "imports": [
        "react"
      ],
      "exports": [
        "ArrowMarkers"
      ],
      "functions": [
        "ArrowMarkers"
      ],
      "components": [
        "ArrowMarkers"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/types.ts": {
      "file_path": "src/components/DecisionPath/types.ts",
      "size": 1755,
      "lines": 90,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [
        "useLeave",
        "useEnter"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/GraphNode.tsx": {
      "file_path": "src/components/DecisionPath/GraphNode.tsx",
      "size": 4903,
      "lines": 139,
      "imports": [
        "react",
        "@/components/ui/tooltip",
        "./types",
        "./utils/nodeUtils",
        "./NodeHeader",
        "./NodeOperationsList",
        "./NodeIndicators",
        "./NodeTooltipContent"
      ],
      "exports": [
        "GraphNode"
      ],
      "functions": [
        "toggleExpand",
        "GraphNode"
      ],
      "components": [
        "GraphNode"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEvent",
        "useEnter"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/NodeTooltipContent.tsx": {
      "file_path": "src/components/DecisionPath/NodeTooltipContent.tsx",
      "size": 1412,
      "lines": 46,
      "imports": [
        "react",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "NodeTooltipContent"
      ],
      "functions": [
        "NodeTooltipContent"
      ],
      "components": [
        "NodeTooltipContent"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/index.ts": {
      "file_path": "src/components/DecisionPath/index.ts",
      "size": 58,
      "lines": 3,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 3 lines"
    },
    "src/components/DecisionPath/utils/nodeUtils.ts": {
      "file_path": "src/components/DecisionPath/utils/nodeUtils.ts",
      "size": 6237,
      "lines": 81,
      "imports": [],
      "exports": [
        "getRandomPercentage",
        "getPercentageColor",
        "getRandomTimeAgo",
        "getCurrentTimestamp",
        "generateAgentResponse"
      ],
      "functions": [
        "getRandomPercentage",
        "getPercentageColor",
        "getRandomTimeAgo",
        "getCurrentTimestamp",
        "generateNetworkCapexResponse",
        "generateCustomerLifetimeResponse",
        "generateFallbackResponse",
        "generateAgentResponse",
        "getRandomPercentage",
        "getPercentageColor",
        "getRandomTimeAgo",
        "getCurrentTimestamp",
        "generateAgentResponse"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DecisionPath/utils/pathUtils.ts": {
      "file_path": "src/components/DecisionPath/utils/pathUtils.ts",
      "size": 6304,
      "lines": 206,
      "imports": [
        "../types"
      ],
      "exports": [
        "drawPath",
        "getPathProperties",
        "getPulseEffect",
        "combineGraphNodes"
      ],
      "functions": [
        "targetNode",
        "sourceNode",
        "targetNode",
        "getPulseEffect",
        "modifiedLineageNodes",
        "modifiedEdges",
        "drawPath",
        "getPathProperties",
        "getPulseEffect",
        "combineGraphNodes"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/aspect-ratio.tsx": {
      "file_path": "src/components/ui/aspect-ratio.tsx",
      "size": 140,
      "lines": 6,
      "imports": [
        "@radix-ui/react-aspect-ratio"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/ui/alert-dialog.tsx": {
      "file_path": "src/components/ui/alert-dialog.tsx",
      "size": 4420,
      "lines": 140,
      "imports": [
        "react",
        "@radix-ui/react-alert-dialog",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/pagination.tsx": {
      "file_path": "src/components/ui/pagination.tsx",
      "size": 2751,
      "lines": 118,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [],
      "functions": [
        "Pagination"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/tabs.tsx": {
      "file_path": "src/components/ui/tabs.tsx",
      "size": 1883,
      "lines": 54,
      "imports": [
        "react",
        "@radix-ui/react-tabs",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/card.tsx": {
      "file_path": "src/components/ui/card.tsx",
      "size": 1878,
      "lines": 81,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/slider.tsx": {
      "file_path": "src/components/ui/slider.tsx",
      "size": 1076,
      "lines": 26,
      "imports": [
        "react",
        "@radix-ui/react-slider",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/popover.tsx": {
      "file_path": "src/components/ui/popover.tsx",
      "size": 1230,
      "lines": 30,
      "imports": [
        "react",
        "@radix-ui/react-popover",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/progress.tsx": {
      "file_path": "src/components/ui/progress.tsx",
      "size": 807,
      "lines": 25,
      "imports": [
        "react",
        "@radix-ui/react-progress",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toaster.tsx": {
      "file_path": "src/components/ui/toaster.tsx",
      "size": 801,
      "lines": 35,
      "imports": [
        "@/hooks/toast"
      ],
      "exports": [
        "Toaster"
      ],
      "functions": [
        "Toaster"
      ],
      "components": [],
      "hooks": [
        "useToast"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/input-otp.tsx": {
      "file_path": "src/components/ui/input-otp.tsx",
      "size": 2154,
      "lines": 70,
      "imports": [
        "react",
        "input-otp",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/chart.tsx": {
      "file_path": "src/components/ui/chart.tsx",
      "size": 10466,
      "lines": 364,
      "imports": [
        "react",
        "recharts",
        "@/lib/utils"
      ],
      "exports": [
        "type"
      ],
      "functions": [
        "useChart",
        "getPayloadConfigFromPayload",
        "ChartStyle",
        "tooltipLabel"
      ],
      "components": [],
      "hooks": [
        "useId",
        "useChart",
        "useMemo",
        "useContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/hover-card.tsx": {
      "file_path": "src/components/ui/hover-card.tsx",
      "size": 1184,
      "lines": 28,
      "imports": [
        "react",
        "@radix-ui/react-hover-card",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sheet.tsx": {
      "file_path": "src/components/ui/sheet.tsx",
      "size": 4250,
      "lines": 132,
      "imports": [
        "@radix-ui/react-dialog",
        "class-variance-authority",
        "lucide-react",
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/scroll-area.tsx": {
      "file_path": "src/components/ui/scroll-area.tsx",
      "size": 1642,
      "lines": 47,
      "imports": [
        "react",
        "@radix-ui/react-scroll-area",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/resizable.tsx": {
      "file_path": "src/components/ui/resizable.tsx",
      "size": 1709,
      "lines": 44,
      "imports": [
        "lucide-react",
        "react-resizable-panels",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/label.tsx": {
      "file_path": "src/components/ui/label.tsx",
      "size": 710,
      "lines": 25,
      "imports": [
        "react",
        "@radix-ui/react-label",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sonner.tsx": {
      "file_path": "src/components/ui/sonner.tsx",
      "size": 275,
      "lines": 16,
      "imports": [
        "sonner"
      ],
      "exports": [],
      "functions": [
        "Toaster"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 16 lines"
    },
    "src/components/ui/navigation-menu.tsx": {
      "file_path": "src/components/ui/navigation-menu.tsx",
      "size": 5046,
      "lines": 129,
      "imports": [
        "react",
        "@radix-ui/react-navigation-menu",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/accordion.tsx": {
      "file_path": "src/components/ui/accordion.tsx",
      "size": 1977,
      "lines": 57,
      "imports": [
        "react",
        "@radix-ui/react-accordion",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/drawer.tsx": {
      "file_path": "src/components/ui/drawer.tsx",
      "size": 3007,
      "lines": 117,
      "imports": [
        "react",
        "vaul",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/tooltip.tsx": {
      "file_path": "src/components/ui/tooltip.tsx",
      "size": 1145,
      "lines": 29,
      "imports": [
        "react",
        "@radix-ui/react-tooltip",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/alert.tsx": {
      "file_path": "src/components/ui/alert.tsx",
      "size": 1584,
      "lines": 60,
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/use-toast.ts": {
      "file_path": "src/components/ui/use-toast.ts",
      "size": 201,
      "lines": 6,
      "imports": [
        "@/hooks/use-toast"
      ],
      "exports": [
        "toast"
      ],
      "functions": [],
      "components": [],
      "hooks": [
        "useToast"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/ui/switch.tsx": {
      "file_path": "src/components/ui/switch.tsx",
      "size": 1138,
      "lines": 27,
      "imports": [
        "react",
        "@radix-ui/react-switch",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/calendar.tsx": {
      "file_path": "src/components/ui/calendar.tsx",
      "size": 2620,
      "lines": 65,
      "imports": [
        "react",
        "lucide-react",
        "react-day-picker",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [
        "type"
      ],
      "functions": [
        "Calendar"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/breadcrumb.tsx": {
      "file_path": "src/components/ui/breadcrumb.tsx",
      "size": 2701,
      "lines": 116,
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/radio-group.tsx": {
      "file_path": "src/components/ui/radio-group.tsx",
      "size": 1467,
      "lines": 43,
      "imports": [
        "react",
        "@radix-ui/react-radio-group",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/command.tsx": {
      "file_path": "src/components/ui/command.tsx",
      "size": 4879,
      "lines": 154,
      "imports": [
        "react",
        "@radix-ui/react-dialog",
        "cmdk",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/dialog"
      ],
      "exports": [],
      "functions": [
        "CommandDialog"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toggle-group.tsx": {
      "file_path": "src/components/ui/toggle-group.tsx",
      "size": 1739,
      "lines": 60,
      "imports": [
        "react",
        "@radix-ui/react-toggle-group",
        "class-variance-authority",
        "@/lib/utils",
        "@/components/ui/toggle"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/avatar.tsx": {
      "file_path": "src/components/ui/avatar.tsx",
      "size": 1405,
      "lines": 49,
      "imports": [
        "react",
        "@radix-ui/react-avatar",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/menubar.tsx": {
      "file_path": "src/components/ui/menubar.tsx",
      "size": 7974,
      "lines": 235,
      "imports": [
        "react",
        "@radix-ui/react-menubar",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/dialog.tsx": {
      "file_path": "src/components/ui/dialog.tsx",
      "size": 3835,
      "lines": 121,
      "imports": [
        "react",
        "@radix-ui/react-dialog",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/badge.tsx": {
      "file_path": "src/components/ui/badge.tsx",
      "size": 1127,
      "lines": 36,
      "imports": [
        "react",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "interface"
      ],
      "functions": [
        "Badge"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sidebar.tsx": {
      "file_path": "src/components/ui/sidebar.tsx",
      "size": 317,
      "lines": 9,
      "imports": [],
      "exports": [
        "file",
        "commonly"
      ],
      "functions": [],
      "components": [],
      "hooks": [
        "useSidebar"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 9 lines"
    },
    "src/components/ui/table.tsx": {
      "file_path": "src/components/ui/table.tsx",
      "size": 2765,
      "lines": 118,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/separator.tsx": {
      "file_path": "src/components/ui/separator.tsx",
      "size": 757,
      "lines": 31,
      "imports": [
        "react",
        "@radix-ui/react-separator",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/button.tsx": {
      "file_path": "src/components/ui/button.tsx",
      "size": 1901,
      "lines": 57,
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toggle.tsx": {
      "file_path": "src/components/ui/toggle.tsx",
      "size": 1435,
      "lines": 44,
      "imports": [
        "react",
        "@radix-ui/react-toggle",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/toast.tsx": {
      "file_path": "src/components/ui/toast.tsx",
      "size": 4846,
      "lines": 129,
      "imports": [
        "react",
        "@radix-ui/react-toast",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/checkbox.tsx": {
      "file_path": "src/components/ui/checkbox.tsx",
      "size": 1056,
      "lines": 29,
      "imports": [
        "react",
        "@radix-ui/react-checkbox",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/collapsible.tsx": {
      "file_path": "src/components/ui/collapsible.tsx",
      "size": 315,
      "lines": 10,
      "imports": [
        "@radix-ui/react-collapsible"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 10 lines"
    },
    "src/components/ui/dropdown-menu.tsx": {
      "file_path": "src/components/ui/dropdown-menu.tsx",
      "size": 7295,
      "lines": 199,
      "imports": [
        "react",
        "@radix-ui/react-dropdown-menu",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/select.tsx": {
      "file_path": "src/components/ui/select.tsx",
      "size": 5615,
      "lines": 159,
      "imports": [
        "react",
        "@radix-ui/react-select",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/textarea.tsx": {
      "file_path": "src/components/ui/textarea.tsx",
      "size": 770,
      "lines": 23,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/input.tsx": {
      "file_path": "src/components/ui/input.tsx",
      "size": 791,
      "lines": 23,
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/skeleton.tsx": {
      "file_path": "src/components/ui/skeleton.tsx",
      "size": 261,
      "lines": 16,
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [
        "Skeleton"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 16 lines"
    },
    "src/components/ui/context-menu.tsx": {
      "file_path": "src/components/ui/context-menu.tsx",
      "size": 7246,
      "lines": 199,
      "imports": [
        "react",
        "@radix-ui/react-context-menu",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/form.tsx": {
      "file_path": "src/components/ui/form.tsx",
      "size": 4085,
      "lines": 177,
      "imports": [
        "react",
        "@radix-ui/react-label",
        "@radix-ui/react-slot",
        "@/lib/utils",
        "@/components/ui/label"
      ],
      "exports": [],
      "functions": [
        "useFormField"
      ],
      "components": [],
      "hooks": [
        "useId",
        "useFormContext",
        "useFormField",
        "useContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/carousel.tsx": {
      "file_path": "src/components/ui/carousel.tsx",
      "size": 6210,
      "lines": 261,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [],
      "functions": [
        "useCarousel",
        "onSelect",
        "scrollPrev",
        "scrollNext"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useCarousel",
        "useState",
        "useContext",
        "useEffect",
        "useEmblaCarousel"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/ui/sidebar/sidebar-context.tsx": {
      "file_path": "src/components/ui/sidebar/sidebar-context.tsx",
      "size": 540,
      "lines": 24,
      "imports": [
        "react"
      ],
      "exports": [
        "type",
        "SidebarContext",
        "useSidebar"
      ],
      "functions": [
        "useSidebar",
        "SidebarContext"
      ],
      "components": [],
      "hooks": [
        "useContext",
        "useSidebar"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sidebar/sidebar-components.tsx": {
      "file_path": "src/components/ui/sidebar/sidebar-components.tsx",
      "size": 18913,
      "lines": 631,
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/separator",
        "@/components/ui/sheet",
        "@/components/ui/skeleton",
        "./sidebar-context",
        "./sidebar-provider",
        "./sidebar-utils"
      ],
      "exports": [
        "the"
      ],
      "functions": [
        "width"
      ],
      "components": [],
      "hooks": [
        "useMemo",
        "useSidebar"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sidebar/sidebar-utils.ts": {
      "file_path": "src/components/ui/sidebar/sidebar-utils.ts",
      "size": 1485,
      "lines": 25,
      "imports": [
        "class-variance-authority"
      ],
      "exports": [
        "sidebarMenuButtonVariants"
      ],
      "functions": [
        "sidebarMenuButtonVariants"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ui/sidebar/sidebar-provider.tsx": {
      "file_path": "src/components/ui/sidebar/sidebar-provider.tsx",
      "size": 3459,
      "lines": 121,
      "imports": [
        "react",
        "@radix-ui/react-tooltip",
        "@/lib/utils",
        "@/hooks/use-mobile",
        "./sidebar-context"
      ],
      "exports": [
        "SIDEBAR_COOKIE_NAME",
        "SIDEBAR_COOKIE_MAX_AGE",
        "SIDEBAR_WIDTH",
        "SIDEBAR_WIDTH_MOBILE",
        "SIDEBAR_WIDTH_ICON",
        "SIDEBAR_KEYBOARD_SHORTCUT",
        "SidebarProvider"
      ],
      "functions": [
        "toggleSidebar",
        "handleKeyDown",
        "SIDEBAR_COOKIE_NAME",
        "SIDEBAR_COOKIE_MAX_AGE",
        "SIDEBAR_WIDTH",
        "SIDEBAR_WIDTH_MOBILE",
        "SIDEBAR_WIDTH_ICON",
        "SIDEBAR_KEYBOARD_SHORTCUT",
        "SidebarProvider"
      ],
      "components": [],
      "hooks": [
        "useIsMobile",
        "useCallback",
        "useState",
        "useEffect",
        "useMemo"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 6 functionality indicators"
    },
    "src/components/ui/sidebar/index.ts": {
      "file_path": "src/components/ui/sidebar/index.ts",
      "size": 676,
      "lines": 32,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useSidebar"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/OverviewTab.tsx": {
      "file_path": "src/components/AgentTraceability/OverviewTab.tsx",
      "size": 16624,
      "lines": 334,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "OverviewTab"
      ],
      "functions": [
        "OverviewTab"
      ],
      "components": [
        "OverviewTab"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/types.ts": {
      "file_path": "src/components/AgentTraceability/types.ts",
      "size": 1014,
      "lines": 44,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/GraphTab.tsx": {
      "file_path": "src/components/AgentTraceability/GraphTab.tsx",
      "size": 5996,
      "lines": 168,
      "imports": [
        "react",
        "./components/NodeDetails",
        "./components/conversation/ConversationHistory",
        "./components/GraphVisualizer",
        "./components/mocks"
      ],
      "exports": [
        "GraphTab"
      ],
      "functions": [
        "const",
        "getReasoningOutput",
        "node",
        "getStandardizedNodeId",
        "GraphTab"
      ],
      "components": [
        "GraphTab"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/index.ts": {
      "file_path": "src/components/AgentTraceability/index.ts",
      "size": 285,
      "lines": 6,
      "imports": [],
      "exports": [
        "type",
        "type"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/AgentTraceability/AgentsTab.tsx": {
      "file_path": "src/components/AgentTraceability/AgentsTab.tsx",
      "size": 7192,
      "lines": 154,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "AgentsTab"
      ],
      "functions": [
        "AgentsTab"
      ],
      "components": [
        "AgentsTab"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/AgentTraceability.tsx": {
      "file_path": "src/components/AgentTraceability/AgentTraceability.tsx",
      "size": 4513,
      "lines": 104,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "lucide-react",
        "./OverviewTab",
        "./GraphTab",
        "./types"
      ],
      "exports": [
        "AgentTraceability"
      ],
      "functions": [
        "guardrailNodes",
        "toolNodes",
        "databaseAccesses",
        "AgentTraceability"
      ],
      "components": [
        "AgentTraceability"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/NodeDetails.tsx": {
      "file_path": "src/components/AgentTraceability/components/NodeDetails.tsx",
      "size": 12863,
      "lines": 292,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "./conversation/types",
        "@/components/AgentWorkspace/types"
      ],
      "exports": [
        "NodeDetails"
      ],
      "functions": [
        "node",
        "hasGuardrails",
        "guardrailMessages",
        "triggeredGuardrailTypes",
        "NodeDetails"
      ],
      "components": [
        "NodeDetails"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/index.ts": {
      "file_path": "src/components/AgentTraceability/components/index.ts",
      "size": 166,
      "lines": 5,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 5 lines"
    },
    "src/components/AgentTraceability/components/GraphVisualizer.tsx": {
      "file_path": "src/components/AgentTraceability/components/GraphVisualizer.tsx",
      "size": 2104,
      "lines": 67,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react",
        "@/components/DecisionPath",
        "./mocks"
      ],
      "exports": [
        "GraphVisualizer"
      ],
      "functions": [
        "handleNodeClick",
        "GraphVisualizer"
      ],
      "components": [
        "GraphVisualizer"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/mocks/mockConversationHistory.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/mockConversationHistory.ts",
      "size": 9669,
      "lines": 285,
      "imports": [
        "../conversation/types"
      ],
      "exports": [
        "mockConversationHistory"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/mocks/mockReasoningOutputs.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/mockReasoningOutputs.ts",
      "size": 17347,
      "lines": 359,
      "imports": [
        "@/components/AgentWorkspace/types"
      ],
      "exports": [
        "mockReasoningOutputs"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/mocks/mockOperations.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/mockOperations.ts",
      "size": 2720,
      "lines": 101,
      "imports": [],
      "exports": [
        "mockOperations"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/mocks/index.ts": {
      "file_path": "src/components/AgentTraceability/components/mocks/index.ts",
      "size": 184,
      "lines": 5,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 5 lines"
    },
    "src/components/AgentTraceability/components/conversation/OperationsList.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/OperationsList.tsx",
      "size": 1904,
      "lines": 57,
      "imports": [
        "react",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "OperationsList"
      ],
      "functions": [
        "OperationsList"
      ],
      "components": [
        "OperationsList"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/conversation/MessageItem.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/MessageItem.tsx",
      "size": 3195,
      "lines": 91,
      "imports": [
        "react",
        "@/components/ui/badge",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "MessageItem"
      ],
      "functions": [
        "MessageItem"
      ],
      "components": [
        "MessageItem"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/conversation/ConversationHistory.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/ConversationHistory.tsx",
      "size": 2275,
      "lines": 64,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/ui/scroll-area",
        "./EmptyState",
        "./OperationsList",
        "./MessagesList",
        "./types"
      ],
      "exports": [
        "ConversationHistory"
      ],
      "functions": [
        "ConversationHistory"
      ],
      "components": [
        "ConversationHistory"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/conversation/types.ts": {
      "file_path": "src/components/AgentTraceability/components/conversation/types.ts",
      "size": 479,
      "lines": 21,
      "imports": [],
      "exports": [
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/conversation/index.ts": {
      "file_path": "src/components/AgentTraceability/components/conversation/index.ts",
      "size": 114,
      "lines": 4,
      "imports": [],
      "exports": [
        "type"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/components/AgentTraceability/components/conversation/MessagesList.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/MessagesList.tsx",
      "size": 764,
      "lines": 29,
      "imports": [
        "react",
        "lucide-react",
        "./MessageItem",
        "./types"
      ],
      "exports": [
        "MessagesList"
      ],
      "functions": [
        "MessagesList"
      ],
      "components": [
        "MessagesList"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentTraceability/components/conversation/EmptyState.tsx": {
      "file_path": "src/components/AgentTraceability/components/conversation/EmptyState.tsx",
      "size": 348,
      "lines": 13,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "EmptyState"
      ],
      "functions": [
        "EmptyState"
      ],
      "components": [
        "EmptyState"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 13 lines"
    },
    "src/components/Settings/ApiTestResponse.tsx": {
      "file_path": "src/components/Settings/ApiTestResponse.tsx",
      "size": 9218,
      "lines": 258,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "sonner",
        "lucide-react",
        "@/components/ui/alert"
      ],
      "exports": [
        "ApiTestResponse"
      ],
      "functions": [
        "testApi",
        "renderErrorGuidance",
        "ApiTestResponse"
      ],
      "components": [
        "ApiTestResponse"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "https://\\w+"
      ],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 8 functionality indicators"
    },
    "src/components/Settings/LogoSettings.tsx": {
      "file_path": "src/components/Settings/LogoSettings.tsx",
      "size": 8579,
      "lines": 244,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/contexts/IndustryContext",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "LogoSettings"
      ],
      "functions": [
        "LogoSettings",
        "handleFileUpload",
        "handleUrlChange",
        "handleSave",
        "handleReset",
        "originalIndustry",
        "handlePreview",
        "LogoSettings"
      ],
      "components": [
        "LogoSettings"
      ],
      "hooks": [
        "useRef",
        "useIndustry",
        "useState"
      ],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Settings/VectorStoreSettings.tsx": {
      "file_path": "src/components/Settings/VectorStoreSettings.tsx",
      "size": 8864,
      "lines": 212,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/AgentWorkspace/ApiKeyInput",
        "@/hooks/useSupabaseApiKey",
        "sonner",
        "@/utils/vectorStore"
      ],
      "exports": [
        "VectorStoreSettings"
      ],
      "functions": [
        "VectorStoreSettings",
        "areSettingsValid",
        "testConnection",
        "saveSettings",
        "VectorStoreSettings"
      ],
      "components": [
        "VectorStoreSettings"
      ],
      "hooks": [
        "useSupabaseApiKey",
        "useVectorStore",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Settings/MCPSettings.tsx": {
      "file_path": "src/components/Settings/MCPSettings.tsx",
      "size": 14109,
      "lines": 352,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/dialog",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "lucide-react",
        "sonner"
      ],
      "exports": [
        "MCPSettings"
      ],
      "functions": [
        "saveServers",
        "testMCPConnection",
        "updatedServers",
        "testedServers",
        "errorServers",
        "addMCPServer",
        "removeMCPServer",
        "updatedServers",
        "toggleServerEnabled",
        "updatedServers",
        "getStatusIcon",
        "MCPSettings"
      ],
      "components": [
        "MCPSettings"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Settings/BackendControlPanel.tsx": {
      "file_path": "src/components/Settings/BackendControlPanel.tsx",
      "size": 26716,
      "lines": 572,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "@/components/AgentWorkspace/hooks/useLangChainKey",
        "@/components/AgentWorkspace/ApiKeyInput"
      ],
      "exports": [
        "BackendControlPanel"
      ],
      "functions": [
        "BackendControlPanel",
        "testConnection",
        "BackendControlPanel"
      ],
      "components": [
        "BackendControlPanel"
      ],
      "hooks": [
        "useLangChainKey",
        "useEnabled",
        "useState"
      ],
      "api_calls": [
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Settings/ModelSettings.tsx": {
      "file_path": "src/components/Settings/ModelSettings.tsx",
      "size": 18057,
      "lines": 404,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/AgentWorkspace/ApiKeyInput",
        "@/hooks/useSupabaseApiKey",
        "@/utils/models/modelTypes",
        "sonner"
      ],
      "exports": [
        "ModelSettings"
      ],
      "functions": [
        "ModelSettings",
        "testConnection",
        "saveModelSettings",
        "ModelSettings"
      ],
      "components": [
        "ModelSettings"
      ],
      "hooks": [
        "useSupabaseApiKey",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Settings/GeneralSettings.tsx": {
      "file_path": "src/components/Settings/GeneralSettings.tsx",
      "size": 11961,
      "lines": 330,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/separator",
        "@/components/ui/select",
        "@/components/ui/button",
        "@/components/ui/input",
        "lucide-react",
        "@/contexts/IndustryContext",
        "sonner"
      ],
      "exports": [
        "GeneralSettings"
      ],
      "functions": [
        "LogoCustomization",
        "handleFileUpload",
        "handleUrlChange",
        "handleSave",
        "handleReset",
        "originalIndustry",
        "GeneralSettings",
        "GeneralSettings"
      ],
      "components": [
        "LogoCustomization",
        "GeneralSettings"
      ],
      "hooks": [
        "useRef",
        "useIndustry",
        "useState"
      ],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Settings/ApiSettings.tsx": {
      "file_path": "src/components/Settings/ApiSettings.tsx",
      "size": 3444,
      "lines": 85,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/AgentWorkspace/hooks/useLangChainKey",
        "@/components/AgentWorkspace/ApiKeyInput",
        "lucide-react",
        "@/hooks/useSupabaseApiKey",
        "@/components/ui/button",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "ApiSettings"
      ],
      "functions": [
        "ApiSettings",
        "ApiSettings"
      ],
      "components": [
        "ApiSettings"
      ],
      "hooks": [
        "useLangChainKey",
        "usePublicKey",
        "useSecretKey",
        "useSupabaseApiKey"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Settings/BackendServices.tsx": {
      "file_path": "src/components/Settings/BackendServices.tsx",
      "size": 5854,
      "lines": 153,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "./ModelSettings",
        "./VectorStoreSettings",
        "./MemorySettings",
        "./ApiTestResponse",
        "@/hooks/useSupabaseApiKey",
        "@/integrations/supabase/client",
        "sonner",
        "lucide-react"
      ],
      "exports": [
        "BackendServices"
      ],
      "functions": [
        "BackendServices",
        "createMemoryTables",
        "BackendServices"
      ],
      "components": [
        "BackendServices"
      ],
      "hooks": [
        "useState",
        "useSupabaseApiKey"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Settings/MemorySettings.tsx": {
      "file_path": "src/components/Settings/MemorySettings.tsx",
      "size": 15036,
      "lines": 360,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select",
        "sonner",
        "@/utils/mem0Service",
        "@/hooks/useSupabaseConnection",
        "@/integrations/supabase/client",
        "lucide-react"
      ],
      "exports": [
        "MemorySettings"
      ],
      "functions": [
        "const",
        "MemorySettings",
        "checkConnection",
        "loadAgentMemories",
        "testConnection",
        "handleMemoryToggle",
        "saveSettings",
        "MemorySettings"
      ],
      "components": [
        "MemorySettings"
      ],
      "hooks": [
        "useMem0Service",
        "useState",
        "useSupabaseConnection",
        "useEffect"
      ],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "src/components/AgentMarketplace/ModernAgentMarketplace.tsx": {
      "file_path": "src/components/AgentMarketplace/ModernAgentMarketplace.tsx",
      "size": 33750,
      "lines": 811,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/hooks/use-toast",
        "@/integrations/supabase/client"
      ],
      "exports": [
        "ModernAgentMarketplace",
        "ModernAgentMarketplace"
      ],
      "functions": [
        "getTierColor",
        "getStatusColor",
        "getCategoryIcon",
        "getLLMProvider",
        "getDataSources",
        "getToolsIntegrations",
        "fetchData",
        "handleSubscribeRequest",
        "filteredAgents",
        "categories",
        "isSubscribed",
        "hasPendingRequest",
        "handleSubmit",
        "agent",
        "getRequestStatusColor",
        "agent",
        "activeSubscriptions",
        "pendingRequests",
        "approvedRequests",
        "ModernAgentMarketplace",
        "AgentCard",
        "RequestDialog",
        "SubscriptionsTab",
        "RequestsTab",
        "AnalyticsTab"
      ],
      "components": [
        "ModernAgentMarketplace",
        "AgentCard",
        "RequestDialog",
        "SubscriptionsTab",
        "RequestsTab",
        "AnalyticsTab"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CustomerValueManagement/NextBestOfferTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/NextBestOfferTab.tsx",
      "size": 43619,
      "lines": 825,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "recharts",
        "@/components/ui/table",
        "@/components/ui/select",
        "lucide-react",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "NextBestOfferTab"
      ],
      "functions": [
        "that",
        "NextBestOfferTab",
        "handleCreateOffer",
        "handleRunSimulation",
        "handleExportData",
        "NextBestOfferTab"
      ],
      "components": [
        "NextBestOfferTab"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/CvmModeToggle.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmModeToggle.tsx",
      "size": 1143,
      "lines": 43,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "./context/CvmChatContext",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "CvmModeToggle"
      ],
      "functions": [
        "toggleMode",
        "CvmModeToggle"
      ],
      "components": [
        "CvmModeToggle"
      ],
      "hooks": [
        "useCvmChatContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/SegmentationTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/SegmentationTab.tsx",
      "size": 18707,
      "lines": 376,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/input",
        "@/components/ui/slider",
        "@/components/ui/table",
        "recharts",
        "@/components/ui/badge",
        "@/components/ui/use-toast",
        "lucide-react"
      ],
      "exports": [
        "SegmentationTab"
      ],
      "functions": [
        "SegmentationTab",
        "handleRunSegmentation",
        "handleSaveSegment",
        "handleExportData",
        "SegmentationTab"
      ],
      "components": [
        "SegmentationTab"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/CvmDashboard.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmDashboard.tsx",
      "size": 4707,
      "lines": 125,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "./AgentsTab",
        "./SegmentationTab",
        "./CampaignAnalysisTab",
        "./PropensityModelsTab",
        "./NextBestOfferTab",
        "./DataSourcesTab",
        "./CvmAgenticDecisioning",
        "@/hooks/use-toast"
      ],
      "exports": [
        "CvmDashboard"
      ],
      "functions": [
        "CvmDashboard",
        "handleTabChange",
        "CvmDashboard"
      ],
      "components": [
        "CvmDashboard"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/PropensityModelsTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/PropensityModelsTab.tsx",
      "size": 35151,
      "lines": 689,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "recharts",
        "@/components/ui/table",
        "lucide-react",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "PropensityModelsTab"
      ],
      "functions": [
        "PropensityModelsTab",
        "handleRefreshModel",
        "handleExportInsights",
        "PropensityModelsTab"
      ],
      "components": [
        "PropensityModelsTab"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/DataSourcesTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/DataSourcesTab.tsx",
      "size": 45853,
      "lines": 1039,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/table",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/progress",
        "@/components/ui/dialog",
        "@/components/ui/collapsible",
        "@/components/DataLineage",
        "@/components/DecisionPath",
        "@/components/ui/use-toast",
        "react-hook-form",
        "lucide-react"
      ],
      "exports": [
        "DataSourcesTab"
      ],
      "functions": [
        "DataSourcesTab",
        "handleAddSource",
        "handleRefreshConnections",
        "getCategoryIcon",
        "category",
        "sortedSources",
        "categoryInfo",
        "DataSourcesTab"
      ],
      "components": [
        "DataSourcesTab"
      ],
      "hooks": [
        "useForm",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/CustomerValueManagement/CvmAgenticDecisioning.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmAgenticDecisioning.tsx",
      "size": 21950,
      "lines": 528,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/hooks/use-toast"
      ],
      "exports": [
        "CvmAgenticDecisioning"
      ],
      "functions": [
        "CvmAgenticDecisioning",
        "runSimulation",
        "interval",
        "getSimulationInsights",
        "getSimulationMetrics",
        "getSimulationReasoning",
        "getSimulationRecommendations",
        "getStatusColor",
        "getImpactColor",
        "sim",
        "sim",
        "sim",
        "CvmAgenticDecisioning"
      ],
      "components": [
        "CvmAgenticDecisioning"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/index.ts": {
      "file_path": "src/components/CustomerValueManagement/index.ts",
      "size": 324,
      "lines": 11,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 11 lines"
    },
    "src/components/CustomerValueManagement/AgentsTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/AgentsTab.tsx",
      "size": 6005,
      "lines": 127,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "@/components/ui/button",
        "./context/CvmChatContext"
      ],
      "exports": [
        "AgentsTab"
      ],
      "functions": [
        "AgentsTab",
        "handleAgentClick",
        "AgentCard",
        "AgentsTab"
      ],
      "components": [
        "AgentCard",
        "AgentsTab"
      ],
      "hooks": [
        "useCvmChatContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/CvmChatInterface.tsx": {
      "file_path": "src/components/CustomerValueManagement/CvmChatInterface.tsx",
      "size": 61,
      "lines": 3,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 3 lines"
    },
    "src/components/CustomerValueManagement/CampaignAnalysisTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/CampaignAnalysisTab.tsx",
      "size": 4746,
      "lines": 132,
      "imports": [
        "react",
        "@/components/ui/card",
        "./campaign/CampaignDialog",
        "./campaign/CampaignCalendar",
        "./campaign/CampaignComparison",
        "./campaign/CampaignTemplates",
        "./campaign/CampaignABTesting",
        "./campaign/CampaignNotifications",
        "./campaign/CampaignMainView",
        "./campaign/CampaignHeader",
        "./campaign/CampaignSectionTabs",
        "./campaign/hooks/useCampaignManagement",
        "./context/CvmContext"
      ],
      "exports": [
        "CampaignAnalysisTab"
      ],
      "functions": [
        "CampaignAnalysisTab",
        "handleCalendarClick",
        "handleComparisonClick",
        "handleTemplatesClick",
        "handleNotificationsClick",
        "handleAbTestingClick",
        "CampaignAnalysisTab"
      ],
      "components": [
        "CampaignAnalysisTab"
      ],
      "hooks": [
        "useCampaignManagement",
        "useState",
        "useCvmContext",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CustomerValueManagement/context/CvmChatContext.tsx": {
      "file_path": "src/components/CustomerValueManagement/context/CvmChatContext.tsx",
      "size": 2154,
      "lines": 73,
      "imports": [
        "react"
      ],
      "exports": [
        "CvmChatProvider",
        "useCvmChatContext"
      ],
      "functions": [
        "formatTimestamp",
        "addChatMessage",
        "clearChatMessages",
        "useCvmChatContext",
        "CvmChatProvider",
        "useCvmChatContext"
      ],
      "components": [
        "CvmChatProvider"
      ],
      "hooks": [
        "useCvmChatContext",
        "useState",
        "useContext",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/context/CvmContext.tsx": {
      "file_path": "src/components/CustomerValueManagement/context/CvmContext.tsx",
      "size": 2211,
      "lines": 74,
      "imports": [
        "react",
        "../campaign/types",
        "./CvmChatContext"
      ],
      "exports": [
        "CvmProvider",
        "useCvmContext"
      ],
      "functions": [
        "useCvmContext",
        "CvmProvider",
        "useCvmContext"
      ],
      "components": [
        "CvmProvider"
      ],
      "hooks": [
        "useCvmContext",
        "useState",
        "useContext",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/chat/useCvmChat.ts": {
      "file_path": "src/components/CustomerValueManagement/chat/useCvmChat.ts",
      "size": 3560,
      "lines": 88,
      "imports": [
        "react",
        "../context/CvmContext",
        "../context/CvmChatContext",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "useCvmChat"
      ],
      "functions": [
        "useCvmChat",
        "processQuery",
        "useCvmChat"
      ],
      "components": [],
      "hooks": [
        "useCvmChatContext",
        "useState",
        "useCvmContext",
        "useToast",
        "useCvmChat"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CustomerValueManagement/chat/ChatSuggestions.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/ChatSuggestions.tsx",
      "size": 1525,
      "lines": 46,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "ChatSuggestions"
      ],
      "functions": [
        "ChatSuggestions"
      ],
      "components": [
        "ChatSuggestions"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/chat/CvmAgents.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/CvmAgents.tsx",
      "size": 4724,
      "lines": 102,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/AgentCard",
        "@/components/ui/button",
        "../context/CvmChatContext"
      ],
      "exports": [
        "CvmAgents"
      ],
      "functions": [
        "CvmAgents",
        "handleAgentClick",
        "CvmAgents"
      ],
      "components": [
        "CvmAgents"
      ],
      "hooks": [
        "useCvmChatContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/chat/index.ts": {
      "file_path": "src/components/CustomerValueManagement/chat/index.ts",
      "size": 287,
      "lines": 8,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 8 lines"
    },
    "src/components/CustomerValueManagement/chat/EmptyChatState.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/EmptyChatState.tsx",
      "size": 398,
      "lines": 13,
      "imports": [
        "react",
        "./ChatSuggestions"
      ],
      "exports": [
        "EmptyChatState"
      ],
      "functions": [
        "EmptyChatState"
      ],
      "components": [
        "EmptyChatState"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 13 lines"
    },
    "src/components/CustomerValueManagement/chat/ChatMessage.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/ChatMessage.tsx",
      "size": 1043,
      "lines": 37,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ChatMessage"
      ],
      "functions": [
        "ChatMessage"
      ],
      "components": [
        "ChatMessage"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/chat/ChatInput.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/ChatInput.tsx",
      "size": 1708,
      "lines": 55,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/textarea",
        "@/components/ui/button"
      ],
      "exports": [
        "ChatInput"
      ],
      "functions": [
        "handleSubmit",
        "ChatInput"
      ],
      "components": [
        "ChatInput"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CustomerValueManagement/chat/CvmChatInterface.tsx": {
      "file_path": "src/components/CustomerValueManagement/chat/CvmChatInterface.tsx",
      "size": 3083,
      "lines": 94,
      "imports": [
        "react",
        "@/components/ui/scroll-area",
        "@/components/ui/card",
        "@/components/ui/badge",
        "lucide-react",
        "./ChatInput",
        "./ChatMessage",
        "./ChatSuggestions",
        "./EmptyChatState",
        "./useCvmChat",
        "./CvmAgents",
        "../context/CvmChatContext"
      ],
      "exports": [
        "CvmChatInterface"
      ],
      "functions": [
        "CvmChatInterface",
        "handleSubmit",
        "CvmChatInterface"
      ],
      "components": [
        "CvmChatInterface"
      ],
      "hooks": [
        "useRef",
        "useCvmChat",
        "useCvmChatContext",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignDialog.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignDialog.tsx",
      "size": 12582,
      "lines": 294,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/form",
        "zod",
        "react-hook-form",
        "@hookform/resolvers/zod",
        "./types",
        "@/components/ui/use-toast",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/calendar",
        "date-fns",
        "@/lib/utils"
      ],
      "exports": [
        "CampaignDialog"
      ],
      "functions": [
        "CampaignDialog",
        "handleSubmit",
        "CampaignDialog"
      ],
      "components": [],
      "hooks": [
        "useForm",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/CustomerValueManagement/campaign/CampaignHeader.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignHeader.tsx",
      "size": 2020,
      "lines": 64,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "CampaignHeader"
      ],
      "functions": [
        "CampaignHeader"
      ],
      "components": [
        "CampaignHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignStatus.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignStatus.tsx",
      "size": 3576,
      "lines": 110,
      "imports": [
        "react",
        "@/components/ui/button",
        "./types",
        "@/components/ui/use-toast",
        "lucide-react"
      ],
      "exports": [
        "CampaignStatus"
      ],
      "functions": [
        "CampaignStatus",
        "handlePause",
        "handleResume",
        "handleArchive",
        "CampaignStatus"
      ],
      "components": [],
      "hooks": [
        "useCircle"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignABTesting.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignABTesting.tsx",
      "size": 12610,
      "lines": 333,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react",
        "./types",
        "recharts"
      ],
      "exports": [
        "CampaignABTesting"
      ],
      "functions": [
        "CampaignABTesting",
        "handleCreateTest",
        "handleSelectTest",
        "getChartData",
        "getWinningVariant",
        "CampaignABTesting"
      ],
      "components": [],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignMainView.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignMainView.tsx",
      "size": 4811,
      "lines": 142,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/tabs",
        "./CampaignFilters",
        "./CampaignList",
        "./CampaignDetails",
        "./CampaignExport",
        "./CampaignStatus",
        "./types",
        "../context/CvmContext",
        "./hooks/useCampaignManagement"
      ],
      "exports": [
        "CampaignMainView"
      ],
      "functions": [
        "CampaignMainView"
      ],
      "components": [
        "CampaignMainView"
      ],
      "hooks": [
        "useCampaignManagement",
        "useCvmContext",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignFilters.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignFilters.tsx",
      "size": 3180,
      "lines": 74,
      "imports": [
        "react",
        "@/components/ui/select"
      ],
      "exports": [
        "CampaignFilters"
      ],
      "functions": [
        "CampaignFilters",
        "CampaignFilters"
      ],
      "components": [
        "CampaignFilters"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignCalendar.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignCalendar.tsx",
      "size": 10039,
      "lines": 242,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/calendar",
        "./types",
        "date-fns",
        "lucide-react"
      ],
      "exports": [
        "CampaignCalendar"
      ],
      "functions": [
        "CampaignCalendar",
        "activeCampaigns",
        "getCampaignsForDay",
        "sortedMonths",
        "CampaignCalendar"
      ],
      "components": [],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CustomerValueManagement/campaign/CampaignDetails.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignDetails.tsx",
      "size": 2333,
      "lines": 72,
      "imports": [
        "react",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "lucide-react",
        "./types",
        "./tabs/PerformanceTab",
        "./tabs/TargetTab",
        "./tabs/FinancialsTab"
      ],
      "exports": [
        "CampaignDetails"
      ],
      "functions": [
        "CampaignDetails"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignSectionTabs.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignSectionTabs.tsx",
      "size": 770,
      "lines": 26,
      "imports": [
        "react",
        "@/components/ui/tabs"
      ],
      "exports": [
        "CampaignSectionTabs"
      ],
      "functions": [
        "CampaignSectionTabs"
      ],
      "components": [
        "CampaignSectionTabs"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/types.ts": {
      "file_path": "src/components/CustomerValueManagement/campaign/types.ts",
      "size": 1257,
      "lines": 71,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignNotifications.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignNotifications.tsx",
      "size": 8376,
      "lines": 220,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react",
        "./types",
        "date-fns"
      ],
      "exports": [
        "CampaignNotifications"
      ],
      "functions": [
        "CampaignNotifications",
        "generateNotifications",
        "unreadCount",
        "handleNotificationClick",
        "handleMarkAllAsRead",
        "CampaignNotifications"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignExport.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignExport.tsx",
      "size": 2972,
      "lines": 95,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "CampaignExport",
        "process"
      ],
      "functions": [
        "CampaignExport",
        "handleExport",
        "CampaignExport"
      ],
      "components": [],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/index.ts": {
      "file_path": "src/components/CustomerValueManagement/campaign/index.ts",
      "size": 284,
      "lines": 10,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useCampaignManagement"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 10 lines"
    },
    "src/components/CustomerValueManagement/campaign/CampaignTemplates.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignTemplates.tsx",
      "size": 3158,
      "lines": 90,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/use-toast",
        "lucide-react"
      ],
      "exports": [
        "CampaignTemplates"
      ],
      "functions": [
        "CampaignTemplates",
        "handleUseTemplate",
        "CampaignTemplates"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignList.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignList.tsx",
      "size": 5101,
      "lines": 116,
      "imports": [
        "react",
        "@/components/ui/table",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "lucide-react",
        "./types",
        "../context/CvmContext"
      ],
      "exports": [
        "CampaignList"
      ],
      "functions": [
        "CampaignList",
        "handleSelectCampaign",
        "CampaignList"
      ],
      "components": [],
      "hooks": [
        "useCvmContext",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/CampaignComparison.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/CampaignComparison.tsx",
      "size": 5195,
      "lines": 131,
      "imports": [
        "react",
        "@/components/ui/card",
        "./types",
        "recharts",
        "@/components/ui/select"
      ],
      "exports": [
        "CampaignComparison"
      ],
      "functions": [
        "CampaignComparison",
        "handleSelectCampaign",
        "campaign",
        "CampaignComparison"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/tabs/FinancialsTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/tabs/FinancialsTab.tsx",
      "size": 4280,
      "lines": 98,
      "imports": [
        "react",
        "recharts",
        "../types"
      ],
      "exports": [
        "FinancialsTab"
      ],
      "functions": [
        "FinancialsTab",
        "FinancialsTab"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/tabs/TargetTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/tabs/TargetTab.tsx",
      "size": 2747,
      "lines": 71,
      "imports": [
        "react",
        "recharts"
      ],
      "exports": [
        "TargetTab"
      ],
      "functions": [
        "TargetTab",
        "TargetTab"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/tabs/PerformanceTab.tsx": {
      "file_path": "src/components/CustomerValueManagement/campaign/tabs/PerformanceTab.tsx",
      "size": 3678,
      "lines": 92,
      "imports": [
        "react",
        "recharts",
        "../types"
      ],
      "exports": [
        "PerformanceTab"
      ],
      "functions": [
        "PerformanceTab",
        "PerformanceTab"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CustomerValueManagement/campaign/hooks/useCampaignManagement.ts": {
      "file_path": "src/components/CustomerValueManagement/campaign/hooks/useCampaignManagement.ts",
      "size": 5325,
      "lines": 194,
      "imports": [
        "react",
        "../types",
        "@/components/ui/use-toast",
        "../../context/CvmContext"
      ],
      "exports": [
        "useCampaignManagement",
        "getPerformanceData",
        "getTargetBreakdown",
        "getChartColors"
      ],
      "functions": [
        "useCampaignManagement",
        "handleCreateCampaign",
        "handleEditCampaign",
        "handleSaveCampaign",
        "handleStatusChange",
        "handleRunSimulation",
        "handleUseTemplate",
        "getPerformanceData",
        "getTargetBreakdown",
        "getChartColors",
        "useCampaignManagement",
        "getPerformanceData",
        "getTargetBreakdown",
        "getChartColors"
      ],
      "components": [],
      "hooks": [
        "useCampaignManagement",
        "useState",
        "useCvmContext"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/DataLineageGraph.tsx": {
      "file_path": "src/components/DataLineage/DataLineageGraph.tsx",
      "size": 2033,
      "lines": 70,
      "imports": [
        "react",
        "./GraphNode",
        "./EdgePath",
        "./ArrowMarkers",
        "./GraphLegend",
        "./GraphHeader",
        "./types"
      ],
      "exports": [
        "DataLineageGraph"
      ],
      "functions": [
        "handleNodeClick",
        "DataLineageGraph"
      ],
      "components": [
        "DataLineageGraph"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEnter"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/GraphLegend.tsx": {
      "file_path": "src/components/DataLineage/GraphLegend.tsx",
      "size": 948,
      "lines": 26,
      "imports": [
        "react"
      ],
      "exports": [
        "GraphLegend"
      ],
      "functions": [
        "GraphLegend"
      ],
      "components": [
        "GraphLegend"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/EdgePath.tsx": {
      "file_path": "src/components/DataLineage/EdgePath.tsx",
      "size": 1349,
      "lines": 47,
      "imports": [
        "react",
        "./types",
        "../DecisionPath/utils/pathUtils"
      ],
      "exports": [
        "EdgePath"
      ],
      "functions": [
        "EdgePath"
      ],
      "components": [
        "EdgePath"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/GraphHeader.tsx": {
      "file_path": "src/components/DataLineage/GraphHeader.tsx",
      "size": 1095,
      "lines": 26,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "GraphHeader"
      ],
      "functions": [
        "GraphHeader"
      ],
      "components": [
        "GraphHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/ArrowMarkers.tsx": {
      "file_path": "src/components/DataLineage/ArrowMarkers.tsx",
      "size": 1406,
      "lines": 65,
      "imports": [
        "react"
      ],
      "exports": [
        "ArrowMarkers"
      ],
      "functions": [
        "ArrowMarkers"
      ],
      "components": [
        "ArrowMarkers"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/types.ts": {
      "file_path": "src/components/DataLineage/types.ts",
      "size": 753,
      "lines": 46,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/GraphNode.tsx": {
      "file_path": "src/components/DataLineage/GraphNode.tsx",
      "size": 6074,
      "lines": 154,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/tooltip",
        "./types"
      ],
      "exports": [
        "GraphNode"
      ],
      "functions": [
        "renderIcon",
        "toggleExpand",
        "GraphNode"
      ],
      "components": [
        "GraphNode"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEvent",
        "useEnter"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/DataLineage/index.ts": {
      "file_path": "src/components/DataLineage/index.ts",
      "size": 56,
      "lines": 3,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 3 lines"
    },
    "src/components/DataLineage/utils/pathUtils.ts": {
      "file_path": "src/components/DataLineage/utils/pathUtils.ts",
      "size": 1196,
      "lines": 36,
      "imports": [
        "../types"
      ],
      "exports": [
        "getPathProperties"
      ],
      "functions": [
        "sourceNode",
        "targetNode",
        "getPathProperties"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/AgentChatDialog.tsx": {
      "file_path": "src/components/WealthManagement/AgentChatDialog.tsx",
      "size": 7637,
      "lines": 176,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "lucide-react",
        "@/components/AgentWorkspace/ChatReasoningOutput"
      ],
      "exports": [
        "AgentChatDialog"
      ],
      "functions": [
        "AgentChatDialog",
        "handleSend",
        "AgentChatDialog"
      ],
      "components": [],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/RMWorkflowDashboard.tsx": {
      "file_path": "src/components/WealthManagement/RMWorkflowDashboard.tsx",
      "size": 15334,
      "lines": 386,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "lucide-react"
      ],
      "exports": [
        "RMWorkflowDashboard"
      ],
      "functions": [
        "RMWorkflowDashboard",
        "getStatusColor",
        "getPriorityColor",
        "RMWorkflowDashboard"
      ],
      "components": [
        "RMWorkflowDashboard"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/MarketResearchDashboard.tsx": {
      "file_path": "src/components/WealthManagement/MarketResearchDashboard.tsx",
      "size": 11557,
      "lines": 287,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        "MarketResearchDashboard"
      ],
      "functions": [
        "MarketResearchDashboard",
        "interval",
        "getSentimentColor",
        "getSignalStrengthColor",
        "MarketResearchDashboard"
      ],
      "components": [
        "MarketResearchDashboard"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/WealthAgentsPanel.tsx": {
      "file_path": "src/components/WealthManagement/WealthAgentsPanel.tsx",
      "size": 9709,
      "lines": 215,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "lucide-react",
        "./AgentChatDialog"
      ],
      "exports": [
        "WealthAgentsPanel"
      ],
      "functions": [
        "WealthAgentsPanel",
        "getStatusBadge",
        "WealthAgentsPanel"
      ],
      "components": [
        "WealthAgentsPanel"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/InvestmentRecommendations.tsx": {
      "file_path": "src/components/WealthManagement/InvestmentRecommendations.tsx",
      "size": 14417,
      "lines": 331,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/slider",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        "InvestmentRecommendations"
      ],
      "functions": [
        "InvestmentRecommendations",
        "getStatusBadge",
        "getConfidenceColor",
        "getSentimentColor",
        "InvestmentRecommendations"
      ],
      "components": [
        "InvestmentRecommendations"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/PortfolioOverview.tsx": {
      "file_path": "src/components/WealthManagement/PortfolioOverview.tsx",
      "size": 6683,
      "lines": 172,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "PortfolioOverview"
      ],
      "functions": [
        "PortfolioOverview",
        "formatCurrency",
        "PortfolioOverview"
      ],
      "components": [
        "PortfolioOverview"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/AgentTraceabilityPanel.tsx": {
      "file_path": "src/components/WealthManagement/AgentTraceabilityPanel.tsx",
      "size": 17095,
      "lines": 331,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "lucide-react"
      ],
      "exports": [
        "AgentTraceabilityPanel"
      ],
      "functions": [
        "AgentTraceabilityPanel",
        "toggleStep",
        "getConfidenceColor",
        "selectedReasoning",
        "AgentTraceabilityPanel"
      ],
      "components": [
        "AgentTraceabilityPanel"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [
        "\\.delete\\s*\\("
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/InteractiveChatOverlay.tsx": {
      "file_path": "src/components/WealthManagement/InteractiveChatOverlay.tsx",
      "size": 12531,
      "lines": 338,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "lucide-react"
      ],
      "exports": [
        "InteractiveChatOverlay"
      ],
      "functions": [
        "InteractiveChatOverlay",
        "scrollToBottom",
        "handleClick",
        "getElementDescription",
        "handleSendMessage",
        "generateAIResponse",
        "InteractiveChatOverlay"
      ],
      "components": [
        "InteractiveChatOverlay"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEvent",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 6 functionality indicators"
    },
    "src/components/WealthManagement/InteractiveNewsAnalysis.tsx": {
      "file_path": "src/components/WealthManagement/InteractiveNewsAnalysis.tsx",
      "size": 15816,
      "lines": 362,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/chart",
        "recharts",
        "lucide-react"
      ],
      "exports": [
        "InteractiveNewsAnalysis"
      ],
      "functions": [
        "InteractiveNewsAnalysis",
        "interval",
        "filteredNews",
        "getSentimentColor",
        "getImpactColor",
        "InteractiveNewsAnalysis"
      ],
      "components": [
        "InteractiveNewsAnalysis"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/PortfolioCharts.tsx": {
      "file_path": "src/components/WealthManagement/PortfolioCharts.tsx",
      "size": 13195,
      "lines": 291,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/chart",
        "recharts",
        "lucide-react"
      ],
      "exports": [
        "PortfolioCharts"
      ],
      "functions": [
        "PortfolioCharts",
        "PortfolioCharts"
      ],
      "components": [
        "PortfolioCharts"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WealthManagement/index.ts": {
      "file_path": "src/components/WealthManagement/index.ts",
      "size": 696,
      "lines": 13,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 13 lines"
    },
    "src/components/WealthManagement/FinancialHealthInsights.tsx": {
      "file_path": "src/components/WealthManagement/FinancialHealthInsights.tsx",
      "size": 9742,
      "lines": 230,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "lucide-react"
      ],
      "exports": [
        "FinancialHealthInsights"
      ],
      "functions": [
        "FinancialHealthInsights",
        "getPriorityBadge",
        "getScoreColor",
        "FinancialHealthInsights"
      ],
      "components": [
        "FinancialHealthInsights"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/types.ts": {
      "file_path": "src/components/AgentDashboard/types.ts",
      "size": 422,
      "lines": 21,
      "imports": [],
      "exports": [
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/agentsData.ts": {
      "file_path": "src/components/AgentDashboard/agentsData.ts",
      "size": 2157,
      "lines": 62,
      "imports": [],
      "exports": [
        "agents"
      ],
      "functions": [
        "agents"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/AgentDashboard.tsx": {
      "file_path": "src/components/AgentDashboard/AgentDashboard.tsx",
      "size": 3475,
      "lines": 84,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/table",
        "../AgentCard",
        "../GuardrailsPanel",
        "../PerformanceMetrics",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "./agentsData",
        "./AgentsTable",
        "./AgentDetailsPanel",
        "./ModelMetadata",
        "./types"
      ],
      "exports": [
        "AgentDashboard"
      ],
      "functions": [
        "AgentDashboard",
        "that",
        "handleAgentSelect"
      ],
      "components": [],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/AgentsTable.tsx": {
      "file_path": "src/components/AgentDashboard/AgentsTable.tsx",
      "size": 2964,
      "lines": 73,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/table",
        "@/components/ui/card",
        "./types"
      ],
      "exports": [
        "AgentsTable"
      ],
      "functions": [
        "AgentsTable"
      ],
      "components": [
        "AgentsTable"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/index.ts": {
      "file_path": "src/components/AgentDashboard/index.ts",
      "size": 189,
      "lines": 8,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 8 lines"
    },
    "src/components/AgentDashboard/ModelMetadata.tsx": {
      "file_path": "src/components/AgentDashboard/ModelMetadata.tsx",
      "size": 3617,
      "lines": 84,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/table",
        "@/components/ui/badge",
        "./types"
      ],
      "exports": [
        "ModelMetadata"
      ],
      "functions": [
        "agentsWithModels",
        "ModelMetadata"
      ],
      "components": [
        "ModelMetadata"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/KpiCards.tsx": {
      "file_path": "src/components/AgentDashboard/KpiCards.tsx",
      "size": 1906,
      "lines": 44,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "KpiCards"
      ],
      "functions": [
        "KpiCards"
      ],
      "components": [
        "KpiCards"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentDashboard/AgentDetailsPanel.tsx": {
      "file_path": "src/components/AgentDashboard/AgentDetailsPanel.tsx",
      "size": 3721,
      "lines": 90,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "../AgentCard",
        "../PerformanceMetrics",
        "../GuardrailsPanel",
        "./types"
      ],
      "exports": [
        "AgentDetailsPanel"
      ],
      "functions": [
        "AgentDetailsPanel"
      ],
      "components": [
        "AgentDetailsPanel"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/NetworkAgents.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkAgents.tsx",
      "size": 11697,
      "lines": 277,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "lucide-react",
        "./agents/CoreAgentFramework",
        "./agents/RANIntelligenceAgent",
        "./agents/CustomerAnalyticsAgent",
        "./agents/ServiceImpactAgent"
      ],
      "exports": [
        "NetworkAgents"
      ],
      "functions": [
        "activateAgent",
        "deactivateAgent",
        "NetworkAgents"
      ],
      "components": [
        "NetworkAgents"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/SimulationPanel.tsx": {
      "file_path": "src/components/NetworkTwin/SimulationPanel.tsx",
      "size": 11080,
      "lines": 221,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/slider",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "lucide-react",
        "./SimulationResults"
      ],
      "exports": [
        "SimulationPanel"
      ],
      "functions": [
        "handleRunSimulation",
        "resetSimulation",
        "SimulationPanel"
      ],
      "components": [
        "SimulationPanel"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/GeospatialMap.tsx": {
      "file_path": "src/components/NetworkTwin/GeospatialMap.tsx",
      "size": 14637,
      "lines": 403,
      "imports": [
        "react",
        "mapbox-gl",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "GeospatialMap"
      ],
      "functions": [
        "adds",
        "addCellSites",
        "GeospatialMap"
      ],
      "components": [
        "GeospatialMap"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 9 functionality indicators"
    },
    "src/components/NetworkTwin/SimulationResults.tsx": {
      "file_path": "src/components/NetworkTwin/SimulationResults.tsx",
      "size": 17184,
      "lines": 328,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "lucide-react"
      ],
      "exports": [
        "SimulationResults"
      ],
      "functions": [
        "generateTimeSeriesData",
        "generateRegionData",
        "generateNodeTypeData",
        "SimulationResults"
      ],
      "components": [
        "SimulationResults"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/NetworkTwinHeader.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkTwinHeader.tsx",
      "size": 2218,
      "lines": 47,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "NetworkTwinHeader"
      ],
      "functions": [
        "NetworkTwinHeader",
        "NetworkTwinHeader"
      ],
      "components": [
        "NetworkTwinHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/NetworkSelector.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkSelector.tsx",
      "size": 5046,
      "lines": 120,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./data/networkTwinData"
      ],
      "exports": [
        "NetworkSelector"
      ],
      "functions": [
        "NetworkSelector",
        "getNetworkStats"
      ],
      "components": [],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/NetworkGraph.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkGraph.tsx",
      "size": 4652,
      "lines": 111,
      "imports": [
        "react"
      ],
      "exports": [
        "NetworkGraph"
      ],
      "functions": [
        "getModelDisplayName",
        "getViewDisplayName",
        "getLocationDetail",
        "NetworkGraph"
      ],
      "components": [
        "NetworkGraph"
      ],
      "hooks": [],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/AnalysisPanel.tsx": {
      "file_path": "src/components/NetworkTwin/AnalysisPanel.tsx",
      "size": 14782,
      "lines": 282,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "lucide-react"
      ],
      "exports": [
        "AnalysisPanel"
      ],
      "functions": [
        "AnalysisPanel",
        "AnalysisPanel"
      ],
      "components": [
        "AnalysisPanel"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/NetworkTopology.tsx": {
      "file_path": "src/components/NetworkTwin/NetworkTopology.tsx",
      "size": 7747,
      "lines": 150,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/label",
        "@/components/ui/select",
        "lucide-react",
        "./NetworkGraph",
        "./GeospatialMap"
      ],
      "exports": [
        "NetworkTopology"
      ],
      "functions": [
        "NetworkTopology",
        "NetworkTopology"
      ],
      "components": [
        "NetworkTopology"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/index.ts": {
      "file_path": "src/components/NetworkTwin/index.ts",
      "size": 276,
      "lines": 10,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 10 lines"
    },
    "src/components/NetworkTwin/agents/ServiceImpactAgent.tsx": {
      "file_path": "src/components/NetworkTwin/agents/ServiceImpactAgent.tsx",
      "size": 21182,
      "lines": 530,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "ServiceImpactAgent"
      ],
      "functions": [
        "interval",
        "getPriorityColor",
        "getSeverityColor",
        "getTrendIcon",
        "ServiceImpactAgent"
      ],
      "components": [
        "ServiceImpactAgent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/agents/RANIntelligenceAgent.tsx": {
      "file_path": "src/components/NetworkTwin/agents/RANIntelligenceAgent.tsx",
      "size": 16862,
      "lines": 449,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "RANIntelligenceAgent"
      ],
      "functions": [
        "getStatusColor",
        "getStatusIcon",
        "getActionIcon",
        "interval",
        "executeOptimization",
        "RANIntelligenceAgent"
      ],
      "components": [
        "RANIntelligenceAgent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/agents/CoreAgentFramework.tsx": {
      "file_path": "src/components/NetworkTwin/agents/CoreAgentFramework.tsx",
      "size": 10943,
      "lines": 308,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "lucide-react"
      ],
      "exports": [
        "CoreAgentFramework"
      ],
      "functions": [
        "getAgentIcon",
        "getStatusColor",
        "getPriorityColor",
        "interval",
        "handleAgentAction",
        "CoreAgentFramework"
      ],
      "components": [
        "CoreAgentFramework"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/agents/CustomerAnalyticsAgent.tsx": {
      "file_path": "src/components/NetworkTwin/agents/CustomerAnalyticsAgent.tsx",
      "size": 18586,
      "lines": 461,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "CustomerAnalyticsAgent"
      ],
      "functions": [
        "interval",
        "getRiskColor",
        "getTrendIcon",
        "CustomerAnalyticsAgent"
      ],
      "components": [
        "CustomerAnalyticsAgent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/modals/AgentDetailModal.tsx": {
      "file_path": "src/components/NetworkTwin/modals/AgentDetailModal.tsx",
      "size": 11203,
      "lines": 252,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/card",
        "../data/networkTwinData"
      ],
      "exports": [
        "AgentDetailModal"
      ],
      "functions": [
        "agent",
        "getStatusIcon",
        "getStatusColor",
        "handleAction",
        "AgentDetailModal"
      ],
      "components": [
        "AgentDetailModal"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/modals/SiteDetailModal.tsx": {
      "file_path": "src/components/NetworkTwin/modals/SiteDetailModal.tsx",
      "size": 13844,
      "lines": 312,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/card",
        "../data/networkTwinData"
      ],
      "exports": [
        "SiteDetailModal"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "getCongestionColor",
        "formatCurrency",
        "SiteDetailModal"
      ],
      "components": [
        "SiteDetailModal"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/components/InteractiveNetworkTopology.tsx": {
      "file_path": "src/components/NetworkTwin/components/InteractiveNetworkTopology.tsx",
      "size": 13923,
      "lines": 342,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/badge",
        "../NetworkGraph",
        "../GeospatialMap",
        "../data/networkTwinData"
      ],
      "exports": [
        "InteractiveNetworkTopology"
      ],
      "functions": [
        "filteredSites",
        "getModelDisplayName",
        "getSiteTypeStats",
        "stats",
        "getStatusStats",
        "stats",
        "getCongestionStats",
        "highCongestion",
        "mediumCongestion",
        "lowCongestion",
        "handleSiteCardClick",
        "handleQuickAnalysis",
        "InteractiveNetworkTopology"
      ],
      "components": [
        "InteractiveNetworkTopology"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/hooks/useNetworkTwinNavigation.ts": {
      "file_path": "src/components/NetworkTwin/hooks/useNetworkTwinNavigation.ts",
      "size": 2563,
      "lines": 99,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useNetworkTwinNavigation"
      ],
      "functions": [
        "useNetworkTwinNavigation",
        "updateNavState",
        "navigateToAgent",
        "navigateToSite",
        "navigateToSimulation",
        "navigateToAnalysis",
        "closeModal",
        "setActiveTab",
        "switchNetwork",
        "useNetworkTwinNavigation"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useNetworkTwinNavigation",
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/NetworkTwin/data/networkTwinData.ts": {
      "file_path": "src/components/NetworkTwin/data/networkTwinData.ts",
      "size": 12974,
      "lines": 469,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "networkDatasets",
        "for",
        "cellSites",
        "networkAgents",
        "simulationScenarios",
        "getAgentsByType",
        "getSitesByRegion",
        "getSitesByDistrict",
        "getSimulationsByType"
      ],
      "functions": [
        "getAgentsByType",
        "getSitesByRegion",
        "getSitesByDistrict",
        "getSimulationsByType",
        "networkDatasets",
        "getAgentsByType",
        "getSitesByRegion",
        "getSitesByDistrict",
        "getSimulationsByType"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentFrameworks/index.ts": {
      "file_path": "src/components/AgentFrameworks/index.ts",
      "size": 594,
      "lines": 13,
      "imports": [],
      "exports": [
        "type",
        "type"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 13 lines"
    },
    "src/components/AgentFrameworks/steps/AgentModelConfig.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentModelConfig.tsx",
      "size": 10264,
      "lines": 257,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "lucide-react"
      ],
      "exports": [
        "AgentModelConfig"
      ],
      "functions": [
        "getAvailableProviders",
        "getAvailableModels",
        "handleProviderChange",
        "handleModelChange",
        "AgentModelConfig"
      ],
      "components": [
        "AgentModelConfig"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentFrameworks/steps/AgentValidation.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentValidation.tsx",
      "size": 11399,
      "lines": 309,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "../AgentCreationWizard"
      ],
      "exports": [
        "AgentValidation"
      ],
      "functions": [
        "getValidationStatus",
        "getFrameworkColor",
        "AgentValidation"
      ],
      "components": [
        "AgentValidation"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentFrameworks/steps/AgentCapabilities.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentCapabilities.tsx",
      "size": 11912,
      "lines": 310,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/label"
      ],
      "exports": [
        "AgentCapabilities"
      ],
      "functions": [
        "handleToolToggle",
        "handleMemoryToggle",
        "handleGuardrailToggle",
        "handleDatabaseToggle",
        "tool",
        "AgentCapabilities"
      ],
      "components": [
        "AgentCapabilities"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentFrameworks/steps/AgentBasicInfo.tsx": {
      "file_path": "src/components/AgentFrameworks/steps/AgentBasicInfo.tsx",
      "size": 6171,
      "lines": 155,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "AgentBasicInfo"
      ],
      "functions": [
        "handleRoleSelect",
        "AgentBasicInfo"
      ],
      "components": [
        "AgentBasicInfo"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/GovernanceContent.tsx": {
      "file_path": "src/components/CommandCentre/GovernanceContent.tsx",
      "size": 51600,
      "lines": 1153,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/tabs",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/form",
        "@/components/ui/scroll-area",
        "react-hook-form",
        "zod",
        "@hookform/resolvers/zod",
        "sonner",
        "@/components/AgentTraceability/types",
        "./StepNavigation"
      ],
      "exports": [
        "GovernanceContent"
      ],
      "functions": [
        "handleSubmit",
        "toggleGuardrail",
        "getIconForType",
        "getBadgeForSeverity",
        "getBadgeForAction",
        "globalGuardrails",
        "localGuardrails",
        "renderGuardrailList",
        "handleCreatePiiPolicy",
        "handleFileUpload",
        "newPolicies",
        "handleNextStep",
        "handlePreviousStep",
        "toggleCategory",
        "toggleAutomatedReasoning",
        "renderPolicySetupContent",
        "GovernanceContent"
      ],
      "components": [
        "GovernanceContent"
      ],
      "hooks": [
        "useForm",
        "useState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 7 functionality indicators"
    },
    "src/components/CommandCentre/RealAgentMonitoring.tsx": {
      "file_path": "src/components/CommandCentre/RealAgentMonitoring.tsx",
      "size": 10525,
      "lines": 264,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "RealAgentMonitoring"
      ],
      "functions": [
        "fetchAgents",
        "getStatusIcon",
        "getFrameworkColor",
        "RealAgentMonitoring"
      ],
      "components": [
        "RealAgentMonitoring"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/LocalGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/LocalGuardrails.tsx",
      "size": 3774,
      "lines": 97,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/scroll-area",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "./CreateAgent/ActionDialog",
        "./GuardrailItem",
        "./GuardrailData",
        "sonner"
      ],
      "exports": [
        "LocalGuardrails"
      ],
      "functions": [
        "toggleGuardrail",
        "guardrail",
        "LocalGuardrails"
      ],
      "components": [
        "LocalGuardrails"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/ProjectSelector.tsx": {
      "file_path": "src/components/CommandCentre/ProjectSelector.tsx",
      "size": 3102,
      "lines": 77,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ProjectSelector"
      ],
      "functions": [
        "getProjectName",
        "getProjectIcon",
        "ProjectSelector"
      ],
      "components": [
        "ProjectSelector"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/TelcoProjectData.tsx": {
      "file_path": "src/components/CommandCentre/TelcoProjectData.tsx",
      "size": 14988,
      "lines": 328,
      "imports": [
        "@/components/DecisionPath/types",
        "@/components/AgentTraceability"
      ],
      "exports": [
        "getTelcoProjectData"
      ],
      "functions": [
        "generateNetworkOperationsDecisionNodes",
        "generateNetworkOperationsLineageNodes",
        "generateNetworkOperationsLineageEdges",
        "generateDecisionNodes",
        "generateLineageNodes",
        "generateLineageEdges",
        "getTelcoProjectData",
        "getTelcoProjectData"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/ProjectTiles.tsx": {
      "file_path": "src/components/CommandCentre/ProjectTiles.tsx",
      "size": 13820,
      "lines": 288,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card"
      ],
      "exports": [
        "interface",
        "ProjectTiles"
      ],
      "functions": [
        "toggleCardExpansion",
        "toggleDepartmentExpansion",
        "handleProjectSelect",
        "projectsByDepartment",
        "ProjectTiles"
      ],
      "components": [
        "ProjectTiles"
      ],
      "hooks": [
        "useState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/GlobalGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/GlobalGuardrails.tsx",
      "size": 3147,
      "lines": 85,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/scroll-area",
        "./CreateAgent/ActionDialog",
        "./GuardrailItem",
        "./GuardrailData",
        "sonner"
      ],
      "exports": [
        "GlobalGuardrails"
      ],
      "functions": [
        "toggleGuardrail",
        "guardrail",
        "GlobalGuardrails"
      ],
      "components": [
        "GlobalGuardrails"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/QuickActionsMinimal.tsx": {
      "file_path": "src/components/CommandCentre/QuickActionsMinimal.tsx",
      "size": 1769,
      "lines": 47,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "QuickActionsMinimal"
      ],
      "functions": [
        "QuickActionsMinimal"
      ],
      "components": [
        "QuickActionsMinimal"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgentDialog.tsx",
      "size": 425,
      "lines": 17,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./CreateAgent/WorkingAgentDialog"
      ],
      "exports": [
        "CreateAgentDialog"
      ],
      "functions": [
        "CreateAgentDialog"
      ],
      "components": [
        "CreateAgentDialog"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/components/CommandCentre/GuardrailItem.tsx": {
      "file_path": "src/components/CommandCentre/GuardrailItem.tsx",
      "size": 1605,
      "lines": 51,
      "imports": [
        "react",
        "@/components/ui/switch",
        "lucide-react",
        "./GuardrailData"
      ],
      "exports": [
        "GuardrailItem"
      ],
      "functions": [
        "getSeverityIcon",
        "GuardrailItem"
      ],
      "components": [
        "GuardrailItem"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/MainTabs.tsx": {
      "file_path": "src/components/CommandCentre/MainTabs.tsx",
      "size": 9701,
      "lines": 220,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/tabs",
        "./ProjectTiles",
        "@/components/AgentTraceability",
        "./ToolsContent",
        "./GovernanceContent",
        "./DataAccessContent",
        "./CostContent",
        "./ProjectData",
        "./TelcoProjects",
        "@/contexts/IndustryContext",
        "@/hooks/use-toast",
        "./RealAgentMonitoring"
      ],
      "exports": [
        "MainTabs"
      ],
      "functions": [
        "getProjectNames",
        "handleTabChange",
        "MainTabs"
      ],
      "components": [
        "MainTabs"
      ],
      "hooks": [
        "useToast",
        "useIndustry",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/QuickActionsDebug.tsx": {
      "file_path": "src/components/CommandCentre/QuickActionsDebug.tsx",
      "size": 2212,
      "lines": 69,
      "imports": [
        "react",
        "@/components/ui/button",
        "./CreateAgentDialog"
      ],
      "exports": [
        "QuickActionsDebug"
      ],
      "functions": [
        "handleCreateAgent",
        "QuickActionsDebug"
      ],
      "components": [
        "QuickActionsDebug"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/CommandCentre/DataAccessContent.tsx": {
      "file_path": "src/components/CommandCentre/DataAccessContent.tsx",
      "size": 23931,
      "lines": 538,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/table",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/form",
        "react-hook-form",
        "sonner"
      ],
      "exports": [
        "DataAccessContent"
      ],
      "functions": [
        "getBankingCategories",
        "getTelcoCategories",
        "getInitialDataSources",
        "handleAddDataSource",
        "categoryInfo",
        "DataAccessContent"
      ],
      "components": [
        "DataAccessContent"
      ],
      "hooks": [
        "useForm",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/CommandCentre/StepNavigation.tsx": {
      "file_path": "src/components/CommandCentre/StepNavigation.tsx",
      "size": 1685,
      "lines": 68,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/dialog"
      ],
      "exports": [
        "StepNavigation"
      ],
      "functions": [
        "StepNavigation"
      ],
      "components": [
        "StepNavigation"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/TelcoProjects.tsx": {
      "file_path": "src/components/CommandCentre/TelcoProjects.tsx",
      "size": 5887,
      "lines": 205,
      "imports": [
        "./ProjectTiles"
      ],
      "exports": [
        "getTelcoProjects"
      ],
      "functions": [
        "getTelcoProjects",
        "getTelcoProjects"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/QuickActions.tsx": {
      "file_path": "src/components/CommandCentre/QuickActions.tsx",
      "size": 14234,
      "lines": 384,
      "imports": [
        "react",
        "@/components/ui/button",
        "./CreateAgentDialog",
        "./CreateStrandsWorkflow/CreateStrandsWorkflowDialog",
        "./CreateMultiAgentWorkflow/CreateMultiAgentWorkflowDialog",
        "./CreateLangGraphWorkflow/CreateLangGraphWorkflowDialog",
        "./CreateLangGraphWorkflow/DynamicLangGraphWorkflow",
        "@/components/Ollama"
      ],
      "exports": [
        "QuickActions"
      ],
      "functions": [
        "handleCreateAgent",
        "handleCreateStrandsWorkflow",
        "handleCreateMultiAgentWorkflow",
        "handleCreateLangGraphWorkflow",
        "handleCreateStaticLangGraphWorkflow",
        "handleDataAnalysisTemplate",
        "handleCodeGenerationTemplate",
        "handleResearchTemplate",
        "handleTravelAssistantTemplate",
        "handleOllamaTerminal",
        "handleOllamaModels",
        "handleCreateOllamaAgent",
        "handleCreateStrandsOllamaAgent",
        "QuickActions"
      ],
      "components": [
        "QuickActions"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/CommandCentre/ToolsContent.tsx": {
      "file_path": "src/components/CommandCentre/ToolsContent.tsx",
      "size": 22940,
      "lines": 537,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/card",
        "sonner",
        "@/components/ui/form",
        "react-hook-form",
        "@/components/ui/tabs",
        "@/components/ui/toggle-group",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "ToolsContent"
      ],
      "functions": [
        "handleAddTool",
        "toolCount",
        "category",
        "toolCount",
        "categoryTools",
        "ToolsContent"
      ],
      "components": [
        "ToolsContent"
      ],
      "hooks": [
        "useForm",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/CommandCentre/ProjectData.tsx": {
      "file_path": "src/components/CommandCentre/ProjectData.tsx",
      "size": 21178,
      "lines": 510,
      "imports": [
        "@/components/DecisionPath/types",
        "@/components/AgentTraceability"
      ],
      "exports": [
        "getProjectData",
        "decisionPathMetadata",
        "dataLineageMetadata"
      ],
      "functions": [
        "generateConsumerBankingDecisionNodes",
        "generateConsumerBankingLineageNodes",
        "generateConsumerBankingLineageEdges",
        "generateDecisionNodes",
        "generateLineageNodes",
        "generateLineageEdges",
        "getProjectData",
        "getProjectData",
        "decisionPathMetadata",
        "dataLineageMetadata"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/index.ts": {
      "file_path": "src/components/CommandCentre/index.ts",
      "size": 804,
      "lines": 17,
      "imports": [],
      "exports": [
        "type"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/components/CommandCentre/CostContent.tsx": {
      "file_path": "src/components/CommandCentre/CostContent.tsx",
      "size": 16770,
      "lines": 464,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/chart",
        "recharts",
        "./ProjectSelector",
        "./ProjectData",
        "@/components/ui/checkbox"
      ],
      "exports": [
        "CostContent"
      ],
      "functions": [
        "agentCostData",
        "totalMonthlyCost",
        "totalDailyInferences",
        "projectCosts",
        "agents",
        "highestCostProject",
        "handleProjectSelect",
        "handleProjectCheckboxChange",
        "handleShowAllChange",
        "filteredChartData",
        "CustomTooltip",
        "CostContent"
      ],
      "components": [
        "CostContent"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/UsageReports.tsx": {
      "file_path": "src/components/CommandCentre/UsageReports.tsx",
      "size": 672,
      "lines": 26,
      "imports": [
        "react",
        "lucide-react",
        "./CreateAgent/ActionDialog"
      ],
      "exports": [
        "UsageReports"
      ],
      "functions": [
        "UsageReports"
      ],
      "components": [
        "UsageReports"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/GuardrailData.ts": {
      "file_path": "src/components/CommandCentre/GuardrailData.ts",
      "size": 2478,
      "lines": 95,
      "imports": [],
      "exports": [
        "interface",
        "globalGuardrails",
        "localGuardrails"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateLangGraphWorkflow/CreateLangGraphWorkflowDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateLangGraphWorkflow/CreateLangGraphWorkflowDialog.tsx",
      "size": 25901,
      "lines": 576,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "CreateLangGraphWorkflowDialog"
      ],
      "functions": [
        "handleTemplateSelect",
        "handleBack",
        "handleNext",
        "getComplexityColor",
        "template",
        "template",
        "template",
        "CreateLangGraphWorkflowDialog"
      ],
      "components": [
        "CreateLangGraphWorkflowDialog"
      ],
      "hooks": [
        "useState",
        "useCase"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateLangGraphWorkflow/DynamicLangGraphWorkflow.tsx": {
      "file_path": "src/components/CommandCentre/CreateLangGraphWorkflow/DynamicLangGraphWorkflow.tsx",
      "size": 22917,
      "lines": 600,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "DynamicLangGraphWorkflow"
      ],
      "functions": [
        "analyzeProblem",
        "acceptAnalysis",
        "testAgent",
        "connectAgents",
        "runWorkflowTest",
        "getStepIcon",
        "getColor",
        "DynamicLangGraphWorkflow"
      ],
      "components": [
        "DynamicLangGraphWorkflow"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/CommandCentre/CreateAgent/StrandsOllamaAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/StrandsOllamaAgentDialog.tsx",
      "size": 28526,
      "lines": 669,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/slider",
        "@/hooks/useOllamaModels",
        "@/hooks/useRealStrandsAgents",
        "@/lib/services/RealStrandsService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "StrandsOllamaAgentDialog"
      ],
      "functions": [
        "handleInputChange",
        "handleNestedChange",
        "handleReasoningPatternChange",
        "handleMemoryChange",
        "handleCreateAgent",
        "selectedModel",
        "StrandsOllamaAgentDialog"
      ],
      "components": [
        "StrandsOllamaAgentDialog"
      ],
      "hooks": [
        "useState",
        "useOllamaModels",
        "useRealStrandsAgents",
        "useToast",
        "useEffect"
      ],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/CreateAgent/SimpleMCPToolsSelection.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleMCPToolsSelection.tsx",
      "size": 11804,
      "lines": 331,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label"
      ],
      "exports": [
        "SimpleMCPToolsSelection"
      ],
      "functions": [
        "getCategoryIcon",
        "getFilteredTools",
        "isToolSelected",
        "getComplexityColor",
        "connectedServers",
        "tool",
        "SimpleMCPToolsSelection"
      ],
      "components": [
        "SimpleMCPToolsSelection"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CommandCentre/CreateAgent/SimpleAgentNameField.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleAgentNameField.tsx",
      "size": 761,
      "lines": 29,
      "imports": [
        "react",
        "@/components/ui/input",
        "@/components/ui/label"
      ],
      "exports": [
        "SimpleAgentNameField"
      ],
      "functions": [
        "SimpleAgentNameField"
      ],
      "components": [
        "SimpleAgentNameField"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/SimpleModelSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleModelSelector.tsx",
      "size": 3105,
      "lines": 89,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/button",
        "@/components/ui/label",
        "./types",
        "./ModelSelector/ProviderTabs",
        "./ModelSelector/ModelItem"
      ],
      "exports": [
        "SimpleModelSelector"
      ],
      "functions": [
        "handleModelSelect",
        "SimpleModelSelector"
      ],
      "components": [
        "SimpleModelSelector"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/StepContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/StepContent.tsx",
      "size": 3790,
      "lines": 125,
      "imports": [
        "react",
        "react-hook-form",
        "./types",
        "./AgentNameField",
        "./ModelSelector",
        "./RoleSelector",
        "./MemorySelector",
        "./ToolsGuardrails",
        "./steps/MCPToolsSelection",
        "./steps/KnowledgeBaseStep",
        "./CompletionScreen"
      ],
      "exports": [
        "StepContent"
      ],
      "functions": [
        "StepContent"
      ],
      "components": [
        "StepContent"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/CompletionScreen.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/CompletionScreen.tsx",
      "size": 964,
      "lines": 23,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "CompletionScreen"
      ],
      "functions": [
        "CompletionScreen"
      ],
      "components": [
        "CompletionScreen"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/AgentNameField.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/AgentNameField.tsx",
      "size": 974,
      "lines": 35,
      "imports": [
        "react",
        "@/components/ui/form",
        "@/components/ui/input",
        "react-hook-form"
      ],
      "exports": [
        "AgentNameField"
      ],
      "functions": [
        "AgentNameField"
      ],
      "components": [
        "AgentNameField"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector.tsx",
      "size": 8653,
      "lines": 209,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/button",
        "@/components/ui/form",
        "react-hook-form",
        "@/components/ui/tabs",
        "./types"
      ],
      "exports": [
        "ModelSelector"
      ],
      "functions": [
        "renderCapabilityBar",
        "handleModelSelect",
        "ModelSelector"
      ],
      "components": [
        "ModelSelector"
      ],
      "hooks": [
        "useCallback"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CommandCentre/CreateAgent/SimpleMemorySelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleMemorySelector.tsx",
      "size": 3006,
      "lines": 86,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [
        "SimpleMemorySelector"
      ],
      "functions": [
        "SimpleMemorySelector"
      ],
      "components": [
        "SimpleMemorySelector"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/types.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/types.ts",
      "size": 1444,
      "lines": 79,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/SimpleToolsGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleToolsGuardrails.tsx",
      "size": 4445,
      "lines": 123,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/label",
        "@/components/ui/scroll-area",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "./types"
      ],
      "exports": [
        "SimpleToolsGuardrails"
      ],
      "functions": [
        "SimpleToolsGuardrails"
      ],
      "components": [
        "SimpleToolsGuardrails"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/StepNavigation.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/StepNavigation.tsx",
      "size": 2411,
      "lines": 99,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/dialog"
      ],
      "exports": [
        "StepNavigation"
      ],
      "functions": [
        "prevStep",
        "console",
        "handlePrevClick",
        "handleNextClick",
        "StepNavigation"
      ],
      "components": [
        "StepNavigation"
      ],
      "hooks": [
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/AgentDialogContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/AgentDialogContent.tsx",
      "size": 3103,
      "lines": 105,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "react-hook-form",
        "./types",
        "./components"
      ],
      "exports": [
        "AgentDialogContent"
      ],
      "functions": [
        "handleContentClick",
        "AgentDialogContent"
      ],
      "components": [
        "AgentDialogContent"
      ],
      "hooks": [
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/OllamaAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/OllamaAgentDialog.tsx",
      "size": 50884,
      "lines": 1159,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/slider",
        "@/hooks/useOllamaModels",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast",
        "./steps/EnhancedCapabilities",
        "./steps/EnhancedGuardrails"
      ],
      "exports": [
        "OllamaAgentDialog"
      ],
      "functions": [
        "handleTemplateSelect",
        "handleInputChange",
        "handleNestedChange",
        "handleCreateAgent",
        "missingFields",
        "canCreateAgent",
        "canProceedToNextTab",
        "selectedModel",
        "OllamaAgentDialog"
      ],
      "components": [
        "OllamaAgentDialog"
      ],
      "hooks": [
        "useOllamaModels",
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/CreateAgent/WorkingAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/WorkingAgentDialog.tsx",
      "size": 11675,
      "lines": 391,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/hooks/use-toast",
        "lucide-react",
        "@/components/ui/dialog",
        "./SimpleAgentNameField",
        "./SimpleModelSelector",
        "./SimpleRoleSelector",
        "./SimpleMemorySelector",
        "./SimpleToolsGuardrails",
        "./steps/MCPToolsSelection",
        "./CompletionScreen",
        "./models",
        "./toolsRolesData",
        "./types"
      ],
      "exports": [
        "WorkingAgentDialog"
      ],
      "functions": [
        "nextStep",
        "prevStep",
        "handleNameChange",
        "handleProviderChange",
        "handleModelChange",
        "modelOption",
        "handleRoleSelect",
        "selectedRole",
        "handleDescriptionChange",
        "handleGuardrailToggle",
        "handleDatabaseAccessToggle",
        "handleMemoryToggle",
        "handleToolToggle",
        "handleMCPToolToggle",
        "newMCPTools",
        "serverStillUsed",
        "handleSubmit",
        "resetForm",
        "renderStepContent",
        "WorkingAgentDialog"
      ],
      "components": [
        "WorkingAgentDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 8 functionality indicators"
    },
    "src/components/CommandCentre/CreateAgent/MinimalAgentDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/MinimalAgentDialog.tsx",
      "size": 11006,
      "lines": 297,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/hooks/use-toast",
        "lucide-react",
        "./models"
      ],
      "exports": [
        "MinimalAgentDialog"
      ],
      "functions": [
        "nextStep",
        "prevStep",
        "handleSubmit",
        "renderStepContent",
        "MinimalAgentDialog"
      ],
      "components": [
        "MinimalAgentDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CommandCentre/CreateAgent/DebugWorkingDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/DebugWorkingDialog.tsx",
      "size": 7287,
      "lines": 196,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/hooks/use-toast",
        "lucide-react",
        "./SimpleAgentNameField",
        "./SimpleModelSelector",
        "./SimpleRoleSelector",
        "./SimpleMemorySelector",
        "./SimpleToolsGuardrails",
        "./SimpleMCPToolsSelection",
        "./models",
        "./toolsRolesData"
      ],
      "exports": [
        "DebugWorkingDialog"
      ],
      "functions": [
        "nextStep",
        "prevStep",
        "handleMemoryToggle",
        "handleToolToggle",
        "handleGuardrailToggle",
        "handleMCPToolToggle",
        "handleSubmit",
        "DebugWorkingDialog"
      ],
      "components": [
        "DebugWorkingDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CommandCentre/CreateAgent/RoleSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/RoleSelector.tsx",
      "size": 2422,
      "lines": 73,
      "imports": [
        "react",
        "@/components/ui/form",
        "react-hook-form",
        "./types",
        "@/components/ui/textarea"
      ],
      "exports": [
        "RoleSelector"
      ],
      "functions": [
        "RoleSelector"
      ],
      "components": [
        "RoleSelector"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/index.ts",
      "size": 431,
      "lines": 15,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useAgentForm"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 15 lines"
    },
    "src/components/CommandCentre/CreateAgent/toolsRolesData.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/toolsRolesData.tsx",
      "size": 3185,
      "lines": 100,
      "imports": [
        "react",
        "lucide-react",
        "./types"
      ],
      "exports": [
        "tools",
        "roles"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/SimpleRoleSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/SimpleRoleSelector.tsx",
      "size": 2215,
      "lines": 64,
      "imports": [
        "react",
        "@/components/ui/label",
        "./types",
        "@/components/ui/textarea"
      ],
      "exports": [
        "SimpleRoleSelector"
      ],
      "functions": [
        "SimpleRoleSelector"
      ],
      "components": [
        "SimpleRoleSelector"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/ToolsGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ToolsGuardrails.tsx",
      "size": 6623,
      "lines": 188,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/form",
        "@/components/ui/scroll-area",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "./types",
        "react-hook-form",
        "./types",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "ToolsGuardrails"
      ],
      "functions": [
        "handleGlobalGuardrailChange",
        "handleLocalGuardrailChange",
        "handleDatabaseAccessChange",
        "ToolsGuardrails"
      ],
      "components": [
        "ToolsGuardrails"
      ],
      "hooks": [
        "useCallback"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/ActionDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ActionDialog.tsx",
      "size": 1120,
      "lines": 44,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "lucide-react"
      ],
      "exports": [
        "ActionDialog"
      ],
      "functions": [
        "ActionDialog"
      ],
      "components": [
        "ActionDialog"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/MemorySelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/MemorySelector.tsx",
      "size": 3120,
      "lines": 85,
      "imports": [
        "react",
        "react-hook-form",
        "./types",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [
        "MemorySelector"
      ],
      "functions": [
        "MemorySelector"
      ],
      "components": [
        "MemorySelector"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/meta.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/meta.ts",
      "size": 988,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "metaModels"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/amazon.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/amazon.ts",
      "size": 669,
      "lines": 34,
      "imports": [
        "../types"
      ],
      "exports": [
        "amazonModels"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/ollama.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/ollama.ts",
      "size": 3005,
      "lines": 141,
      "imports": [
        "../types"
      ],
      "exports": [
        "ollamaModels"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/anthropic.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/anthropic.ts",
      "size": 1014,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "anthropicModels"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/deepseek.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/deepseek.ts",
      "size": 987,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "deepseekModels"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/openai.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/openai.ts",
      "size": 1003,
      "lines": 48,
      "imports": [
        "../types"
      ],
      "exports": [
        "openaiModels"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/models/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/models/index.ts",
      "size": 1291,
      "lines": 42,
      "imports": [
        "../types",
        "./openai",
        "./anthropic",
        "./meta",
        "./deepseek",
        "./amazon",
        "./ollama"
      ],
      "exports": [
        "AIModels",
        "getDynamicOllamaModels"
      ],
      "functions": [
        "getDynamicOllamaModels",
        "getDynamicOllamaModels"
      ],
      "components": [],
      "hooks": [
        "useOllamaModels"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/CreateAgent/components/AgentFormWrapper.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/components/AgentFormWrapper.tsx",
      "size": 3173,
      "lines": 108,
      "imports": [
        "react",
        "@/components/ui/form",
        "react-hook-form",
        "../types",
        "../StepContent",
        "../StepNavigation",
        "../types"
      ],
      "exports": [
        "AgentFormWrapper"
      ],
      "functions": [
        "handleFormSubmit",
        "AgentFormWrapper"
      ],
      "components": [
        "AgentFormWrapper"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/components/AgentDialogHeader.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/components/AgentDialogHeader.tsx",
      "size": 549,
      "lines": 19,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/dialog"
      ],
      "exports": [
        "AgentDialogHeader"
      ],
      "functions": [
        "AgentDialogHeader"
      ],
      "components": [
        "AgentDialogHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 19 lines"
    },
    "src/components/CommandCentre/CreateAgent/components/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/components/index.ts",
      "size": 74,
      "lines": 4,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/components/CommandCentre/CreateAgent/steps/MCPToolsSelection.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/MCPToolsSelection.tsx",
      "size": 14168,
      "lines": 399,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/lib/services/MCPGatewayService"
      ],
      "exports": [
        "MCPToolsSelection"
      ],
      "functions": [
        "loadMCPData",
        "getCategoryIcon",
        "getFilteredTools",
        "isToolSelected",
        "getComplexityColor",
        "getServerStatusColor",
        "connectedServers",
        "server",
        "tool",
        "MCPToolsSelection"
      ],
      "components": [
        "MCPToolsSelection"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/CreateAgent/steps/EnhancedGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/EnhancedGuardrails.tsx",
      "size": 30087,
      "lines": 732,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/alert",
        "@/components/ui/checkbox",
        "@/components/ui/badge"
      ],
      "exports": [
        "EnhancedGuardrails"
      ],
      "functions": [
        "updateGuardrails",
        "addToArray",
        "removeFromArray",
        "addCustomRule",
        "removeCustomRule",
        "updateCustomRule",
        "EnhancedGuardrails"
      ],
      "components": [
        "EnhancedGuardrails"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/steps/KnowledgeBaseStep.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/KnowledgeBaseStep.tsx",
      "size": 11748,
      "lines": 296,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/RAG/DocumentUploader",
        "@/components/RAG/KnowledgeBaseSelector",
        "@/components/RAG/RAGConfiguration",
        "@/lib/services/RAGService",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "KnowledgeBaseStep"
      ],
      "functions": [
        "handleCreateNewKnowledgeBase",
        "handleDocumentUpload",
        "getSelectedKnowledgeBasesInfo",
        "KnowledgeBaseStep"
      ],
      "components": [
        "KnowledgeBaseStep"
      ],
      "hooks": [
        "useIndustryContext",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/CreateAgent/steps/EnhancedCapabilities.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/steps/EnhancedCapabilities.tsx",
      "size": 5491,
      "lines": 156,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/label",
        "@/components/ui/select"
      ],
      "exports": [
        "EnhancedCapabilities"
      ],
      "functions": [
        "EnhancedCapabilities"
      ],
      "components": [
        "EnhancedCapabilities"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/ModelItem.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/ModelItem.tsx",
      "size": 3069,
      "lines": 97,
      "imports": [
        "react",
        "lucide-react",
        "../types",
        "./CapabilityBar"
      ],
      "exports": [
        "ModelItem"
      ],
      "functions": [
        "handleClick",
        "ModelItem"
      ],
      "components": [
        "ModelItem"
      ],
      "hooks": [
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/CapabilityBar.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/CapabilityBar.tsx",
      "size": 438,
      "lines": 22,
      "imports": [
        "react"
      ],
      "exports": [
        "CapabilityBar"
      ],
      "functions": [
        "CapabilityBar"
      ],
      "components": [
        "CapabilityBar"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/ModelSelector.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/ModelSelector.tsx",
      "size": 4177,
      "lines": 118,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/popover",
        "@/components/ui/button",
        "@/components/ui/form",
        "react-hook-form",
        "../types",
        "./ProviderTabs",
        "./ModelItem"
      ],
      "exports": [
        "ModelSelector"
      ],
      "functions": [
        "handleModelSelect",
        "ModelSelector"
      ],
      "components": [
        "ModelSelector"
      ],
      "hooks": [
        "useCallback",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/ProviderTabs.tsx": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/ProviderTabs.tsx",
      "size": 1780,
      "lines": 62,
      "imports": [
        "react",
        "@/components/ui/tabs"
      ],
      "exports": [
        "ProviderTabs"
      ],
      "functions": [
        "ProviderTabs"
      ],
      "components": [
        "ProviderTabs"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateAgent/ModelSelector/index.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/ModelSelector/index.ts",
      "size": 128,
      "lines": 6,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/CommandCentre/CreateAgent/hooks/useAgentForm.ts": {
      "file_path": "src/components/CommandCentre/CreateAgent/hooks/useAgentForm.ts",
      "size": 10889,
      "lines": 374,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../types",
        "../toolsRolesData"
      ],
      "exports": [
        "useAgentForm"
      ],
      "functions": [
        "called",
        "useAgentForm",
        "resetForm",
        "cancelSubmission",
        "nextStep",
        "prevStep",
        "handleProviderChange",
        "handleRoleSelect",
        "selectedRole",
        "handleMemoryToggle",
        "handleToolToggle",
        "handleMCPToolToggle",
        "newMCPTools",
        "serverStillUsed",
        "newMCPServers",
        "onSubmit",
        "handleRAGEnabledChange",
        "handleKnowledgeBasesChange",
        "handleRAGConfigChange",
        "useAgentForm"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useForm",
        "useAgentForm",
        "useState",
        "useToast",
        "useEffect",
        "useRef"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 13 functionality indicators"
    },
    "src/components/CommandCentre/CreateMultiAgentWorkflow/CreateMultiAgentWorkflowDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateMultiAgentWorkflow/CreateMultiAgentWorkflowDialog.tsx",
      "size": 12739,
      "lines": 325,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/hooks/use-toast",
        "lucide-react"
      ],
      "exports": [
        "CreateMultiAgentWorkflowDialog"
      ],
      "functions": [
        "addAgent",
        "removeAgent",
        "updateAgent",
        "handleSubmit",
        "TypeIcon",
        "CreateMultiAgentWorkflowDialog"
      ],
      "components": [
        "CreateMultiAgentWorkflowDialog"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowDialogContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowDialogContent.tsx",
      "size": 4017,
      "lines": 118,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/progress",
        "./StrandsWorkflowStepContent",
        "./StrandsWorkflowStepNavigation",
        "react-hook-form",
        "./types"
      ],
      "exports": [
        "StrandsWorkflowDialogContent"
      ],
      "functions": [
        "StrandsWorkflowDialogContent"
      ],
      "components": [
        "StrandsWorkflowDialogContent"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepNavigation.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepNavigation.tsx",
      "size": 3256,
      "lines": 108,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "react-hook-form",
        "./types"
      ],
      "exports": [
        "StrandsWorkflowStepNavigation"
      ],
      "functions": [
        "canProceed",
        "StrandsWorkflowStepNavigation"
      ],
      "components": [
        "StrandsWorkflowStepNavigation"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 6 functionality indicators"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/CreateStrandsWorkflowDialog.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/CreateStrandsWorkflowDialog.tsx",
      "size": 2671,
      "lines": 92,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./StrandsWorkflowDialogContent",
        "./hooks/useStrandsWorkflowForm",
        "./models",
        "./strandsData"
      ],
      "exports": [
        "CreateStrandsWorkflowDialog"
      ],
      "functions": [
        "handleOpenChange",
        "CreateStrandsWorkflowDialog"
      ],
      "components": [
        "CreateStrandsWorkflowDialog"
      ],
      "hooks": [
        "useStrandsWorkflowForm",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/types.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/types.ts",
      "size": 2258,
      "lines": 94,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepContent.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/StrandsWorkflowStepContent.tsx",
      "size": 3174,
      "lines": 105,
      "imports": [
        "react",
        "react-hook-form",
        "./types",
        "./steps/StrandsBasicInfo",
        "./steps/StrandsModelConfig",
        "./steps/StrandsReasoningPatterns",
        "./steps/StrandsMemoryConfig",
        "./steps/StrandsWorkflowSteps",
        "./steps/StrandsToolsGuardrails"
      ],
      "exports": [
        "StrandsWorkflowStepContent"
      ],
      "functions": [
        "StrandsWorkflowStepContent"
      ],
      "components": [
        "StrandsWorkflowStepContent"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/index.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/index.ts",
      "size": 614,
      "lines": 16,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useStrandsWorkflowForm"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 16 lines"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/models.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/models.ts",
      "size": 3002,
      "lines": 95,
      "imports": [
        "./types"
      ],
      "exports": [
        "StrandsModels",
        "getModelsByProvider",
        "getModelCapabilities",
        "supportsReasoningPattern"
      ],
      "functions": [
        "getModelsByProvider",
        "getModelCapabilities",
        "model",
        "supportsReasoningPattern",
        "model",
        "getModelsByProvider",
        "getModelCapabilities",
        "supportsReasoningPattern"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/strandsData.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/strandsData.ts",
      "size": 6170,
      "lines": 169,
      "imports": [
        "./types"
      ],
      "exports": [
        "reasoningPatterns",
        "strandsTools",
        "memoryTypes"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsBasicInfo.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsBasicInfo.tsx",
      "size": 3606,
      "lines": 90,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsBasicInfo"
      ],
      "functions": [
        "StrandsBasicInfo"
      ],
      "components": [
        "StrandsBasicInfo"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsReasoningPatterns.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsReasoningPatterns.tsx",
      "size": 5024,
      "lines": 122,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsReasoningPatterns"
      ],
      "functions": [
        "isPatternSupported",
        "StrandsReasoningPatterns"
      ],
      "components": [
        "StrandsReasoningPatterns"
      ],
      "hooks": [
        "useCase"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsModelConfig.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsModelConfig.tsx",
      "size": 8319,
      "lines": 213,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/slider",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsModelConfig"
      ],
      "functions": [
        "providerModels",
        "handleModelSelect",
        "model",
        "updatePerformanceConfig",
        "StrandsModelConfig"
      ],
      "components": [
        "StrandsModelConfig"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsToolsGuardrails.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsToolsGuardrails.tsx",
      "size": 7306,
      "lines": 202,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsToolsGuardrails"
      ],
      "functions": [
        "handleGuardrailToggle",
        "toolsByCategory",
        "StrandsToolsGuardrails"
      ],
      "components": [
        "StrandsToolsGuardrails"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsWorkflowSteps.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsWorkflowSteps.tsx",
      "size": 8614,
      "lines": 197,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsWorkflowSteps"
      ],
      "functions": [
        "StrandsWorkflowSteps"
      ],
      "components": [
        "StrandsWorkflowSteps"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsMemoryConfig.tsx": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/steps/StrandsMemoryConfig.tsx",
      "size": 4907,
      "lines": 118,
      "imports": [
        "react",
        "react-hook-form",
        "@/components/ui/checkbox",
        "../types",
        "lucide-react"
      ],
      "exports": [
        "StrandsMemoryConfig"
      ],
      "functions": [
        "StrandsMemoryConfig"
      ],
      "components": [
        "StrandsMemoryConfig"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/CreateStrandsWorkflow/hooks/useStrandsWorkflowForm.ts": {
      "file_path": "src/components/CommandCentre/CreateStrandsWorkflow/hooks/useStrandsWorkflowForm.ts",
      "size": 7664,
      "lines": 249,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../types",
        "@/lib/frameworks/StrandsSDK"
      ],
      "exports": [
        "useStrandsWorkflowForm"
      ],
      "functions": [
        "useStrandsWorkflowForm",
        "cleanup",
        "resetForm",
        "nextStep",
        "prevStep",
        "handleProviderChange",
        "handleReasoningPatternToggle",
        "handleMemoryToggle",
        "handleToolToggle",
        "handleWorkflowStepAdd",
        "handleWorkflowStepRemove",
        "newSteps",
        "handleWorkflowStepUpdate",
        "newSteps",
        "cancelSubmission",
        "onSubmit",
        "useStrandsWorkflowForm"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useForm",
        "useStrandsWorkflowForm",
        "useState",
        "useToast",
        "useRef"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/StrandsIntegration/StrandsAgentCreator.tsx": {
      "file_path": "src/components/CommandCentre/StrandsIntegration/StrandsAgentCreator.tsx",
      "size": 0,
      "lines": 1,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 1 lines"
    },
    "src/components/CommandCentre/hooks/useAgentForm.ts": {
      "file_path": "src/components/CommandCentre/hooks/useAgentForm.ts",
      "size": 2149,
      "lines": 104,
      "imports": [
        "react",
        "react-hook-form",
        "../CreateAgent/types"
      ],
      "exports": [
        "useAgentForm"
      ],
      "functions": [
        "useAgentForm",
        "useAgentForm"
      ],
      "components": [],
      "hooks": [
        "useFormCleanup",
        "useForm",
        "useAgentForm",
        "useState",
        "useFormSubmission",
        "useFormNavigation",
        "useFormOptions",
        "useRef"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormSubmission.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormSubmission.ts",
      "size": 1877,
      "lines": 69,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../../CreateAgent/types"
      ],
      "exports": [
        "useFormSubmission"
      ],
      "functions": [
        "onSubmit",
        "useFormSubmission"
      ],
      "components": [],
      "hooks": [
        "useFormSubmission",
        "useCallback",
        "useToast",
        "useRef"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormNavigation.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormNavigation.ts",
      "size": 996,
      "lines": 32,
      "imports": [
        "react",
        "react-hook-form",
        "@/hooks/use-toast",
        "../../CreateAgent/types"
      ],
      "exports": [
        "useFormNavigation"
      ],
      "functions": [
        "nextStep",
        "prevStep",
        "useFormNavigation"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useToast",
        "useFormNavigation"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormCleanup.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormCleanup.ts",
      "size": 1435,
      "lines": 48,
      "imports": [
        "react",
        "react-hook-form",
        "../../CreateAgent/types"
      ],
      "exports": [
        "useFormCleanup"
      ],
      "functions": [
        "cleanup",
        "resetForm",
        "cancelSubmission",
        "useFormCleanup"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useRef",
        "useFormCleanup"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CommandCentre/hooks/agent-form/index.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/index.ts",
      "size": 143,
      "lines": 6,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useFormSubmission",
        "useFormOptions",
        "useFormNavigation",
        "useFormCleanup"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/components/CommandCentre/hooks/agent-form/useFormOptions.ts": {
      "file_path": "src/components/CommandCentre/hooks/agent-form/useFormOptions.ts",
      "size": 1851,
      "lines": 60,
      "imports": [
        "react",
        "react-hook-form",
        "../../CreateAgent/types",
        "../../CreateAgent/toolsRolesData"
      ],
      "exports": [
        "useFormOptions"
      ],
      "functions": [
        "handleProviderChange",
        "handleRoleSelect",
        "selectedRole",
        "handleMemoryToggle",
        "handleToolToggle",
        "useFormOptions"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useFormOptions"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/RAG/DocumentUploader.tsx": {
      "file_path": "src/components/RAG/DocumentUploader.tsx",
      "size": 10707,
      "lines": 324,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/lib/services/RAGService"
      ],
      "exports": [
        "DocumentUploader"
      ],
      "functions": [
        "handleDragOver",
        "handleDragLeave",
        "handleDrop",
        "handleFileSelect",
        "handleFiles",
        "removeFile",
        "uploadFiles",
        "pendingFiles",
        "progressInterval",
        "filesToUpload",
        "document",
        "clearCompleted",
        "getStatusIcon",
        "getStatusColor",
        "pendingCount",
        "successCount",
        "errorCount",
        "DocumentUploader"
      ],
      "components": [
        "DocumentUploader"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 10 functionality indicators"
    },
    "src/components/RAG/KnowledgeBaseSelector.tsx": {
      "file_path": "src/components/RAG/KnowledgeBaseSelector.tsx",
      "size": 9826,
      "lines": 267,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/lib/services/RAGService",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "KnowledgeBaseSelector"
      ],
      "functions": [
        "loadKnowledgeBases",
        "filteredBases",
        "handleSelection",
        "getIndustryColor",
        "formatDate",
        "totalSize",
        "KnowledgeBaseSelector"
      ],
      "components": [
        "KnowledgeBaseSelector"
      ],
      "hooks": [
        "useMemo",
        "useIndustryContext",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/RAG/RAGConfiguration.tsx": {
      "file_path": "src/components/RAG/RAGConfiguration.tsx",
      "size": 14223,
      "lines": 361,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/ui/select",
        "@/components/ui/tooltip",
        "@/components/ui/badge",
        "@/lib/services/RAGService",
        "@/lib/services/OllamaService",
        "@/contexts/IndustryContext"
      ],
      "exports": [
        "RAGConfiguration"
      ],
      "functions": [
        "loadModels",
        "modelNames",
        "handleConfigChange",
        "loadIndustryDefaults",
        "resetToDefaults",
        "getEmbeddingModels",
        "getGenerationModels",
        "getPerformanceLevel",
        "RAGConfiguration"
      ],
      "components": [
        "RAGConfiguration"
      ],
      "hooks": [
        "useIndustryContext",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/WorkflowTemplates/WorkflowTemplateSelector.tsx": {
      "file_path": "src/components/WorkflowTemplates/WorkflowTemplateSelector.tsx",
      "size": 14756,
      "lines": 385,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "interface",
        "WorkflowTemplateSelector"
      ],
      "functions": [
        "industryTemplates",
        "getComplexityColor",
        "getFrameworkColor",
        "WorkflowTemplateSelector"
      ],
      "components": [
        "WorkflowTemplateSelector"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/WorkflowTemplates/index.ts": {
      "file_path": "src/components/WorkflowTemplates/index.ts",
      "size": 148,
      "lines": 4,
      "imports": [],
      "exports": [
        "type"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmPropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmPropertiesPanel.tsx",
      "size": 19663,
      "lines": 447,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/tabs",
        "@xyflow/react"
      ],
      "exports": [
        "TelcoCvmPropertiesPanel"
      ],
      "functions": [
        "handleSave",
        "getStatusColor",
        "getDefaultPrompt",
        "getAvailableTools",
        "getGuardrails",
        "getPerformanceMetrics",
        "TelcoCvmPropertiesPanel"
      ],
      "components": [
        "TelcoCvmPropertiesPanel"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/ModernBankingAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ModernBankingAgentPalette.tsx",
      "size": 7915,
      "lines": 210,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge"
      ],
      "exports": [
        "ModernBankingAgentPalette"
      ],
      "functions": [
        "ModernBankingAgentPalette"
      ],
      "components": [
        "ModernBankingAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/ComplianceMonitor.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ComplianceMonitor.tsx",
      "size": 5953,
      "lines": 161,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "ComplianceMonitor"
      ],
      "functions": [
        "getStatusColor",
        "getStatusIcon",
        "ComplianceMonitor"
      ],
      "components": [
        "ComplianceMonitor"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/PropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/PropertiesPanel.tsx",
      "size": 44547,
      "lines": 1034,
      "imports": [
        "react",
        "@xyflow/react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useUtilityConfiguration"
      ],
      "exports": [
        "EnhancedPropertiesPanel",
        "PropertiesPanel"
      ],
      "functions": [
        "updateLocalData",
        "getNodeIcon",
        "getNodeTitle",
        "renderDecisionProperties",
        "renderHandoffProperties",
        "renderAggregatorProperties",
        "renderMonitorProperties",
        "renderHumanProperties",
        "renderMemoryProperties",
        "renderGuardrailProperties",
        "renderAgentProperties",
        "renderDefaultProperties",
        "renderProperties",
        "EnhancedPropertiesPanel",
        "PropertiesPanel"
      ],
      "components": [
        "EnhancedPropertiesPanel"
      ],
      "hooks": [
        "useState",
        "useUtilityConfiguration",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 7 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/WorkflowValidationPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowValidationPanel.tsx",
      "size": 9854,
      "lines": 241,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "WorkflowValidationPanel"
      ],
      "functions": [
        "getScoreColor",
        "getRiskColor",
        "WorkflowValidationPanel"
      ],
      "components": [
        "WorkflowValidationPanel"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/WorkspaceHeader.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkspaceHeader.tsx",
      "size": 1359,
      "lines": 33,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "WorkspaceHeader"
      ],
      "functions": [
        "WorkspaceHeader",
        "WorkspaceHeader"
      ],
      "components": [
        "WorkspaceHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/BlankWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/BlankWorkspace.tsx",
      "size": 23299,
      "lines": 622,
      "imports": [
        "react",
        "lucide-react",
        "./ModernWorkspaceHeader",
        "./AgentPalette",
        "./PropertiesPanel",
        "./BankingWorkflowToolbar",
        "./config/DecisionNodeConfigDialog",
        "./config/HandoffNodeConfigDialog",
        "@/hooks/useUtilityConfiguration",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernMemoryNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ModernHandoffNode",
        "./nodes/ModernAggregatorNode",
        "./nodes/ModernMonitorNode",
        "./nodes/ModernHumanNode",
        "./nodes/ModernMCPToolNode",
        "./WorkflowConfigDialog",
        "./edges/EnhancedConnectionEdge",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useOllamaAgentsForPalette"
      ],
      "exports": [
        "BlankWorkspace"
      ],
      "functions": [
        "BlankWorkspace",
        "onNodeClick",
        "updateNodeData",
        "handleOpenConfiguration",
        "node",
        "addAgent",
        "handleMCPToolSelect",
        "toolExists",
        "addUtilityNode",
        "getDefaultConfig",
        "getDefaultDescription",
        "handleConfigSave",
        "handleUtilityConfigSave",
        "handleUtilityConfigCancel",
        "runWorkflow",
        "targetNode",
        "toolExists",
        "BlankWorkspace"
      ],
      "components": [
        "BlankWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useNodesState",
        "useOllamaAgentsForPalette",
        "useUtilityConfiguration",
        "useEdgesState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinPropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinPropertiesPanel.tsx",
      "size": 16749,
      "lines": 334,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/ui/textarea",
        "@/components/ui/tabs",
        "@xyflow/react"
      ],
      "exports": [
        "NetworkTwinPropertiesPanel"
      ],
      "functions": [
        "NetworkTwinPropertiesPanel",
        "getAgentIcon",
        "handleSave",
        "updateLocalData",
        "getStatusColor",
        "getDefaultPrompt",
        "getAvailableTools",
        "getGuardrails",
        "NetworkTwinPropertiesPanel"
      ],
      "components": [],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/StrandsExecutionOverlay.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/StrandsExecutionOverlay.tsx",
      "size": 8690,
      "lines": 212,
      "imports": [
        "react",
        "lucide-react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "StrandsExecutionOverlay"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "formatDuration",
        "StrandsExecutionOverlay"
      ],
      "components": [
        "StrandsExecutionOverlay"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/ChatConfigurationWizard.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ChatConfigurationWizard.tsx",
      "size": 20842,
      "lines": 547,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react",
        "@/hooks/useOllamaModels",
        "@/hooks/useOllamaAgentsForPalette",
        "@/config/ollamaModels"
      ],
      "exports": [
        "interface",
        "ChatConfigurationWizard"
      ],
      "functions": [
        "handleNext",
        "handleBack",
        "handleConfirm",
        "renderStep1",
        "renderStep2",
        "selectedAgent",
        "ChatConfigurationWizard"
      ],
      "components": [
        "ChatConfigurationWizard"
      ],
      "hooks": [
        "useOllamaModels",
        "useOllamaAgentsForPalette",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 7 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/AgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/AgentPalette.tsx",
      "size": 75714,
      "lines": 1493,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useOllamaAgentsForPalette",
        "@/hooks/useStrandsNativeTools",
        "./config/StrandsToolConfigDialog",
        "@/hooks/useStrandsUtilities"
      ],
      "exports": [
        "AgentPalette"
      ],
      "functions": [
        "getProfessionalAgentIcon",
        "getUtilityStatus",
        "loadMCPTools",
        "getCategoryIcon",
        "AgentConfigDialog",
        "AgentPalette"
      ],
      "components": [
        "AgentConfigDialog",
        "AgentPalette"
      ],
      "hooks": [
        "useStrandsUtilities",
        "useState",
        "useOllamaAgentsForPalette",
        "useEffect",
        "useStrandsNativeTools"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/MultiAgentWorkspace/StrandsBlankWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/StrandsBlankWorkspace.tsx",
      "size": 15636,
      "lines": 384,
      "imports": [
        "react",
        "lucide-react",
        "./ModernWorkspaceHeader",
        "./AgentPalette",
        "./PropertiesPanel",
        "./BankingWorkflowToolbar",
        "./StrandsWorkflowCanvas",
        "@/lib/services/StrandsWorkflowOrchestrator",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useOllamaAgentsForPalette",
        "./config/DecisionNodeConfigDialog",
        "./config/HandoffNodeConfigDialog",
        "./config/MemoryNodeConfigDialog",
        "./config/GuardrailNodeConfigDialog",
        "./config/AggregatorNodeConfigDialog",
        "./config/MonitorNodeConfigDialog",
        "./config/HumanNodeConfigDialog"
      ],
      "exports": [
        "StrandsBlankWorkspace"
      ],
      "functions": [
        "if",
        "StrandsBlankWorkspace",
        "availableAgents",
        "handleNodeSelect",
        "handleExecutionStart",
        "handleExecutionComplete",
        "addAgent",
        "addUtility",
        "handleSelectMCPTool",
        "updateNodeData",
        "handleOpenConfiguration",
        "runWorkflow",
        "stopWorkflow",
        "StrandsBlankWorkspace"
      ],
      "components": [
        "StrandsBlankWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useMemo",
        "useOllamaAgentsForPalette",
        "useState"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 9 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/RiskAssessmentPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/RiskAssessmentPanel.tsx",
      "size": 7042,
      "lines": 179,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "RiskAssessmentPanel"
      ],
      "functions": [
        "getRiskColor",
        "getRiskIcon",
        "RiskAssessmentPanel"
      ],
      "components": [
        "RiskAssessmentPanel"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinWorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinWorkflowToolbar.tsx",
      "size": 6045,
      "lines": 175,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "NetworkTwinWorkflowToolbar"
      ],
      "functions": [
        "NetworkTwinWorkflowToolbar"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmAgentPalette.tsx",
      "size": 8849,
      "lines": 228,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "TelcoCvmAgentPalette"
      ],
      "functions": [
        "TelcoCvmAgentPalette",
        "getStatusBadge",
        "TelcoCvmAgentPalette"
      ],
      "components": [
        "TelcoCvmAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/AddChatInterfaceButton.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/AddChatInterfaceButton.tsx",
      "size": 2304,
      "lines": 70,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "./ChatConfigurationWizard",
        "@xyflow/react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "AddChatInterfaceButton"
      ],
      "functions": [
        "handleAddChatInterface",
        "AddChatInterfaceButton"
      ],
      "components": [
        "AddChatInterfaceButton"
      ],
      "hooks": [
        "useState",
        "useReactFlow"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 7 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/MultiAgentProjectSelector.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/MultiAgentProjectSelector.tsx",
      "size": 12674,
      "lines": 290,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react"
      ],
      "exports": [
        "MultiAgentProjectSelector"
      ],
      "functions": [
        "handleSelectProject",
        "handleOpenProject",
        "handleCreateNew",
        "MultiAgentProjectSelector"
      ],
      "components": [
        "MultiAgentProjectSelector"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/MultiAgentWorkspaceBuilder.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/MultiAgentWorkspaceBuilder.tsx",
      "size": 5011,
      "lines": 174,
      "imports": [
        "react",
        "./WorkspaceHeader",
        "./AgentPalette",
        "./PropertiesPanel",
        "./WorkflowToolbar",
        "./nodes/CustomAgentNode",
        "./nodes/DecisionNode",
        "./nodes/MemoryNode",
        "./nodes/GuardrailNode",
        "./edges/TaskHandoffEdge"
      ],
      "exports": [
        "MultiAgentWorkspaceBuilder"
      ],
      "functions": [
        "MultiAgentWorkspaceBuilder",
        "onNodeClick",
        "addAgentNode",
        "addUtilityNode",
        "updateNodeData",
        "runWorkflow",
        "MultiAgentWorkspaceBuilder"
      ],
      "components": [
        "MultiAgentWorkspaceBuilder"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useNodesState",
        "useEdgesState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/FlexibleChatInterface.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/FlexibleChatInterface.tsx",
      "size": 11271,
      "lines": 328,
      "imports": [
        "@/utils/modelValidator",
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "lucide-react",
        "@/lib/services/FlexibleChatService"
      ],
      "exports": [
        "FlexibleChatInterface"
      ],
      "functions": [
        "const",
        "handleScroll",
        "scrollToBottom",
        "getWelcomeMessage",
        "addMessage",
        "handleSendMessage",
        "handleKeyPress",
        "getAgentIcon",
        "getAgentName",
        "FlexibleChatInterface"
      ],
      "components": [
        "FlexibleChatInterface"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 9 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/ChatWorkflowInterface.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ChatWorkflowInterface.tsx",
      "size": 9939,
      "lines": 254,
      "imports": [
        "react",
        "@/lib/services/StrandsWorkflowOrchestrator",
        "@/lib/services/ChatExecutionService"
      ],
      "exports": [
        "ChatWorkflowInterface"
      ],
      "functions": [
        "addMessage",
        "handleSendMessage",
        "handleKeyPress",
        "ChatWorkflowInterface"
      ],
      "components": [
        "ChatWorkflowInterface"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 8 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/BankingAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/BankingAgentPalette.tsx",
      "size": 7952,
      "lines": 213,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge"
      ],
      "exports": [
        "BankingAgentPalette"
      ],
      "functions": [
        "BankingAgentPalette"
      ],
      "components": [
        "BankingAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspace.tsx",
      "size": 0,
      "lines": 1,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 1 lines"
    },
    "src/components/MultiAgentWorkspace/WealthPropertiesPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WealthPropertiesPanel.tsx",
      "size": 22092,
      "lines": 476,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "WealthPropertiesPanel"
      ],
      "functions": [
        "updateLocalData",
        "getAgentDefaults",
        "renderAgentOverview",
        "renderSystemPrompt",
        "renderTools",
        "renderMemoryConfiguration",
        "renderGuardrails",
        "renderTaskCompletion",
        "getIcon",
        "WealthPropertiesPanel"
      ],
      "components": [
        "WealthPropertiesPanel"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmWorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmWorkflowToolbar.tsx",
      "size": 6175,
      "lines": 166,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "TelcoCvmWorkflowToolbar"
      ],
      "functions": [
        "getRiskColor",
        "getScoreColor",
        "TelcoCvmWorkflowToolbar"
      ],
      "components": [
        "TelcoCvmWorkflowToolbar"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/WealthManagementWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WealthManagementWorkspace.tsx",
      "size": 13640,
      "lines": 438,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./WealthAgentPalette",
        "./WealthPropertiesPanel",
        "./BankingWorkflowToolbar",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernMemoryNode",
        "./nodes/ModernGuardrailNode",
        "./edges/EnhancedConnectionEdge"
      ],
      "exports": [
        "WealthManagementWorkspace"
      ],
      "functions": [
        "WealthManagementWorkspace",
        "interval",
        "onNodeClick",
        "updateNodeData",
        "runWorkflow",
        "WealthManagementWorkspace"
      ],
      "components": [
        "WealthManagementWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useNodesState",
        "useEffect",
        "useEdgesState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/ModernWorkspaceHeader.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/ModernWorkspaceHeader.tsx",
      "size": 1644,
      "lines": 36,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button"
      ],
      "exports": [
        "ModernWorkspaceHeader"
      ],
      "functions": [
        "ModernWorkspaceHeader",
        "ModernWorkspaceHeader"
      ],
      "components": [
        "ModernWorkspaceHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/BankingWorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/BankingWorkflowToolbar.tsx",
      "size": 5719,
      "lines": 156,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "BankingWorkflowToolbar"
      ],
      "functions": [
        "getRiskColor",
        "getScoreColor",
        "BankingWorkflowToolbar"
      ],
      "components": [
        "BankingWorkflowToolbar"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/index.ts": {
      "file_path": "src/components/MultiAgentWorkspace/index.ts",
      "size": 1488,
      "lines": 25,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/WorkflowToolbar.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowToolbar.tsx",
      "size": 2634,
      "lines": 80,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/separator"
      ],
      "exports": [
        "WorkflowToolbar"
      ],
      "functions": [
        "WorkflowToolbar"
      ],
      "components": [
        "WorkflowToolbar"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/StrandsWorkflowCanvas.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/StrandsWorkflowCanvas.tsx",
      "size": 18974,
      "lines": 563,
      "imports": [
        "react",
        "@/lib/services/StrandsWorkflowOrchestrator",
        "@/hooks/useOllamaAgentsForPalette",
        "@/lib/services/MCPGatewayService",
        "@/hooks/useStrandsNativeTools",
        "./nodes/StrandsAgentNode",
        "./nodes/StrandsToolNode",
        "./nodes/StrandsDecisionNode",
        "./nodes/StrandsHandoffNode",
        "./nodes/StrandsOutputNode",
        "./nodes/StrandsHumanNode",
        "./nodes/StrandsMemoryNode",
        "./nodes/StrandsGuardrailNode",
        "./nodes/StrandsAggregatorNode",
        "./nodes/StrandsMonitorNode",
        "./nodes/ChatInterfaceNode",
        "./edges/StrandsEdge",
        "./edges/AnimatedStrandsEdge",
        "./StrandsExecutionOverlay",
        "./AddChatInterfaceButton"
      ],
      "exports": [
        "StrandsWorkflowCanvasWrapper"
      ],
      "functions": [
        "to",
        "handleAddChatInterfaceNode",
        "handleNodeUpdate",
        "sourceNode",
        "targetNode",
        "onNodeClick",
        "onPaneClick",
        "onDragOver",
        "executeWorkflow",
        "animateExecution",
        "clearWorkflow",
        "saveWorkflow",
        "loadWorkflow",
        "StrandsWorkflowCanvas",
        "StrandsWorkflowCanvasWrapper"
      ],
      "components": [
        "StrandsWorkflowCanvas",
        "StrandsWorkflowCanvasWrapper"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useNodesState",
        "useOllamaAgentsForPalette",
        "useEffect",
        "useEdgesState",
        "useEvent",
        "useReactFlow",
        "useStrandsNativeTools"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/MultiAgentWorkspace/TelcoCvmWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/TelcoCvmWorkspace.tsx",
      "size": 14044,
      "lines": 458,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./TelcoCvmAgentPalette",
        "./TelcoCvmPropertiesPanel",
        "./TelcoCvmWorkflowToolbar",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ModernMemoryNode",
        "./edges/EnhancedConnectionEdge"
      ],
      "exports": [
        "TelcoCvmWorkspace"
      ],
      "functions": [
        "TelcoCvmWorkspace",
        "interval",
        "onNodeClick",
        "updateNodeData",
        "runWorkflow",
        "TelcoCvmWorkspace"
      ],
      "components": [
        "TelcoCvmWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useNodesState",
        "useEffect",
        "useEdgesState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/WorkflowExecutionPanel.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowExecutionPanel.tsx",
      "size": 11499,
      "lines": 320,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/hooks/useWorkflowExecution",
        "@/hooks/useOllamaAgentsForPalette"
      ],
      "exports": [
        "WorkflowExecutionPanel"
      ],
      "functions": [
        "autoRegister",
        "handleQuickExecute",
        "getStatusColor",
        "getStatusIcon",
        "WorkflowExecutionPanel"
      ],
      "components": [
        "WorkflowExecutionPanel"
      ],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useWorkflowExecution",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinWorkspace.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinWorkspace.tsx",
      "size": 14096,
      "lines": 459,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./NetworkTwinAgentPalette",
        "./NetworkTwinPropertiesPanel",
        "./NetworkTwinWorkflowToolbar",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ModernMemoryNode",
        "./edges/EnhancedConnectionEdge"
      ],
      "exports": [
        "NetworkTwinWorkspace"
      ],
      "functions": [
        "NetworkTwinWorkspace",
        "interval",
        "onNodeClick",
        "updateNodeData",
        "runWorkflow",
        "NetworkTwinWorkspace"
      ],
      "components": [
        "NetworkTwinWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useNodesState",
        "useEffect",
        "useEdgesState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspaceBuilder.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/EnhancedMultiAgentWorkspaceBuilder.tsx",
      "size": 13839,
      "lines": 405,
      "imports": [
        "react",
        "./ModernWorkspaceHeader",
        "./ModernBankingAgentPalette",
        "./PropertiesPanel",
        "./BankingWorkflowToolbar",
        "./ComplianceMonitor",
        "./RiskAssessmentPanel",
        "./nodes/ModernAgentNode",
        "./nodes/ModernDecisionNode",
        "./nodes/ModernMemoryNode",
        "./nodes/ModernGuardrailNode",
        "./nodes/ComplianceNode",
        "./nodes/RiskNode",
        "./nodes/AuditNode",
        "./edges/EnhancedConnectionEdge",
        "./engines/WorkflowEngine",
        "./types/orchestration"
      ],
      "exports": [
        "EnhancedMultiAgentWorkspaceBuilder"
      ],
      "functions": [
        "EnhancedMultiAgentWorkspaceBuilder",
        "sourceNode",
        "targetNode",
        "onNodeClick",
        "addBankingAgent",
        "addUtilityNode",
        "updateNodeData",
        "runWorkflow",
        "exportWorkflow",
        "EnhancedMultiAgentWorkspaceBuilder"
      ],
      "components": [
        "EnhancedMultiAgentWorkspaceBuilder"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useNodesState",
        "useEdgesState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 8 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/NetworkTwinAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/NetworkTwinAgentPalette.tsx",
      "size": 8699,
      "lines": 226,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "NetworkTwinAgentPalette"
      ],
      "functions": [
        "NetworkTwinAgentPalette",
        "getStatusBadge",
        "NetworkTwinAgentPalette"
      ],
      "components": [
        "NetworkTwinAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/WorkflowConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WorkflowConfigDialog.tsx",
      "size": 16616,
      "lines": 465,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs"
      ],
      "exports": [
        "WorkflowConfigDialog"
      ],
      "functions": [
        "getPatterns",
        "handlePatternSelect",
        "handleSave",
        "renderHandoffConfig",
        "renderDecisionConfig",
        "newConditions",
        "renderAggregatorConfig",
        "renderConfig",
        "WorkflowConfigDialog"
      ],
      "components": [
        "WorkflowConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [
        "\\.get\\s*\\("
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/WealthAgentPalette.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/WealthAgentPalette.tsx",
      "size": 7552,
      "lines": 188,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "WealthAgentPalette"
      ],
      "functions": [
        "WealthAgentPalette",
        "getStatusBadge",
        "WealthAgentPalette"
      ],
      "components": [
        "WealthAgentPalette"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/types/orchestration.ts": {
      "file_path": "src/components/MultiAgentWorkspace/types/orchestration.ts",
      "size": 1768,
      "lines": 74,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/GuardrailNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/GuardrailNodeConfigDialog.tsx",
      "size": 6768,
      "lines": 183,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "GuardrailNodeConfigDialog"
      ],
      "functions": [
        "handleSave",
        "GuardrailNodeConfigDialog"
      ],
      "components": [
        "GuardrailNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/HandoffNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/HandoffNodeConfigDialog.tsx",
      "size": 19043,
      "lines": 449,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react",
        "@/types/WorkflowUtilityTypes"
      ],
      "exports": [
        "HandoffNodeConfigDialog"
      ],
      "functions": [
        "addTargetAgent",
        "availableAgent",
        "removeTargetAgent",
        "updateTargetAgent",
        "addConditionToAgent",
        "handleSave",
        "updatedConditions",
        "HandoffNodeConfigDialog"
      ],
      "components": [
        "HandoffNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/MonitorNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/MonitorNodeConfigDialog.tsx",
      "size": 6947,
      "lines": 194,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "MonitorNodeConfigDialog"
      ],
      "functions": [
        "handleSave",
        "MonitorNodeConfigDialog"
      ],
      "components": [
        "MonitorNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/AggregatorNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/AggregatorNodeConfigDialog.tsx",
      "size": 6600,
      "lines": 182,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "AggregatorNodeConfigDialog"
      ],
      "functions": [
        "handleSave",
        "AggregatorNodeConfigDialog"
      ],
      "components": [
        "AggregatorNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/StrandsToolConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/StrandsToolConfigDialog.tsx",
      "size": 11920,
      "lines": 332,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/alert",
        "@/hooks/useStrandsNativeTools"
      ],
      "exports": [
        "StrandsToolConfigDialog"
      ],
      "functions": [
        "validateConfig",
        "handleFieldChange",
        "togglePasswordVisibility",
        "handleSave",
        "getDocumentationUrl",
        "renderField",
        "StrandsToolConfigDialog"
      ],
      "components": [
        "StrandsToolConfigDialog"
      ],
      "hooks": [
        "useStrandsNativeTools",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/config/MemoryNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/MemoryNodeConfigDialog.tsx",
      "size": 5865,
      "lines": 166,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "lucide-react"
      ],
      "exports": [
        "MemoryNodeConfigDialog"
      ],
      "functions": [
        "handleSave",
        "MemoryNodeConfigDialog"
      ],
      "components": [
        "MemoryNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/HumanNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/HumanNodeConfigDialog.tsx",
      "size": 7278,
      "lines": 200,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "lucide-react"
      ],
      "exports": [
        "HumanNodeConfigDialog"
      ],
      "functions": [
        "handleSave",
        "HumanNodeConfigDialog"
      ],
      "components": [
        "HumanNodeConfigDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/config/DecisionNodeConfigDialog.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/config/DecisionNodeConfigDialog.tsx",
      "size": 16596,
      "lines": 384,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "lucide-react",
        "@/types/WorkflowUtilityTypes"
      ],
      "exports": [
        "DecisionNodeConfigDialog"
      ],
      "functions": [
        "addCondition",
        "updateCondition",
        "removeCondition",
        "moveCondition",
        "handleSave",
        "DecisionNodeConfigDialog"
      ],
      "components": [
        "DecisionNodeConfigDialog"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/nodes/ChatInterfaceNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ChatInterfaceNode.tsx",
      "size": 9506,
      "lines": 283,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "../FlexibleChatInterface",
        "@/lib/services/FlexibleChatService"
      ],
      "exports": [
        "ChatInterfaceNode"
      ],
      "functions": [
        "getChatTypeIcon",
        "getChatTypeColor",
        "getChatTypeName",
        "ChatInterfaceNode"
      ],
      "components": [
        "ChatInterfaceNode"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernDecisionNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernDecisionNode.tsx",
      "size": 3478,
      "lines": 88,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernDecisionNode"
      ],
      "functions": [
        "ModernDecisionNode",
        "getStatusColor",
        "ModernDecisionNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernGuardrailNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernGuardrailNode.tsx",
      "size": 4444,
      "lines": 107,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernGuardrailNode"
      ],
      "functions": [
        "ModernGuardrailNode",
        "getGuardrailIcon",
        "getStatusColor",
        "getSeverityColor",
        "ModernGuardrailNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernHandoffNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernHandoffNode.tsx",
      "size": 5627,
      "lines": 151,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernHandoffNode"
      ],
      "functions": [
        "getStatusColor",
        "getCriteriaIcon",
        "ModernHandoffNode"
      ],
      "components": [
        "ModernHandoffNode"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernMonitorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernMonitorNode.tsx",
      "size": 8364,
      "lines": 215,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernMonitorNode"
      ],
      "functions": [
        "interval",
        "getStatusColor",
        "getMetricColor",
        "ModernMonitorNode"
      ],
      "components": [
        "ModernMonitorNode"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernMemoryNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernMemoryNode.tsx",
      "size": 5490,
      "lines": 146,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernMemoryNode"
      ],
      "functions": [
        "ModernMemoryNode",
        "getMemoryTypeInfo",
        "getStatusColor",
        "ModernMemoryNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/AuditNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/AuditNode.tsx",
      "size": 2861,
      "lines": 76,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "AuditNode"
      ],
      "functions": [
        "AuditNode",
        "getAuditStatus",
        "AuditNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsMemoryNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsMemoryNode.tsx",
      "size": 3409,
      "lines": 105,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "StrandsMemoryNode"
      ],
      "components": [
        "StrandsMemoryNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernHumanNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernHumanNode.tsx",
      "size": 5309,
      "lines": 152,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernHumanNode"
      ],
      "functions": [
        "getStatusColor",
        "getStatusIcon",
        "ModernHumanNode"
      ],
      "components": [
        "ModernHumanNode"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsOutputNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsOutputNode.tsx",
      "size": 1684,
      "lines": 48,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "StrandsOutputNode"
      ],
      "components": [
        "StrandsOutputNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsAggregatorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsAggregatorNode.tsx",
      "size": 3516,
      "lines": 107,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "StrandsAggregatorNode"
      ],
      "components": [
        "StrandsAggregatorNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsHandoffNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsHandoffNode.tsx",
      "size": 1880,
      "lines": 55,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "StrandsHandoffNode"
      ],
      "components": [
        "StrandsHandoffNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsMonitorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsMonitorNode.tsx",
      "size": 2964,
      "lines": 91,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "StrandsMonitorNode"
      ],
      "components": [
        "StrandsMonitorNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/GuardrailNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/GuardrailNode.tsx",
      "size": 2035,
      "lines": 60,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "GuardrailNode"
      ],
      "functions": [
        "GuardrailNode",
        "getSeverityColor",
        "GuardrailNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernAgentNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernAgentNode.tsx",
      "size": 8495,
      "lines": 182,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/dialog"
      ],
      "exports": [
        "ModernAgentNode"
      ],
      "functions": [
        "ModernAgentNode",
        "getProfessionalAgentIcon",
        "getStatusColor",
        "ModernAgentNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernAggregatorNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernAggregatorNode.tsx",
      "size": 7224,
      "lines": 192,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "ModernAggregatorNode"
      ],
      "functions": [
        "getStatusColor",
        "getMethodIcon",
        "ModernAggregatorNode"
      ],
      "components": [
        "ModernAggregatorNode"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/CustomAgentNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/CustomAgentNode.tsx",
      "size": 1947,
      "lines": 55,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "CustomAgentNode"
      ],
      "functions": [
        "CustomAgentNode",
        "CustomAgentNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsToolNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsToolNode.tsx",
      "size": 8213,
      "lines": 242,
      "imports": [
        "react",
        "@xyflow/react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getToolIcon",
        "getStatusIcon",
        "getStatusColor",
        "getCategoryColor",
        "StrandsToolNode"
      ],
      "components": [
        "StrandsToolNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/RiskNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/RiskNode.tsx",
      "size": 3106,
      "lines": 81,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "RiskNode"
      ],
      "functions": [
        "RiskNode",
        "getRiskLevel",
        "RiskNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ModernMCPToolNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ModernMCPToolNode.tsx",
      "size": 6323,
      "lines": 169,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/dialog"
      ],
      "exports": [
        "ModernMCPToolNode"
      ],
      "functions": [
        "getStatusColor",
        "getCategoryIcon",
        "getComplexityColor",
        "ModernMCPToolNode"
      ],
      "components": [
        "ModernMCPToolNode"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/MemoryNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/MemoryNode.tsx",
      "size": 1548,
      "lines": 45,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "MemoryNode"
      ],
      "functions": [
        "MemoryNode",
        "MemoryNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsDecisionNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsDecisionNode.tsx",
      "size": 7130,
      "lines": 211,
      "imports": [
        "react",
        "@xyflow/react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "getDecisionTypeColor",
        "StrandsDecisionNode"
      ],
      "components": [
        "StrandsDecisionNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/ComplianceNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/ComplianceNode.tsx",
      "size": 2907,
      "lines": 73,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ComplianceNode"
      ],
      "functions": [
        "ComplianceNode",
        "getComplianceStatus",
        "ComplianceNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsHumanNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsHumanNode.tsx",
      "size": 2993,
      "lines": 91,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "StrandsHumanNode"
      ],
      "components": [
        "StrandsHumanNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsGuardrailNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsGuardrailNode.tsx",
      "size": 3551,
      "lines": 108,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "StrandsGuardrailNode"
      ],
      "components": [
        "StrandsGuardrailNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/DecisionNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/DecisionNode.tsx",
      "size": 1506,
      "lines": 48,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "DecisionNode"
      ],
      "functions": [
        "DecisionNode",
        "DecisionNode"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/nodes/StrandsAgentNode.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/nodes/StrandsAgentNode.tsx",
      "size": 7253,
      "lines": 212,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react",
        "@/lib/services/StrandsWorkflowOrchestrator"
      ],
      "exports": [
        "memo"
      ],
      "functions": [
        "getStatusIcon",
        "getStatusColor",
        "getBadgeColor",
        "StrandsAgentNode"
      ],
      "components": [
        "StrandsAgentNode"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/engines/WorkflowEngine.ts": {
      "file_path": "src/components/MultiAgentWorkspace/engines/WorkflowEngine.ts",
      "size": 9747,
      "lines": 345,
      "imports": [
        "../types/orchestration"
      ],
      "exports": [
        "WorkflowEngine",
        "workflowEngine"
      ],
      "functions": [
        "triggerNodes",
        "terminalNodes",
        "orphanedNodes",
        "triggerNodes",
        "outgoingEdges",
        "targetNode",
        "errorEdges",
        "errorHandler",
        "condition",
        "dfs",
        "outgoingEdges",
        "sourceNode",
        "targetNode",
        "target",
        "workflowEngine"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.delete\\s*\\("
      ],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/MultiAgentWorkspace/edges/ModernTaskHandoffEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/ModernTaskHandoffEdge.tsx",
      "size": 1324,
      "lines": 54,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "ModernTaskHandoffEdge"
      ],
      "functions": [
        "ModernTaskHandoffEdge"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/edges/StrandsEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/StrandsEdge.tsx",
      "size": 1300,
      "lines": 59,
      "imports": [
        "react",
        "@xyflow/react"
      ],
      "exports": [
        "StrandsEdge"
      ],
      "functions": [
        "StrandsEdge"
      ],
      "components": [
        "StrandsEdge"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/edges/EnhancedConnectionEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/EnhancedConnectionEdge.tsx",
      "size": 8414,
      "lines": 269,
      "imports": [
        "react",
        "@xyflow/react",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "EnhancedConnectionEdge"
      ],
      "functions": [
        "getEdgeStyle",
        "getEdgeIcon",
        "getStatusColor",
        "getTypeLabel",
        "EnhancedConnectionEdge"
      ],
      "components": [
        "EnhancedConnectionEdge"
      ],
      "hooks": [
        "useLeave",
        "useState",
        "useEnter"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/edges/AnimatedStrandsEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/AnimatedStrandsEdge.tsx",
      "size": 1261,
      "lines": 65,
      "imports": [
        "react",
        "@xyflow/react"
      ],
      "exports": [
        "AnimatedStrandsEdge"
      ],
      "functions": [
        "AnimatedStrandsEdge"
      ],
      "components": [
        "AnimatedStrandsEdge"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/MultiAgentWorkspace/edges/TaskHandoffEdge.tsx": {
      "file_path": "src/components/MultiAgentWorkspace/edges/TaskHandoffEdge.tsx",
      "size": 1279,
      "lines": 54,
      "imports": [
        "react",
        "@xyflow/react",
        "lucide-react"
      ],
      "exports": [
        "TaskHandoffEdge"
      ],
      "functions": [
        "TaskHandoffEdge"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/RequestAccessDialog.tsx": {
      "file_path": "src/components/AgentWorkspace/RequestAccessDialog.tsx",
      "size": 3136,
      "lines": 105,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/hooks/use-toast"
      ],
      "exports": [
        "RequestAccessDialog"
      ],
      "functions": [
        "handleSubmit",
        "RequestAccessDialog"
      ],
      "components": [],
      "hooks": [
        "useToast",
        "useState"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/AgentWorkspace/PropertiesPanel.tsx": {
      "file_path": "src/components/AgentWorkspace/PropertiesPanel.tsx",
      "size": 6688,
      "lines": 157,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "PropertiesPanel"
      ],
      "functions": [
        "PropertiesPanel"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/WorkspaceHeader.tsx": {
      "file_path": "src/components/AgentWorkspace/WorkspaceHeader.tsx",
      "size": 1640,
      "lines": 56,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/hooks/use-toast"
      ],
      "exports": [
        "WorkspaceHeader"
      ],
      "functions": [
        "WorkspaceHeader",
        "handleStartChat",
        "WorkspaceHeader"
      ],
      "components": [
        "WorkspaceHeader"
      ],
      "hooks": [
        "useToast",
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/ChatSuggestion.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatSuggestion.tsx",
      "size": 676,
      "lines": 24,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ChatSuggestion"
      ],
      "functions": [
        "ChatSuggestion"
      ],
      "components": [
        "ChatSuggestion"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/VoiceAnalyticsHeader.tsx": {
      "file_path": "src/components/AgentWorkspace/VoiceAnalyticsHeader.tsx",
      "size": 2586,
      "lines": 59,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "VoiceAnalyticsHeader"
      ],
      "functions": [
        "VoiceAnalyticsHeader"
      ],
      "components": [
        "VoiceAnalyticsHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/WorkspaceCanvas.tsx": {
      "file_path": "src/components/AgentWorkspace/WorkspaceCanvas.tsx",
      "size": 2208,
      "lines": 82,
      "imports": [
        "react",
        "./ChatMessageList",
        "./ChatInputForm",
        "./EmptyChatState",
        "./AccessRequired",
        "./hooks/useLangChainKey",
        "./RagDemo"
      ],
      "exports": [
        "WorkspaceCanvas"
      ],
      "functions": [
        "WorkspaceCanvas"
      ],
      "components": [
        "WorkspaceCanvas"
      ],
      "hooks": [
        "useLangChainKey",
        "useState",
        "useLangChain"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/ChatInputForm.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatInputForm.tsx",
      "size": 3637,
      "lines": 111,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/textarea",
        "@/components/ui/button",
        "@/lib/utils",
        "./LangChainToggle",
        "./ApiKeyInput"
      ],
      "exports": [
        "ChatInputForm"
      ],
      "functions": [
        "handleKeyDown",
        "ChatInputForm"
      ],
      "components": [
        "ChatInputForm"
      ],
      "hooks": [
        "useRef",
        "useLangChain"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/RagDemo.tsx": {
      "file_path": "src/components/AgentWorkspace/RagDemo.tsx",
      "size": 8563,
      "lines": 201,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "lucide-react",
        "@/hooks/useRagWorkflow",
        "@/components/ui/skeleton",
        "@/hooks/useSupabaseApiKey",
        "sonner",
        "react-router-dom"
      ],
      "exports": [
        "RagDemo"
      ],
      "functions": [
        "handleRunQuery",
        "RagDemo"
      ],
      "components": [
        "RagDemo"
      ],
      "hooks": [
        "useSupabaseApiKey",
        "useState",
        "useRagWorkflow",
        "useEffect"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 8 functionality indicators"
    },
    "src/components/AgentWorkspace/ProjectSelection.tsx": {
      "file_path": "src/components/AgentWorkspace/ProjectSelection.tsx",
      "size": 1923,
      "lines": 50,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/scroll-area",
        "react-router-dom"
      ],
      "exports": [
        "ProjectSelection"
      ],
      "functions": [
        "ProjectSelection"
      ],
      "components": [
        "ProjectSelection"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/WorkspaceToolbar.tsx": {
      "file_path": "src/components/AgentWorkspace/WorkspaceToolbar.tsx",
      "size": 2457,
      "lines": 80,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react",
        "@/components/ui/separator",
        "@/lib/utils",
        "@/hooks/use-toast"
      ],
      "exports": [
        "WorkspaceToolbar"
      ],
      "functions": [
        "handleRefreshClick",
        "WorkspaceToolbar"
      ],
      "components": [],
      "hooks": [
        "useToast",
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/AgentPalette.tsx": {
      "file_path": "src/components/AgentWorkspace/AgentPalette.tsx",
      "size": 3710,
      "lines": 80,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/input",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "AgentPalette"
      ],
      "functions": [
        "AgentPalette",
        "AgentPalette"
      ],
      "components": [
        "AgentPalette"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/ChatReasoningOutput.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatReasoningOutput.tsx",
      "size": 2213,
      "lines": 57,
      "imports": [
        "react",
        "./types"
      ],
      "exports": [
        "interface",
        "ChatReasoningOutput"
      ],
      "functions": [
        "formatReasoning",
        "ChatReasoningOutput"
      ],
      "components": [
        "ChatReasoningOutput"
      ],
      "hooks": [],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/types.ts": {
      "file_path": "src/components/AgentWorkspace/types.ts",
      "size": 705,
      "lines": 39,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/LangChainToggle.tsx": {
      "file_path": "src/components/AgentWorkspace/LangChainToggle.tsx",
      "size": 920,
      "lines": 34,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [
        "LangChainToggle"
      ],
      "functions": [
        "LangChainToggle"
      ],
      "components": [
        "LangChainToggle"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/AccessRequired.tsx": {
      "file_path": "src/components/AgentWorkspace/AccessRequired.tsx",
      "size": 1114,
      "lines": 38,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "interface",
        "AccessRequired"
      ],
      "functions": [
        "AccessRequired"
      ],
      "components": [
        "AccessRequired"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/ApiKeyInput.tsx": {
      "file_path": "src/components/AgentWorkspace/ApiKeyInput.tsx",
      "size": 2852,
      "lines": 96,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "lucide-react"
      ],
      "exports": [
        "ApiKeyInput"
      ],
      "functions": [
        "toggleShowKey",
        "handleSave",
        "ApiKeyInput"
      ],
      "components": [
        "ApiKeyInput"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/AgentWorkspace/ChatMessageList.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatMessageList.tsx",
      "size": 754,
      "lines": 31,
      "imports": [
        "react",
        "./ChatMessage",
        "./ChatReasoningOutput"
      ],
      "exports": [
        "interface",
        "ChatMessageList"
      ],
      "functions": [
        "ChatMessageList"
      ],
      "components": [
        "ChatMessageList"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/index.ts": {
      "file_path": "src/components/AgentWorkspace/index.ts",
      "size": 864,
      "lines": 17,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [
        "useLangChainKey",
        "useConversation",
        "useMessageReasoning",
        "useSuggestedPrompts",
        "useVoiceProjectData"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/components/AgentWorkspace/EmptyChatState.tsx": {
      "file_path": "src/components/AgentWorkspace/EmptyChatState.tsx",
      "size": 3702,
      "lines": 84,
      "imports": [
        "react",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "EmptyChatState"
      ],
      "functions": [
        "EmptyChatState"
      ],
      "components": [
        "EmptyChatState"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/ChatMessage.tsx": {
      "file_path": "src/components/AgentWorkspace/ChatMessage.tsx",
      "size": 2980,
      "lines": 102,
      "imports": [
        "react",
        "lucide-react",
        "./types",
        "@/components/ui/button",
        "./ChatReasoningOutput",
        "./hooks/useMessageReasoning"
      ],
      "exports": [
        "ChatMessage"
      ],
      "functions": [
        "toggleReasoning",
        "MessageUserBadge",
        "MessageAssistantBadge",
        "ChatMessage",
        "ReasoningToggleButton"
      ],
      "components": [
        "ChatMessage",
        "MessageUserBadge",
        "MessageAssistantBadge",
        "ReasoningToggleButton"
      ],
      "hooks": [
        "useState",
        "useMessageReasoning"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/langchain/api.ts": {
      "file_path": "src/components/AgentWorkspace/langchain/api.ts",
      "size": 1854,
      "lines": 67,
      "imports": [
        "@langchain/openai",
        "@langchain/core/prompts",
        "@langchain/core/output_parsers"
      ],
      "exports": [
        "createChatModel",
        "generateResponseWithLangChain"
      ],
      "functions": [
        "createChatModel",
        "createChatModel",
        "generateResponseWithLangChain"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/components/AgentWorkspace/hooks/useMessageReasoning.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useMessageReasoning.ts",
      "size": 3406,
      "lines": 74,
      "imports": [
        "../types"
      ],
      "exports": [
        "useMessageReasoning"
      ],
      "functions": [
        "useMessageReasoning"
      ],
      "components": [],
      "hooks": [
        "useMessageReasoning"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/hooks/useConversation.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useConversation.ts",
      "size": 4412,
      "lines": 139,
      "imports": [
        "react",
        "@/hooks/use-toast",
        "@/components/DecisionPath/utils/nodeUtils",
        "../types",
        "../langchain/api"
      ],
      "exports": [
        "useConversation"
      ],
      "functions": [
        "useConversation",
        "handlePromptSubmit",
        "formattedMessages"
      ],
      "components": [],
      "hooks": [
        "useConversation",
        "useState",
        "useLangChain",
        "useToast",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/AgentWorkspace/hooks/useSuggestedPrompts.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useSuggestedPrompts.ts",
      "size": 1545,
      "lines": 44,
      "imports": [
        "react"
      ],
      "exports": [
        "useSuggestedPrompts"
      ],
      "functions": [
        "useSuggestedPrompts"
      ],
      "components": [],
      "hooks": [
        "useSuggestedPrompts",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/hooks/useVoiceProjectData.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useVoiceProjectData.ts",
      "size": 2194,
      "lines": 67,
      "imports": [
        "react",
        "@/components/CommandCentre/ProjectData"
      ],
      "exports": [
        "useVoiceProjectData"
      ],
      "functions": [
        "useVoiceProjectData",
        "projectsData",
        "currentProject",
        "useVoiceProjectData"
      ],
      "components": [],
      "hooks": [
        "useMemo",
        "useVoiceProjectData"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/AgentWorkspace/hooks/useLangChainKey.ts": {
      "file_path": "src/components/AgentWorkspace/hooks/useLangChainKey.ts",
      "size": 251,
      "lines": 17,
      "imports": [
        "@/hooks/useSupabaseApiKey"
      ],
      "exports": [
        "useLangChainKey"
      ],
      "functions": [
        "useLangChainKey",
        "useLangChainKey"
      ],
      "components": [],
      "hooks": [
        "useLangChainKey",
        "useSupabaseApiKey"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/components/Documents/RAGDebugPanel.tsx": {
      "file_path": "src/components/Documents/RAGDebugPanel.tsx",
      "size": 9277,
      "lines": 248,
      "imports": [
        "react",
        "../ui/card",
        "../ui/button",
        "../ui/badge",
        "../../lib/services/DocumentRAGService"
      ],
      "exports": [
        "RAGDebugPanel"
      ],
      "functions": [
        "addLog",
        "updateStep",
        "testBackendConnection",
        "testRAGStatus",
        "testOllamaModels",
        "modelNames",
        "testIngestedDocuments",
        "details",
        "runFullDiagnostic",
        "getStatusBadge",
        "RAGDebugPanel"
      ],
      "components": [
        "RAGDebugPanel"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Documents/DocumentAgentCreator.tsx": {
      "file_path": "src/components/Documents/DocumentAgentCreator.tsx",
      "size": 46249,
      "lines": 1059,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/textarea",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/CommandCentre/CreateAgent/steps/EnhancedCapabilities",
        "@/components/CommandCentre/CreateAgent/steps/EnhancedGuardrails"
      ],
      "exports": [
        "DocumentAgentCreator"
      ],
      "functions": [
        "resetForm",
        "defaultModel",
        "handleInputChange",
        "handleNestedChange",
        "handleTemplateSelect",
        "handleCreateAgent",
        "missingFields",
        "canCreateAgent",
        "DocumentAgentCreator"
      ],
      "components": [
        "DocumentAgentCreator"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "src/components/Documents/DocumentProcessingLogs.tsx": {
      "file_path": "src/components/Documents/DocumentProcessingLogs.tsx",
      "size": 8565,
      "lines": 242,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/hooks/useProcessingLogs"
      ],
      "exports": [
        "DocumentProcessingLogs"
      ],
      "functions": [
        "handleScroll",
        "getStageIcon",
        "getTypeColor",
        "getStageColor",
        "formatTime",
        "DocumentProcessingLogs"
      ],
      "components": [
        "DocumentProcessingLogs"
      ],
      "hooks": [
        "useCallback",
        "useProcessingLogs",
        "useState",
        "useEffect",
        "useRef"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Documents/DocumentUploader.tsx": {
      "file_path": "src/components/Documents/DocumentUploader.tsx",
      "size": 6800,
      "lines": 201,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/progress"
      ],
      "exports": [
        "DocumentUploader"
      ],
      "functions": [
        "handleDragOver",
        "handleDragLeave",
        "handleDrop",
        "handleFileInput",
        "handleFileSelection",
        "validFiles",
        "isValidType",
        "removeFile",
        "handleUpload",
        "formatFileSize",
        "DocumentUploader"
      ],
      "components": [
        "DocumentUploader"
      ],
      "hooks": [
        "useCallback",
        "useState"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 11 functionality indicators"
    },
    "src/components/Documents/DocumentLibrary.tsx": {
      "file_path": "src/components/Documents/DocumentLibrary.tsx",
      "size": 8359,
      "lines": 227,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/checkbox"
      ],
      "exports": [
        "DocumentLibrary"
      ],
      "functions": [
        "formatFileSize",
        "getStatusIcon",
        "getStatusText",
        "toggleDocumentSelection",
        "selectAllDocuments",
        "readyDocuments",
        "readyDocuments",
        "DocumentLibrary"
      ],
      "components": [
        "DocumentLibrary"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Documents/DocumentAgentManager.tsx": {
      "file_path": "src/components/Documents/DocumentAgentManager.tsx",
      "size": 13829,
      "lines": 361,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/dialog",
        "@/components/ui/alert"
      ],
      "exports": [
        "DocumentAgentManager"
      ],
      "functions": [
        "userCreatedAgents",
        "predefinedAgents",
        "handleDeleteAgent",
        "confirmDelete",
        "DocumentAgentManager",
        "AgentCard"
      ],
      "components": [
        "DocumentAgentManager",
        "AgentCard"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Documents/DocumentChat.tsx": {
      "file_path": "src/components/Documents/DocumentChat.tsx",
      "size": 15431,
      "lines": 395,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select"
      ],
      "exports": [
        "DocumentChat"
      ],
      "functions": [
        "loadAvailableModels",
        "modelNames",
        "defaultModel",
        "scrollToBottom",
        "toggleDocumentSelection",
        "handleSendMessage",
        "handleKeyPress",
        "selectedDocs",
        "DocumentChat"
      ],
      "components": [
        "DocumentChat"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Documents/AgentDocumentChat.tsx": {
      "file_path": "src/components/Documents/AgentDocumentChat.tsx",
      "size": 25130,
      "lines": 665,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select",
        "./DocumentAgentCreator",
        "./DocumentAgentManager"
      ],
      "exports": [
        "AgentDocumentChat"
      ],
      "functions": [
        "loadAgents",
        "agentStillAvailable",
        "refreshAgents",
        "loadAgents",
        "loadModels",
        "modelNames",
        "defaultModel",
        "scrollToBottom",
        "toggleDocumentSelection",
        "handleSendMessage",
        "handleKeyDown",
        "agent",
        "AgentDocumentChat"
      ],
      "components": [
        "AgentDocumentChat"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "src/components/Documents/AgentSuggestions.tsx": {
      "file_path": "src/components/Documents/AgentSuggestions.tsx",
      "size": 7804,
      "lines": 210,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "AgentSuggestions"
      ],
      "functions": [
        "generateSuggestions",
        "hasFinancialDocs",
        "hasComplianceDocs",
        "hasTechnicalDocs",
        "handleCreateAgent",
        "AgentSuggestions"
      ],
      "components": [
        "AgentSuggestions"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Documents/DocumentMetadataPanel.tsx": {
      "file_path": "src/components/Documents/DocumentMetadataPanel.tsx",
      "size": 11642,
      "lines": 299,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "DocumentMetadataPanel"
      ],
      "functions": [
        "loadData",
        "loadChunks",
        "formatFileSize",
        "formatDate",
        "DocumentMetadataPanel"
      ],
      "components": [
        "DocumentMetadataPanel"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Ollama/OllamaStatus.tsx": {
      "file_path": "src/components/Ollama/OllamaStatus.tsx",
      "size": 7573,
      "lines": 225,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "OllamaStatus"
      ],
      "functions": [
        "checkStatus",
        "getStatusIcon",
        "getStatusColor",
        "getStatusBadge",
        "OllamaStatus"
      ],
      "components": [
        "OllamaStatus"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Ollama/OllamaModelsDialog.tsx": {
      "file_path": "src/components/Ollama/OllamaModelsDialog.tsx",
      "size": 1628,
      "lines": 47,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./OllamaModelSelector",
        "./OllamaStatus"
      ],
      "exports": [
        "OllamaModelsDialog"
      ],
      "functions": [
        "OllamaModelsDialog"
      ],
      "components": [
        "OllamaModelsDialog"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Ollama/OllamaTerminalDialog.tsx": {
      "file_path": "src/components/Ollama/OllamaTerminalDialog.tsx",
      "size": 785,
      "lines": 26,
      "imports": [
        "react",
        "@/components/ui/dialog",
        "./OllamaTerminal"
      ],
      "exports": [
        "OllamaTerminalDialog"
      ],
      "functions": [
        "OllamaTerminalDialog"
      ],
      "components": [
        "OllamaTerminalDialog"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Ollama/index.ts": {
      "file_path": "src/components/Ollama/index.ts",
      "size": 713,
      "lines": 23,
      "imports": [],
      "exports": [
        "types",
        "type"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/Ollama/OllamaModelSelector.tsx": {
      "file_path": "src/components/Ollama/OllamaModelSelector.tsx",
      "size": 15932,
      "lines": 443,
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/lib/services/OllamaService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaModelSelector"
      ],
      "functions": [
        "loadModels",
        "pullModel",
        "deleteModel",
        "getCategoryIcon",
        "getModelBadges",
        "isInstalled",
        "OllamaModelSelector"
      ],
      "components": [
        "OllamaModelSelector"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/components/Ollama/OllamaTerminal.tsx": {
      "file_path": "src/components/Ollama/OllamaTerminal.tsx",
      "size": 12139,
      "lines": 367,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/services/OllamaService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaTerminal"
      ],
      "functions": [
        "addLine",
        "executeCommand",
        "newHistory",
        "clearTerminal",
        "copyTerminalContent",
        "content",
        "handleKeyPress",
        "handleInputChange",
        "selectSuggestion",
        "showHelp",
        "getLineColor",
        "OllamaTerminal"
      ],
      "components": [
        "OllamaTerminal"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useToast",
        "useEffect",
        "useRef"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 9 functionality indicators"
    },
    "src/components/SystemFlow/AgentOSLogicalFlow.tsx": {
      "file_path": "src/components/SystemFlow/AgentOSLogicalFlow.tsx",
      "size": 2432,
      "lines": 63,
      "imports": [
        "react",
        "../ui/card"
      ],
      "exports": [
        "AgentOSLogicalFlow"
      ],
      "functions": [
        "AgentOSLogicalFlow"
      ],
      "components": [
        "AgentOSLogicalFlow"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/SystemFlow/AgentOSArchitectureDesign.tsx": {
      "file_path": "src/components/SystemFlow/AgentOSArchitectureDesign.tsx",
      "size": 3490,
      "lines": 86,
      "imports": [
        "react",
        "../ui/card"
      ],
      "exports": [
        "AgentOSArchitectureDesign"
      ],
      "functions": [
        "AgentOSArchitectureDesign"
      ],
      "components": [
        "AgentOSArchitectureDesign"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/ViewSelectorTabs.tsx": {
      "file_path": "src/components/CombinedVisualization/ViewSelectorTabs.tsx",
      "size": 2152,
      "lines": 69,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "ViewSelectorTabs"
      ],
      "functions": [
        "ViewSelectorTabs"
      ],
      "components": [
        "ViewSelectorTabs"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/CombinedVisualizationGraph.tsx": {
      "file_path": "src/components/CombinedVisualization/CombinedVisualizationGraph.tsx",
      "size": 5289,
      "lines": 171,
      "imports": [
        "react",
        "../DecisionPath/ArrowMarkers",
        "./GraphLegend",
        "./GraphHeader",
        "../DecisionPath/utils/pathUtils",
        "./ViewSelectorTabs",
        "./DecisionPathRenderer",
        "./DataLineageRenderer",
        "./NodesRenderer",
        "../DecisionPath/types"
      ],
      "exports": [
        "interface",
        "CombinedVisualizationGraph"
      ],
      "functions": [
        "toolNodes",
        "CombinedVisualizationGraph"
      ],
      "components": [
        "CombinedVisualizationGraph"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/GraphLegend.tsx": {
      "file_path": "src/components/CombinedVisualization/GraphLegend.tsx",
      "size": 2225,
      "lines": 68,
      "imports": [
        "react"
      ],
      "exports": [
        "GraphLegend"
      ],
      "functions": [
        "GraphLegend"
      ],
      "components": [
        "GraphLegend"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/NodesRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/NodesRenderer.tsx",
      "size": 2254,
      "lines": 77,
      "imports": [
        "react",
        "../DecisionPath/GraphNode",
        "../DecisionPath/types",
        "./IconRenderer",
        "lucide-react"
      ],
      "exports": [
        "NodesRenderer"
      ],
      "functions": [
        "toggleNodeExpand",
        "NodesRenderer"
      ],
      "components": [
        "NodesRenderer"
      ],
      "hooks": [
        "useLeave",
        "useEnter",
        "useState",
        "useEvent"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/DecisionPathRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/DecisionPathRenderer.tsx",
      "size": 2104,
      "lines": 62,
      "imports": [
        "react",
        "../DecisionPath/types",
        "../DecisionPath/utils/pathUtils"
      ],
      "exports": [
        "DecisionPathRenderer"
      ],
      "functions": [
        "DecisionPathRenderer"
      ],
      "components": [
        "DecisionPathRenderer"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/GraphHeader.tsx": {
      "file_path": "src/components/CombinedVisualization/GraphHeader.tsx",
      "size": 2171,
      "lines": 49,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "GraphHeader"
      ],
      "functions": [
        "GraphHeader"
      ],
      "components": [
        "GraphHeader"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/IconRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/IconRenderer.tsx",
      "size": 1641,
      "lines": 51,
      "imports": [
        "react",
        "lucide-react"
      ],
      "exports": [
        "IconRenderer"
      ],
      "functions": [
        "handleClick",
        "IconRenderer"
      ],
      "components": [
        "IconRenderer"
      ],
      "hooks": [
        "useUp",
        "useEvent",
        "useDown"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/DataLineageRenderer.tsx": {
      "file_path": "src/components/CombinedVisualization/DataLineageRenderer.tsx",
      "size": 2042,
      "lines": 66,
      "imports": [
        "react",
        "../DecisionPath/types",
        "../DecisionPath/utils/pathUtils"
      ],
      "exports": [
        "DataLineageRenderer"
      ],
      "functions": [
        "DataLineageRenderer"
      ],
      "components": [
        "DataLineageRenderer"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/CombinedVisualization/index.ts": {
      "file_path": "src/components/CombinedVisualization/index.ts",
      "size": 351,
      "lines": 8,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 8 lines"
    },
    "src/components/ArchitectureDesign/InteractiveAgentFlowDiagram.tsx": {
      "file_path": "src/components/ArchitectureDesign/InteractiveAgentFlowDiagram.tsx",
      "size": 7697,
      "lines": 246,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "InteractiveAgentFlowDiagram"
      ],
      "functions": [
        "interval",
        "getNodeIcon",
        "getStatusColor",
        "targetNode",
        "node",
        "InteractiveAgentFlowDiagram"
      ],
      "components": [
        "InteractiveAgentFlowDiagram"
      ],
      "hooks": [
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ArchitectureDesign/TechnicalBuildingBlocks.tsx": {
      "file_path": "src/components/ArchitectureDesign/TechnicalBuildingBlocks.tsx",
      "size": 4458,
      "lines": 135,
      "imports": [
        "react",
        "../ui/card",
        "../ui/button",
        "../ui/badge"
      ],
      "exports": [
        "TechnicalBuildingBlocks"
      ],
      "functions": [
        "getStatusColor",
        "getCategoryColor",
        "TechnicalBuildingBlocks"
      ],
      "components": [
        "TechnicalBuildingBlocks"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ArchitectureDesign/ComponentLibrary.tsx": {
      "file_path": "src/components/ArchitectureDesign/ComponentLibrary.tsx",
      "size": 5942,
      "lines": 177,
      "imports": [
        "react",
        "../ui/card",
        "../ui/button",
        "../ui/badge",
        "../ui/input",
        "lucide-react"
      ],
      "exports": [
        "ComponentLibrary"
      ],
      "functions": [
        "getTypeColor",
        "ComponentLibrary"
      ],
      "components": [
        "ComponentLibrary"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/components/ArchitectureDesign/ArchitectureDesignDashboard.tsx": {
      "file_path": "src/components/ArchitectureDesign/ArchitectureDesignDashboard.tsx",
      "size": 3694,
      "lines": 100,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "./InteractiveAgentFlowDiagram",
        "./TechnicalBuildingBlocks",
        "./ComponentLibrary",
        "../SystemFlow/AgentOSArchitectureDesign"
      ],
      "exports": [
        "ArchitectureDesignDashboard"
      ],
      "functions": [
        "ArchitectureDesignDashboard"
      ],
      "components": [
        "ArchitectureDesignDashboard"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/useRealStrandsAgents.ts": {
      "file_path": "src/hooks/useRealStrandsAgents.ts",
      "size": 4336,
      "lines": 146,
      "imports": [
        "react",
        "./useOllamaModels"
      ],
      "exports": [
        "useRealStrandsAgents"
      ],
      "functions": [
        "useRealStrandsAgents",
        "loadAgents",
        "createAgent",
        "deleteAgent",
        "executeAgent",
        "getAgent",
        "getConversations",
        "getAvailableModels",
        "healthCheck",
        "refreshAgents",
        "useRealStrandsAgents"
      ],
      "components": [],
      "hooks": [
        "useOllamaModels",
        "useRealStrandsAgents",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useUtilityConfiguration.ts": {
      "file_path": "src/hooks/useUtilityConfiguration.ts",
      "size": 4033,
      "lines": 111,
      "imports": [
        "react",
        "@/types/WorkflowUtilityTypes"
      ],
      "exports": [
        "useUtilityConfiguration"
      ],
      "functions": [
        "useUtilityConfiguration",
        "saveNodeConfiguration",
        "getNodeConfiguration",
        "isNodeConfigured",
        "removeNodeConfiguration",
        "allNodes",
        "loadSavedConfigurations",
        "nodeMap",
        "getAllConfiguredNodes",
        "exportConfiguration",
        "importConfiguration",
        "nodeMap"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useState",
        "useUtilityConfiguration"
      ],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.delete\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/use-toast.tsx": {
      "file_path": "src/hooks/use-toast.tsx",
      "size": 71,
      "lines": 4,
      "imports": [],
      "exports": [
        "everything"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 4 lines"
    },
    "src/hooks/use-mobile.tsx": {
      "file_path": "src/hooks/use-mobile.tsx",
      "size": 565,
      "lines": 20,
      "imports": [
        "react"
      ],
      "exports": [
        "useIsMobile"
      ],
      "functions": [
        "useIsMobile",
        "onChange"
      ],
      "components": [],
      "hooks": [
        "useEffect",
        "useState",
        "useIsMobile"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/hooks/useOllamaAgentsForPalette.ts": {
      "file_path": "src/hooks/useOllamaAgentsForPalette.ts",
      "size": 6056,
      "lines": 163,
      "imports": [
        "react",
        "@/lib/services/OllamaAgentService",
        "@/config/ollamaModels"
      ],
      "exports": [
        "interface",
        "useOllamaAgentsForPalette"
      ],
      "functions": [
        "for",
        "useOllamaAgentsForPalette",
        "transformOllamaAgentToPaletteAgent",
        "getAgentIcon",
        "loadAgents",
        "agentsWithEnhancedGuardrails",
        "refreshAgents",
        "useOllamaAgentsForPalette"
      ],
      "components": [],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useStrandsUtilitiesStatic.ts": {
      "file_path": "src/hooks/useStrandsUtilitiesStatic.ts",
      "size": 3270,
      "lines": 131,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useStrandsUtilities"
      ],
      "functions": [
        "useStrandsUtilities",
        "getUtilitiesByCategory",
        "getUtilityById",
        "updateUtilityConfig"
      ],
      "components": [],
      "hooks": [
        "useStrandsUtilities",
        "useCallback",
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/useStrandsOllamaAgents.ts": {
      "file_path": "src/hooks/useStrandsOllamaAgents.ts",
      "size": 5968,
      "lines": 189,
      "imports": [
        "react",
        "@/lib/services/StrandsOllamaAgentService",
        "./useOllamaModels"
      ],
      "exports": [
        "useStrandsOllamaAgents"
      ],
      "functions": [
        "useStrandsOllamaAgents",
        "loadAgents",
        "createAgent",
        "deleteAgent",
        "updateAgent",
        "getAgentMetrics",
        "getAgentExecutions",
        "agent",
        "createConversation",
        "getConversation",
        "getAgentConversations",
        "healthCheck",
        "refreshAgents",
        "totalExecutions",
        "successfulExecutions",
        "useStrandsOllamaAgents"
      ],
      "components": [],
      "hooks": [
        "useOllamaModels",
        "useState",
        "useStrandsOllamaAgents",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useOllamaModels.ts": {
      "file_path": "src/hooks/useOllamaModels.ts",
      "size": 1347,
      "lines": 53,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useOllamaModels"
      ],
      "functions": [
        "useOllamaModels",
        "fetchModels",
        "timeoutId",
        "useOllamaModels"
      ],
      "components": [],
      "hooks": [
        "useOllamaModels",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 6 functionality indicators"
    },
    "src/hooks/useSupabaseApiKey.ts": {
      "file_path": "src/hooks/useSupabaseApiKey.ts",
      "size": 3903,
      "lines": 131,
      "imports": [
        "react",
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "interface",
        "useSupabaseApiKey"
      ],
      "functions": [
        "useSupabaseApiKey",
        "fetchApiKey",
        "setApiKey",
        "useSupabaseApiKey"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useSupabaseApiKey",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useModelProvider.ts": {
      "file_path": "src/hooks/useModelProvider.ts",
      "size": 4214,
      "lines": 138,
      "imports": [
        "react",
        "@/hooks/useSupabaseApiKey",
        "@/integrations/supabase/client",
        "@/utils/models/modelTypes"
      ],
      "exports": [
        "type",
        "useModelProvider"
      ],
      "functions": [
        "getDefaultModel",
        "useModelProvider",
        "fetchSelectedModel",
        "saveSelectedModel",
        "validateConfiguration",
        "useModelProvider"
      ],
      "components": [],
      "hooks": [
        "useSupabaseApiKey",
        "useState",
        "useModelProvider",
        "useEffect"
      ],
      "api_calls": [],
      "status": "FUNCTIONAL",
      "confidence": 85,
      "reason": "Has 8 functionality indicators"
    },
    "src/hooks/useWorkflowExecution.ts": {
      "file_path": "src/hooks/useWorkflowExecution.ts",
      "size": 7947,
      "lines": 298,
      "imports": [
        "react",
        "@/lib/services/WorkflowExecutionService"
      ],
      "exports": [
        "interface",
        "interface",
        "useWorkflowExecution"
      ],
      "functions": [
        "useWorkflowExecution",
        "registerAgent",
        "testAgent",
        "createWorkflow",
        "executeWorkflow",
        "quickExecute",
        "stopExecution",
        "clearResults",
        "refreshAgents",
        "refreshWorkflows",
        "autoRegisterOllamaAgents",
        "useWorkflowExecution"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useWorkflowExecution"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useRagWorkflow.ts": {
      "file_path": "src/hooks/useRagWorkflow.ts",
      "size": 4892,
      "lines": 156,
      "imports": [
        "react",
        "@/utils/vectorStore",
        "@/hooks/useModelProvider",
        "@/utils/ragService",
        "sonner",
        "@/integrations/supabase/client"
      ],
      "exports": [
        "interface",
        "useRagWorkflow"
      ],
      "functions": [
        "useRagWorkflow",
        "useRagWorkflow"
      ],
      "components": [],
      "hooks": [
        "useVectorStore",
        "useRAGService",
        "useState",
        "useRagWorkflow",
        "useModelProvider"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useStrandsNativeTools.ts": {
      "file_path": "src/hooks/useStrandsNativeTools.ts",
      "size": 21109,
      "lines": 723,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useStrandsNativeTools"
      ],
      "functions": [
        "useStrandsNativeTools",
        "loadStrandsNativeTools",
        "getToolById",
        "getToolsByCategory",
        "searchTools",
        "validateApiConfig"
      ],
      "components": [],
      "hooks": [
        "useStrandsNativeTools",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useProcessingLogs.ts": {
      "file_path": "src/hooks/useProcessingLogs.ts",
      "size": 1996,
      "lines": 79,
      "imports": [
        "react"
      ],
      "exports": [
        "interface",
        "useProcessingLogs"
      ],
      "functions": [
        "useProcessingLogs",
        "fetchLogs",
        "clearLogs",
        "interval",
        "refreshLogs",
        "useProcessingLogs"
      ],
      "components": [],
      "hooks": [
        "useCallback",
        "useProcessingLogs",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/useSupabaseConnection.ts": {
      "file_path": "src/hooks/useSupabaseConnection.ts",
      "size": 8531,
      "lines": 273,
      "imports": [
        "react",
        "@/integrations/supabase/client",
        "sonner"
      ],
      "exports": [
        "type",
        "type",
        "interface",
        "interface",
        "useSupabaseConnection"
      ],
      "functions": [
        "loadConnection",
        "setEnabled",
        "setSettings",
        "testConnection",
        "useSupabaseConnection"
      ],
      "components": [],
      "hooks": [
        "useSupabaseConnection",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "src/hooks/useStrandsUtilities.ts": {
      "file_path": "src/hooks/useStrandsUtilities.ts",
      "size": 3192,
      "lines": 120,
      "imports": [
        "react",
        "../lib/frameworks/StrandsSDK"
      ],
      "exports": [
        "interface",
        "useStrandsUtilities"
      ],
      "functions": [
        "useStrandsUtilities",
        "loadStrandsUtilities",
        "mappedUtilities",
        "getUtilityColor",
        "getUtilityStatus",
        "configureUtility"
      ],
      "components": [],
      "hooks": [
        "useStrandsUtilities",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/hooks/toast/toast.ts": {
      "file_path": "src/hooks/toast/toast.ts",
      "size": 839,
      "lines": 41,
      "imports": [
        "./types",
        "./utils"
      ],
      "exports": [
        "toast",
        "dismissToast"
      ],
      "functions": [
        "toast",
        "for",
        "dismissToast",
        "update",
        "dismiss"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/utils.ts": {
      "file_path": "src/hooks/toast/utils.ts",
      "size": 874,
      "lines": 35,
      "imports": [
        "./types"
      ],
      "exports": [
        "generateId",
        "let",
        "setDispatch",
        "toastTimeouts",
        "setToastTimeout"
      ],
      "functions": [
        "generateId",
        "export",
        "setToastTimeout",
        "setDispatch",
        "timeout",
        "setDispatch",
        "toastTimeouts"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/use-toast.ts": {
      "file_path": "src/hooks/toast/use-toast.ts",
      "size": 1000,
      "lines": 48,
      "imports": [
        "./types",
        "./context",
        "./utils"
      ],
      "exports": [
        "useToast"
      ],
      "functions": [
        "useToast",
        "toast",
        "update",
        "dismiss"
      ],
      "components": [],
      "hooks": [
        "useToastContext",
        "useToast"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/types.ts": {
      "file_path": "src/hooks/toast/types.ts",
      "size": 913,
      "lines": 45,
      "imports": [
        "react",
        "@/components/ui/toast"
      ],
      "exports": [
        "TOAST_LIMIT",
        "TOAST_REMOVE_DELAY",
        "type",
        "actionTypes",
        "type",
        "type",
        "interface"
      ],
      "functions": [
        "TOAST_LIMIT",
        "TOAST_REMOVE_DELAY",
        "actionTypes"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/reducer.ts": {
      "file_path": "src/hooks/toast/reducer.ts",
      "size": 1489,
      "lines": 62,
      "imports": [
        "./types",
        "./utils",
        "./types"
      ],
      "exports": [
        "reducer"
      ],
      "functions": [
        "reducer",
        "reducer"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/context.tsx": {
      "file_path": "src/hooks/toast/context.tsx",
      "size": 1111,
      "lines": 43,
      "imports": [
        "react",
        "./types",
        "./reducer",
        "./utils"
      ],
      "exports": [
        "ToastContext",
        "ToastProvider",
        "useToastContext"
      ],
      "functions": [
        "ToastProvider",
        "useToastContext",
        "ToastContext"
      ],
      "components": [],
      "hooks": [
        "useToastContext",
        "useReducer",
        "useContext",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/hooks/toast/index.ts": {
      "file_path": "src/hooks/toast/index.ts",
      "size": 184,
      "lines": 6,
      "imports": [],
      "exports": [
        "all"
      ],
      "functions": [],
      "components": [],
      "hooks": [
        "useToast"
      ],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/lib/utils.ts": {
      "file_path": "src/lib/utils.ts",
      "size": 165,
      "lines": 6,
      "imports": [
        "clsx",
        "tailwind-merge"
      ],
      "exports": [
        "cn"
      ],
      "functions": [
        "cn"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/lib/apiClient.ts": {
      "file_path": "src/lib/apiClient.ts",
      "size": 2588,
      "lines": 112,
      "imports": [
        "../config/appConfig"
      ],
      "exports": [
        "apiClient",
        "apiClient"
      ],
      "functions": [
        "apiClient"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\("
      ],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 6 functionality indicators"
    },
    "src/lib/frameworks/StrandsOllamaSDK.ts": {
      "file_path": "src/lib/frameworks/StrandsOllamaSDK.ts",
      "size": 19183,
      "lines": 597,
      "imports": [
        "../services/OllamaService",
        "./StrandsSDK"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsOllamaSDK",
        "strandsOllamaSDK"
      ],
      "functions": [
        "modelExists",
        "pathPromises",
        "bestPath",
        "totalTokens",
        "stepsText",
        "avgConfidence",
        "confidenceScores",
        "avgConfidence",
        "strandsOllamaSDK"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/frameworks/StrandsSDK.ts": {
      "file_path": "src/lib/frameworks/StrandsSDK.ts",
      "size": 16881,
      "lines": 508,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsSDK"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\(",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/frameworks/AgentCoreSDK.ts": {
      "file_path": "src/lib/frameworks/AgentCoreSDK.ts",
      "size": 15865,
      "lines": 583,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "AgentCoreSDK"
      ],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\(",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/RealStrandsService.ts": {
      "file_path": "src/lib/services/RealStrandsService.ts",
      "size": 7351,
      "lines": 308,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "RealStrandsService",
        "realStrandsService"
      ],
      "functions": [
        "realStrandsService"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/RAGService.ts": {
      "file_path": "src/lib/services/RAGService.ts",
      "size": 10998,
      "lines": 444,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "RAGService",
        "ragService",
        "RAGUtils"
      ],
      "functions": [
        "ragService",
        "RAGUtils"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/DocumentRAGService.ts": {
      "file_path": "src/lib/services/DocumentRAGService.ts",
      "size": 1226,
      "lines": 50,
      "imports": [
        "../apiClient"
      ],
      "exports": [
        "DocumentRAGService",
        "documentRAGService",
        "documentRAGService"
      ],
      "functions": [
        "documentRAGService"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/StrandsOllamaAgentService.ts": {
      "file_path": "src/lib/services/StrandsOllamaAgentService.ts",
      "size": 27884,
      "lines": 914,
      "imports": [
        "./OllamaService"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsOllamaAgentService",
        "strandsOllamaAgentService"
      ],
      "functions": [
        "pathPromises",
        "validPaths",
        "bestPath",
        "stepsText",
        "avgConfidence",
        "agentExecutions",
        "successful",
        "failed",
        "totalTokens",
        "totalDuration",
        "totalSteps",
        "totalConfidence",
        "strandsOllamaAgentService"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\(",
        "\\.get\\s*\\(",
        "\\.delete\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/WorkflowExecutionService.ts": {
      "file_path": "src/lib/services/WorkflowExecutionService.ts",
      "size": 9412,
      "lines": 346,
      "imports": [
        "../apiClient"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "workflowExecutionService"
      ],
      "functions": [
        "poll",
        "edges",
        "workflowExecutionService"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/OllamaService.ts": {
      "file_path": "src/lib/services/OllamaService.ts",
      "size": 879,
      "lines": 37,
      "imports": [
        "../apiClient"
      ],
      "exports": [
        "OllamaService",
        "ollamaService",
        "ollamaService"
      ],
      "functions": [
        "ollamaService"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/StrandsWorkflowOrchestrator.ts": {
      "file_path": "src/lib/services/StrandsWorkflowOrchestrator.ts",
      "size": 21698,
      "lines": 769,
      "imports": [
        "@xyflow/react",
        "@/hooks/useOllamaAgentsForPalette",
        "@/lib/services/MCPGatewayService"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "interface",
        "StrandsWorkflowOrchestrator",
        "interface"
      ],
      "functions": [
        "entryNodes",
        "nextEdges",
        "nextNode"
      ],
      "components": [],
      "hooks": [
        "useOllamaAgentsForPalette",
        "useCase"
      ],
      "api_calls": [
        "\\.get\\s*\\("
      ],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 6 functionality indicators"
    },
    "src/lib/services/MCPGatewayService.ts": {
      "file_path": "src/lib/services/MCPGatewayService.ts",
      "size": 19873,
      "lines": 630,
      "imports": [],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "mcpGatewayService",
        "MCPGatewayService"
      ],
      "functions": [
        "searchResults",
        "serverIndex",
        "server",
        "toolIndex",
        "tool",
        "server",
        "mcpGatewayService"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/ChatExecutionService.ts": {
      "file_path": "src/lib/services/ChatExecutionService.ts",
      "size": 13720,
      "lines": 371,
      "imports": [
        "./StrandsWorkflowOrchestrator",
        "./WorkflowExecutionService"
      ],
      "exports": [
        "interface",
        "ChatExecutionService"
      ],
      "functions": [
        "entryNodes",
        "node",
        "entryNodes"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/lib/services/OllamaAgentService.ts": {
      "file_path": "src/lib/services/OllamaAgentService.ts",
      "size": 30544,
      "lines": 939,
      "imports": [
        "./OllamaService"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "OllamaAgentService",
        "ollamaAgentService"
      ],
      "functions": [
        "agentExecutions",
        "successful",
        "failed",
        "totalTokens",
        "totalDuration",
        "ollamaAgentService"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "fetch\\s*\\(",
        "\\.get\\s*\\(",
        "\\.delete\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/lib/services/FlexibleChatService.ts": {
      "file_path": "src/lib/services/FlexibleChatService.ts",
      "size": 14265,
      "lines": 467,
      "imports": [
        "./OllamaService",
        "./OllamaAgentService",
        "@/hooks/useOllamaAgentsForPalette",
        "@/config/ollamaModels"
      ],
      "exports": [
        "interface",
        "interface",
        "interface",
        "interface",
        "FlexibleChatService"
      ],
      "functions": [
        "agent"
      ],
      "components": [],
      "hooks": [
        "useOllamaAgentsForPalette"
      ],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.delete\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/Settings.tsx": {
      "file_path": "src/pages/Settings.tsx",
      "size": 13509,
      "lines": 326,
      "imports": [
        "react",
        "../components/ui/card",
        "../components/ui/button",
        "../components/ui/badge",
        "../components/ui/tabs"
      ],
      "exports": [
        "Settings"
      ],
      "functions": [
        "Settings"
      ],
      "components": [
        "Settings"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/Index.tsx": {
      "file_path": "src/pages/Index.tsx",
      "size": 145,
      "lines": 6,
      "imports": [
        "react",
        "@/components/MainContent"
      ],
      "exports": [
        "Index"
      ],
      "functions": [
        "Index"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/pages/Auth.tsx": {
      "file_path": "src/pages/Auth.tsx",
      "size": 5973,
      "lines": 159,
      "imports": [
        "react",
        "react-router-dom",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "sonner",
        "@/components/ui/alert",
        "lucide-react"
      ],
      "exports": [
        "Auth"
      ],
      "functions": [
        "Auth",
        "timer",
        "handleLogin",
        "handleSignup"
      ],
      "components": [
        "Auth"
      ],
      "hooks": [
        "useNavigate",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/pages/SimpleDocumentTest.tsx": {
      "file_path": "src/pages/SimpleDocumentTest.tsx",
      "size": 477,
      "lines": 13,
      "imports": [
        "react"
      ],
      "exports": [
        "SimpleDocumentTest"
      ],
      "functions": [
        "SimpleDocumentTest"
      ],
      "components": [
        "SimpleDocumentTest"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 13 lines"
    },
    "src/pages/CommandCentreTest.tsx": {
      "file_path": "src/pages/CommandCentreTest.tsx",
      "size": 1302,
      "lines": 35,
      "imports": [
        "react"
      ],
      "exports": [
        "CommandCentreTest"
      ],
      "functions": [
        "CommandCentreTest"
      ],
      "components": [
        "CommandCentreTest"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/CustomerValueManagement.tsx": {
      "file_path": "src/pages/CustomerValueManagement.tsx",
      "size": 7212,
      "lines": 199,
      "imports": [
        "react",
        "../components/ui/card",
        "../components/ui/button",
        "../components/ui/badge",
        "../components/ui/tabs"
      ],
      "exports": [
        "CustomerValueManagement"
      ],
      "functions": [
        "CustomerValueManagement"
      ],
      "components": [
        "CustomerValueManagement"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/CustomerAnalytics.tsx": {
      "file_path": "src/pages/CustomerAnalytics.tsx",
      "size": 1080,
      "lines": 34,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "CustomerAnalytics"
      ],
      "functions": [
        "CustomerAnalytics"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/Agents.tsx": {
      "file_path": "src/pages/Agents.tsx",
      "size": 1073,
      "lines": 34,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "Agents"
      ],
      "functions": [
        "Agents"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/SimpleOllamaAgentDashboard.tsx": {
      "file_path": "src/pages/SimpleOllamaAgentDashboard.tsx",
      "size": 6907,
      "lines": 190,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "lucide-react",
        "@/lib/services/OllamaAgentService",
        "@/hooks/use-toast"
      ],
      "exports": [
        "SimpleOllamaAgentDashboard"
      ],
      "functions": [
        "loadAgents",
        "handleStartChat",
        "SimpleOllamaAgentDashboard"
      ],
      "components": [
        "SimpleOllamaAgentDashboard"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/StrandsOllamaAgentDashboard.tsx": {
      "file_path": "src/pages/StrandsOllamaAgentDashboard.tsx",
      "size": 21794,
      "lines": 488,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/hooks/useOllamaModels",
        "@/hooks/use-toast"
      ],
      "exports": [
        "StrandsOllamaAgentDashboard"
      ],
      "functions": [
        "getAgentStatus",
        "handleDeleteAgent",
        "formatTime",
        "formatDate",
        "getStatusColor",
        "getStatusIcon",
        "StrandsOllamaAgentDashboard"
      ],
      "components": [
        "StrandsOllamaAgentDashboard"
      ],
      "hooks": [
        "useOllamaModels",
        "useToast",
        "useState"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 5 functionality indicators"
    },
    "src/pages/OllamaAgentDashboard.tsx": {
      "file_path": "src/pages/OllamaAgentDashboard.tsx",
      "size": 22974,
      "lines": 542,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/lib/services/OllamaAgentService",
        "@/components/CommandCentre/CreateAgent/OllamaAgentDialog",
        "@/components/InlineAgentChat",
        "@/components/DebugOllamaAgent",
        "@/components/AgentConfigDialog",
        "@/hooks/use-toast"
      ],
      "exports": [
        "OllamaAgentDashboard"
      ],
      "functions": [
        "interval",
        "loadAgents",
        "loadHealthStatus",
        "handleAgentCreated",
        "handleDeleteAgent",
        "handleShowConfig",
        "handleChatWithAgent",
        "handleCloseChat",
        "formatDuration",
        "totalExecs",
        "successfulExecs",
        "agent",
        "OllamaAgentDashboard"
      ],
      "components": [
        "OllamaAgentDashboard"
      ],
      "hooks": [
        "useToast",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/RiskAnalytics.tsx": {
      "file_path": "src/pages/RiskAnalytics.tsx",
      "size": 3212,
      "lines": 81,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "RiskAnalytics"
      ],
      "functions": [
        "RiskAnalytics"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/UnifiedDocumentWorkspace.tsx": {
      "file_path": "src/pages/UnifiedDocumentWorkspace.tsx",
      "size": 28441,
      "lines": 734,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/scroll-area",
        "@/lib/services/OllamaService",
        "@/components/BackendControl",
        "@/components/Documents/DocumentProcessingLogs"
      ],
      "exports": [
        "UnifiedDocumentWorkspace"
      ],
      "functions": [
        "initializeOllama",
        "modelNames",
        "defaultModel",
        "handleFileUpload",
        "extractTextFromFile",
        "chunkText",
        "sentences",
        "handleDragOver",
        "handleDragLeave",
        "handleDrop",
        "handleFileInput",
        "findRelevantChunks",
        "handleSendMessage",
        "readyDocs",
        "toggleDocumentSelection",
        "readyDocuments",
        "UnifiedDocumentWorkspace"
      ],
      "components": [
        "UnifiedDocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/MinimalDocumentWorkspace.tsx": {
      "file_path": "src/pages/MinimalDocumentWorkspace.tsx",
      "size": 5409,
      "lines": 139,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "MinimalDocumentWorkspace"
      ],
      "functions": [
        "loadModels",
        "modelNames",
        "MinimalDocumentWorkspace"
      ],
      "components": [
        "MinimalDocumentWorkspace"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/SystemFlow.tsx": {
      "file_path": "src/pages/SystemFlow.tsx",
      "size": 622,
      "lines": 19,
      "imports": [
        "react",
        "@/components/SystemFlow/AgentOSArchitectureDesign"
      ],
      "exports": [
        "SystemFlow"
      ],
      "functions": [
        "SystemFlow"
      ],
      "components": [
        "SystemFlow"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 19 lines"
    },
    "src/pages/ArchitectureDesign.tsx": {
      "file_path": "src/pages/ArchitectureDesign.tsx",
      "size": 2923,
      "lines": 88,
      "imports": [
        "react",
        "@/components/ui/card",
        "lucide-react"
      ],
      "exports": [
        "ArchitectureDesign"
      ],
      "functions": [
        "ArchitectureDesign"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/Marketplace.tsx": {
      "file_path": "src/pages/Marketplace.tsx",
      "size": 275,
      "lines": 15,
      "imports": [
        "react",
        "@/components/Layout",
        "@/components/AgentMarketplace"
      ],
      "exports": [
        "AgentExchange"
      ],
      "functions": [
        "AgentExchange"
      ],
      "components": [
        "AgentExchange"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 15 lines"
    },
    "src/pages/TestRealDocumentWorkspace.tsx": {
      "file_path": "src/pages/TestRealDocumentWorkspace.tsx",
      "size": 348,
      "lines": 10,
      "imports": [
        "react"
      ],
      "exports": [
        "TestRealDocumentWorkspace"
      ],
      "functions": [
        "TestRealDocumentWorkspace"
      ],
      "components": [
        "TestRealDocumentWorkspace"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 10 lines"
    },
    "src/pages/CommandCentreSimple.tsx": {
      "file_path": "src/pages/CommandCentreSimple.tsx",
      "size": 1566,
      "lines": 44,
      "imports": [
        "react"
      ],
      "exports": [
        "CommandCentreSimple"
      ],
      "functions": [
        "CommandCentreSimple"
      ],
      "components": [
        "CommandCentreSimple"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/Test.tsx": {
      "file_path": "src/pages/Test.tsx",
      "size": 293,
      "lines": 12,
      "imports": [
        "react"
      ],
      "exports": [
        "Test"
      ],
      "functions": [
        "Test"
      ],
      "components": [
        "Test"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 12 lines"
    },
    "src/pages/DebugPage.tsx": {
      "file_path": "src/pages/DebugPage.tsx",
      "size": 940,
      "lines": 24,
      "imports": [
        "react"
      ],
      "exports": [
        "DebugPage"
      ],
      "functions": [
        "DebugPage"
      ],
      "components": [
        "DebugPage"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/CustomerInsights.tsx": {
      "file_path": "src/pages/CustomerInsights.tsx",
      "size": 0,
      "lines": 1,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 1 lines"
    },
    "src/pages/MultiAgentWorkspace.tsx": {
      "file_path": "src/pages/MultiAgentWorkspace.tsx",
      "size": 1681,
      "lines": 50,
      "imports": [
        "react",
        "@/components/MultiAgentWorkspace/WealthManagementWorkspace",
        "@/components/MultiAgentWorkspace/TelcoCvmWorkspace",
        "@/components/MultiAgentWorkspace/NetworkTwinWorkspace",
        "@/components/MultiAgentWorkspace/BlankWorkspace",
        "@/components/MultiAgentWorkspace/StrandsBlankWorkspace",
        "@/components/MultiAgentWorkspace/MultiAgentProjectSelector"
      ],
      "exports": [
        "MultiAgentWorkspace"
      ],
      "functions": [
        "MultiAgentWorkspace",
        "handleSelectProject",
        "handleBackToProjects"
      ],
      "components": [
        "MultiAgentWorkspace"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/SimpleMCPDashboard.tsx": {
      "file_path": "src/pages/SimpleMCPDashboard.tsx",
      "size": 5756,
      "lines": 144,
      "imports": [
        "react"
      ],
      "exports": [
        "SimpleMCPDashboard"
      ],
      "functions": [
        "SimpleMCPDashboard"
      ],
      "components": [
        "SimpleMCPDashboard"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/SimpleRealDocumentWorkspace.tsx": {
      "file_path": "src/pages/SimpleRealDocumentWorkspace.tsx",
      "size": 29505,
      "lines": 736,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/scroll-area",
        "@/components/ui/select",
        "@/components/Documents/DocumentProcessingLogs",
        "@/components/Documents/DocumentChat",
        "@/components/Documents/AgentDocumentChat",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "SimpleRealDocumentWorkspace"
      ],
      "functions": [
        "handleFileUpload",
        "handleDragOver",
        "handleDragLeave",
        "handleDrop",
        "handleFileInput",
        "loadModels",
        "modelNames",
        "defaultModel",
        "modelNames",
        "defaultModel",
        "handleDocumentSelectionChange",
        "readyDocuments",
        "SimpleRealDocumentWorkspace"
      ],
      "components": [
        "SimpleRealDocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useRef",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "src/pages/CommandCentre.tsx": {
      "file_path": "src/pages/CommandCentre.tsx",
      "size": 4076,
      "lines": 106,
      "imports": [
        "react",
        "@/components/Layout",
        "@/contexts/IndustryContext",
        "@/components/CommandCentre/TelcoProjectData"
      ],
      "exports": [
        "AgentCommand"
      ],
      "functions": [
        "AgentCommand",
        "projectData",
        "handleNodeClick",
        "handleTabChange",
        "handleProjectSelect"
      ],
      "components": [
        "AgentCommand"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useEffect",
        "useRef",
        "useIndustry",
        "useMemo"
      ],
      "api_calls": [],
      "status": "PARTIAL",
      "confidence": 70,
      "reason": "Has 4 functionality indicators"
    },
    "src/pages/NetworkTwin.tsx": {
      "file_path": "src/pages/NetworkTwin.tsx",
      "size": 6127,
      "lines": 160,
      "imports": [
        "react",
        "@/components/NetworkTwin/NetworkTwinHeader",
        "@/components/NetworkTwin/SimulationPanel",
        "@/components/NetworkTwin/components/InteractiveNetworkTopology",
        "@/components/NetworkTwin/AnalysisPanel",
        "@/components/NetworkTwin/NetworkAgents",
        "@/components/NetworkTwin/modals/AgentDetailModal",
        "@/components/NetworkTwin/modals/SiteDetailModal",
        "@/components/ui/tabs",
        "@/components/NetworkTwin/hooks/useNetworkTwinNavigation",
        "@/components/NetworkTwin/data/networkTwinData",
        "@/components/NetworkTwin/NetworkSelector",
        "@/hooks/use-toast"
      ],
      "exports": [
        "NetworkTwin"
      ],
      "functions": [
        "NetworkTwin",
        "handleAgentDeploy",
        "handleAgentStop",
        "handleSiteOptimize",
        "handleSiteMaintenance",
        "handleAnalysisClick"
      ],
      "components": [
        "NetworkTwin"
      ],
      "hooks": [
        "useToast",
        "useNetworkTwinNavigation"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/AgentControlPanel.tsx": {
      "file_path": "src/pages/AgentControlPanel.tsx",
      "size": 181,
      "lines": 6,
      "imports": [
        "react",
        "@/components/AgentDashboard/AgentDashboard"
      ],
      "exports": [
        "AgentControlPanel"
      ],
      "functions": [
        "AgentControlPanel"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 6 lines"
    },
    "src/pages/CommandCentreDebug.tsx": {
      "file_path": "src/pages/CommandCentreDebug.tsx",
      "size": 1098,
      "lines": 29,
      "imports": [
        "react",
        "@/components/CommandCentre/QuickActionsDebug"
      ],
      "exports": [
        "CommandCentreDebug"
      ],
      "functions": [
        "CommandCentreDebug"
      ],
      "components": [
        "CommandCentreDebug"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/RealDocumentWorkspace.tsx": {
      "file_path": "src/pages/RealDocumentWorkspace.tsx",
      "size": 23601,
      "lines": 601,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/Documents/DocumentUploader",
        "@/components/Documents/DocumentChat",
        "@/components/Documents/DocumentLibrary",
        "@/lib/services/DocumentRAGService",
        "@/lib/services/OllamaService",
        "@/components/Documents/RAGDebugPanel",
        "@/components/Documents/DocumentMetadataPanel",
        "@/components/Documents/DocumentProcessingLogs"
      ],
      "exports": [
        "RealDocumentWorkspace"
      ],
      "functions": [
        "addProcessingLog",
        "handleDocumentUpload",
        "handleDocumentSelect",
        "handleChatQuery",
        "readyDocuments",
        "RealDocumentWorkspace"
      ],
      "components": [
        "RealDocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "fetch\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/MCPGatewayTest.tsx": {
      "file_path": "src/pages/MCPGatewayTest.tsx",
      "size": 528,
      "lines": 17,
      "imports": [
        "react"
      ],
      "exports": [
        "MCPGatewayTest"
      ],
      "functions": [
        "MCPGatewayTest"
      ],
      "components": [
        "MCPGatewayTest"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "MINIMAL",
      "confidence": 60,
      "reason": "Only 17 lines"
    },
    "src/pages/MCPDashboard.tsx": {
      "file_path": "src/pages/MCPDashboard.tsx",
      "size": 32031,
      "lines": 841,
      "imports": [
        "react",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/switch",
        "@/lib/services/MCPGatewayService",
        "sonner"
      ],
      "exports": [
        "MCPGateway"
      ],
      "functions": [
        "loadData",
        "connectedServers",
        "verifiedTools",
        "getStatusIcon",
        "testConnection",
        "deleteServer",
        "getCategoryIcon",
        "deleteTool",
        "connectedServers",
        "verifiedTools",
        "toolsByCategory",
        "handleSubmit",
        "handleSubmit",
        "MCPGateway",
        "ServersTab",
        "ToolsTab",
        "AnalyticsTab",
        "AddServerDialog",
        "AddToolDialog"
      ],
      "components": [
        "MCPGateway",
        "ServersTab",
        "ToolsTab",
        "AnalyticsTab",
        "AddServerDialog",
        "AddToolDialog"
      ],
      "hooks": [
        "useState",
        "useEffect"
      ],
      "api_calls": [
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/DocumentWorkspace.tsx": {
      "file_path": "src/pages/DocumentWorkspace.tsx",
      "size": 22582,
      "lines": 552,
      "imports": [
        "react",
        "lucide-react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/Documents/DocumentUploader",
        "@/components/Documents/DocumentChat",
        "@/components/Documents/DocumentLibrary",
        "@/components/Documents/AgentSuggestions",
        "@/lib/services/DocumentRAGService",
        "@/lib/services/OllamaService"
      ],
      "exports": [
        "DocumentWorkspace"
      ],
      "functions": [
        "checkOllamaStatus",
        "addProcessingLog",
        "updateDocumentProgress",
        "handleDocumentUpload",
        "updated",
        "readyCount",
        "readyDocuments",
        "DocumentWorkspace"
      ],
      "components": [
        "DocumentWorkspace"
      ],
      "hooks": [
        "useCallback",
        "useState",
        "useEffect"
      ],
      "api_calls": [],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "src/pages/NotFound.tsx": {
      "file_path": "src/pages/NotFound.tsx",
      "size": 739,
      "lines": 28,
      "imports": [
        "react-router-dom",
        "react"
      ],
      "exports": [
        "NotFound"
      ],
      "functions": [
        "NotFound"
      ],
      "components": [
        "NotFound"
      ],
      "hooks": [
        "useLocation",
        "useEffect"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/WealthManagement.tsx": {
      "file_path": "src/pages/WealthManagement.tsx",
      "size": 7696,
      "lines": 205,
      "imports": [
        "react",
        "../components/ui/card",
        "../components/ui/button",
        "../components/ui/badge",
        "../components/ui/tabs"
      ],
      "exports": [
        "WealthManagement"
      ],
      "functions": [
        "WealthManagement"
      ],
      "components": [
        "WealthManagement"
      ],
      "hooks": [
        "useState"
      ],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "src/pages/OllamaTerminal.tsx": {
      "file_path": "src/pages/OllamaTerminal.tsx",
      "size": 3311,
      "lines": 78,
      "imports": [
        "react",
        "@/components/SimpleOllamaTerminal",
        "@/components/BackendControl"
      ],
      "exports": [
        "OllamaTerminalPage"
      ],
      "functions": [
        "OllamaTerminalPage"
      ],
      "components": [
        "OllamaTerminalPage"
      ],
      "hooks": [],
      "api_calls": [],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "backend/workflow_engine.py": {
      "file_path": "backend/workflow_engine.py",
      "size": 18879,
      "lines": 501,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\("
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "backend/strands_integration.py": {
      "file_path": "backend/strands_integration.py",
      "size": 15032,
      "lines": 395,
      "imports": [],
      "exports": [],
      "functions": [
        "class"
      ],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "backend/rag_service.py": {
      "file_path": "backend/rag_service.py",
      "size": 30545,
      "lines": 663,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "backend/aws_agentcore_api.py": {
      "file_path": "backend/aws_agentcore_api.py",
      "size": 40827,
      "lines": 1149,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    },
    "backend/minimal_api.py": {
      "file_path": "backend/minimal_api.py",
      "size": 5051,
      "lines": 182,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.post\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "backend/agent_communicator.py": {
      "file_path": "backend/agent_communicator.py",
      "size": 9441,
      "lines": 226,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.post\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "backend/simple_api.py": {
      "file_path": "backend/simple_api.py",
      "size": 91946,
      "lines": 2443,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.post\\s*\\(",
        "\\.put\\s*\\(",
        "\\.delete\\s*\\(",
        "http://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "backend/ollama_service.py": {
      "file_path": "backend/ollama_service.py",
      "size": 15040,
      "lines": 368,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.post\\s*\\(",
        "\\.delete\\s*\\(",
        "http://\\w+",
        "https://\\w+"
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 2 error indicators"
    },
    "backend/strands_api.py": {
      "file_path": "backend/strands_api.py",
      "size": 10547,
      "lines": 301,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.post\\s*\\(",
        "\\.delete\\s*\\("
      ],
      "status": "ERROR",
      "confidence": 90,
      "reason": "Contains 1 error indicators"
    },
    "backend/workflow_api.py": {
      "file_path": "backend/workflow_api.py",
      "size": 11033,
      "lines": 301,
      "imports": [],
      "exports": [],
      "functions": [],
      "components": [],
      "hooks": [],
      "api_calls": [
        "\\.get\\s*\\(",
        "\\.post\\s*\\("
      ],
      "status": "UNKNOWN",
      "confidence": 30,
      "reason": "Cannot determine functionality level"
    }
  }
}