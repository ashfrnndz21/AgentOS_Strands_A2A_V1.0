
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dkjtdubmpcatqtlzlthf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRranRkdWJtcGNhdHF0bHpsdGhmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc0OTM2ODEsImV4cCI6MjA2MzA2OTY4MX0.OgNWv5RHpR851BSz5TPA4YHZ8k0bI3P4oe_1-9NL3nk";

// Define custom type that includes our RPC functions
export type MySupabaseClient = ReturnType<typeof createClient<Database>> & {
  rpc<T = any>(
    fn: 'check_table_exists',
    params: { table_name: string }
  ): Promise<{ data: boolean; error: any }>;
  rpc<T = any>(
    fn: 'get_agent_memory',
    params: { p_agent_id: string }
  ): Promise<{ data: any; error: any }>;
  rpc<T = any>(
    fn: 'save_agent_memory',
    params: { p_agent_id: string; p_chat_history: any; p_memory_type: string }
  ): Promise<{ data: any; error: any }>;
  rpc<T = any>(
    fn: 'delete_agent_memory',
    params: { p_agent_id: string }
  ): Promise<{ data: any; error: any }>;
  rpc<T = any>(
    fn: 'list_agent_memories',
    params?: {}
  ): Promise<{ data: Array<{ agent_id: string; memory_type: string; message_count: number; updated_at: string }>; error: any }>;
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create client with proper types
const supabaseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Cast to our custom type that includes RPC functions
export const supabase = supabaseClient as unknown as MySupabaseClient;
